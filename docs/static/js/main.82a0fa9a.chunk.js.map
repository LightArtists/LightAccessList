{"version":3,"sources":["utils/packing.js","modules/data.js","utils/data.js","modules/PhaseContext.js","modules/CollectionContext.js","assets/images/no-image.png","components/collections-list/CollectionThumb.js","components/comnmon/ConfirmationModal.js","components/collections-list/CollectionGeneralData.js","components/phases/AddressTable.js","components/phases/DropPhase.js","components/phases/DropPhases.js","components/image-list/ImageslistThumb.js","modules/ImageContext.js","components/image-list/ImageForm.js","components/image-list/Images.js","components/collections-list/CollectionEditView.js","components/collections-list/Collections.js","components/artists/ArtistsThumb.js","components/artists/Artists.js","components/Main.js","App.js","index.js"],"names":["packAddressAndQuantity","address","quantity","num","addressAsNumberString","web3","utils","hexToNumberString","bytesToBytesN","hexToHexBytes","addressToBytes32","addressBN","BN","quantityAsNumberString","toHex","shrnQuantity","shrn","result","or","console","log","toString","padLeft","hex","bytesLength","bytes","hexToBytes","length","concat","unshift","bytesToHex","n","Array","isArray","lengthDiff","Error","emptyBytesN","repeat","split","map","i","parseInt","newBytes","defaultNewCollection","name","title","collectionID","categoryName","categoryType","itemsCount","author","path","dropId","artists","dropPhases","tags","aboutCollection","description","publicByte32","parseArtists","item","Object","keys","key","j","toLowerCase","replace","imageEx","test","fullImageSrc","imageSrc","push","sort","a","b","localeCompare","mapFields","COLLECTION_IMAGE_BASE_URL","mapCollectionImages","collectionData","imageData","images","jsonItem","index","data","mappedData","reduce","newObject","sourceKey","image","imageDir","fileName","smallImage","internalNumber","collection","id","subtitle","artistImg","artist","find","findArtistImageFullPathByName","startIdNumber","findIndex","zeroTokenNumber","forEach","offset","tokenId","PhaseContext","React","createContext","counter","PhaseProvider","children","onSaveChanges","useState","accessList","startDate","Date","phases","setPhases","phasesData","setPhasesData","useEffect","dtopPhases","startTimestamp","price","Web3","fromWei","priceInWei","addressItem","uid","isPublic","onAddPhase","useCallback","pahsesArr","onRemovePhase","phase","filter","getPhase","updatePhase","newPhase","phaseIndex","toWei","addAddressToPhase","setAddressesToPhase","addresses","removeAddressFromPhase","itemId","listItem","generateMercleTreeForPhase","warning","checkAddress","warn","isAddress","publicAccessList","accessListProof","newAccessList","accessListPhaseDrop","markleTreeData","leafs","leafValue","tree","MerkleTree","keccak256","sortPairs","results","root","getRoot","proof","getHexProof","proofPositional","getPositionalHexProof","toMarkleTree","getTime","rootHash","phaseDrop","phaseDropStr","prepareDropPhases","alert","error","dropPhasesRemixStr","prev","next","substring","saveDropPhases","generateAndSaveJSON","TextEncoder","encode","JSON","stringify","blob","Blob","type","saveAs","savePhasesJSON","updatePhaseAccessListItem","itemIndex","Provider","value","usePhaseContext","useContext","CollectionContext","CollectionProvider","setArtists","collections","setCollections","artistOptions","setArtistOptions","ls","artistsNames","arr","saveCollectionsData","newData","oldData","err","loadCollections","file","reader","FileReader","Promise","resolve","reject","addEventListener","event","parse","target","coll","e","readAsText","loadArtists","addCollection","defaultName","existNames","includes","maxNum","Math","max","isNaN","suffix","getNextName","removeCollection","collectionId","updateCollection","foundCollectionIndex","isMain","clearAllCollectionData","saveCollectionJSON","categoryOptions","useMemo","useCollectionContext","CollectionThumb","onRemove","onShow","onRemoveItem","onShowMore","firstImage","NoImage","Card","style","width","margin","padding","Header","Row","Col","lg","Title","CloseButton","onClick","Badge","bg","isRandom","Img","variant","src","className","Body","Text","Button","size","ConfirmationModal","onConfirm","show","handleClose","Modal","onHide","backdrop","keyboard","closeButton","Footer","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","formItemLayoutWithOutLabel","CollectionGeneralData","Form","useForm","form","setCategoryType","onFinish","values","onCategorySelect","option","onSearch","initialValues","maxWidth","scrollToFirstError","Item","label","tooltip","Group","compact","noStyle","rules","required","message","placeholder","options","onSelect","valuePropName","min","defaultValue","TextArea","showCount","List","fields","add","remove","errors","field","validateTrigger","whitespace","MinusCircleOutlined","htmlType","papaparseOptions","header","dynamicTyping","skipEmptyLines","AddressTable","window","users","row","setRow","addNewRow","hash","removeRow","addAddress","addQuantity","clickHandler","onFileLoaded","fileInfo","originalFile","parsedData","shift","parseAddressesCSV","Container","Alert","toLocaleString","selected","showTimeSelect","timeFormat","onChange","date","FormControl","step","Check","checked","parserOptions","Table","striped","bordered","hover","classname","icon","faMinusCircle","faPlusCircle","DropPhase","_onRemovePhase","info","Accordion","eventKey","DropPhases","onSaveClicked","onSaveDropPhasesClicked","ImageThumb","onEdit","onDownloadIPFS","onEditImage","onDownload","join","ImageContext","ImageProvider","permanent","setImages","saveChanges","removeAllImages","imageId","removeImage","loadImagesFromCSV","saveImage","imageIndex","newId","saveIPFSData","imageIPFS","external_url","license_document","attributes","trait_type","tone","set","cameraManufacturer","camera","country","license","getFullYear","mapImageToIPFS","ImageForm","resetFields","setFieldsValue","onAuthorSelect","setFieldValue","onImageChange","valueArr","onAddTag","getFieldValue","marginTop","disabled","filterOption","inputValue","toUpperCase","indexOf","PlusOutlined","parseOptions","Images","editingImage","setEditingImage","onAddImage","toast","CollectionViewEdit","success","Tabs","defaultActiveKey","Tab","Collections","onCollectionEdit","showConfirmPopup","setShowConfirmPopup","handler","confirmHandler","setConfirmHandler","onConfirmation","confirmed","onAddCollection","onLoadCollection","onCollectionShow","onRemoveCollection","onClearAllData","accepts","maxFileSize","minFileSize","clickable","ArtistThumb","nickname","website","href","bio","url","Artists","onLoadArtists","fileData","Main","editingCollection","setEditingCollection","activeTabKey","setActiveTabKey","onChangeTab","activeKey","App","delay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82a0fa9a.chunk.js","sourcesContent":["import keccak256 from \"keccak256\";\nimport MerkleTree from \"merkletreejs\";\nimport Web3 from \"web3\";\nimport web3 from \"web3\";\n\nexport function toMarkleTree(data) {\n  const leafs = data.map((data) => {\n    const { quantity, address } = data;\n    return {\n      ...data,\n      leafValue: packAddressAndQuantity(address, quantity),\n    };\n  });\n  const tree = new MerkleTree(\n    leafs.map((item) => item.leafValue),\n    keccak256,\n    { sortPairs: true }\n  );\n  const root = \"0x\" + tree.getRoot().toString(\"hex\");\n  const results = {\n    root,\n    data: leafs.map((data, index) => ({\n      ...data,\n      proof: tree.getHexProof(data.leafValue),\n      proofPositional: tree.getPositionalHexProof(data.leafValue, index),\n    })),\n  };\n  console.log(\"results\", tree.toString()); // true\n  console.log(\"results\", results); // true\n  return results;\n}\n\nexport function packAddressAndQuantity(address, quantity) {\n  const addressAsNumberString = web3.utils.hexToNumberString(\n    addressToBytes32(address)\n  );\n  const addressBN = new web3.utils.BN(addressAsNumberString);\n  const quantityAsNumberString = web3.utils.hexToNumberString(\n    numberToBytes32(quantity)\n  );\n  const quantityBN = new web3.utils.BN(quantityAsNumberString);\n  const shrnQuantity = quantityBN.shrn(160);\n  const result = addressBN.or(shrnQuantity);\n  console.log(\n    \"Add: 0x\" + addressBN.toString(16),\n    \" |||| Qunt: 0x\" + shrnQuantity.toString(16),\n    \" ||||| result: 0x\" + result.toString(16)\n  );\n  return \"0x\" + web3.utils.padLeft(result, 64);\n}\n\nfunction hexToHexBytes(hex, bytesLength) {\n  const bytes = web3.utils.hexToBytes(hex);\n  if (!bytesLength || bytesLength === bytes.length) {\n    return bytes.concat([]);\n  }\n\n  if (bytesLength < bytes.length) {\n    throw \"Data will be lost\";\n  }\n  while (bytesLength != bytes.length) {\n    bytes.unshift(0);\n  }\n  return web3.utils.bytesToHex(bytes);\n}\n\nfunction bytesToBytesN(bytes, n) {\n  if (!Array.isArray(bytes)) {\n    bytes = web3.utils.hexToBytes(bytes);\n  }\n  const lengthDiff = n - bytes.length;\n  if (lengthDiff < 0) {\n    throw new Error(\"Data loss\");\n  }\n  if (lengthDiff === 0) {\n    return bytes.concat([]);\n  }\n  // lengthDiff bytes 0\n  const emptyBytesN = \"0\"\n    .repeat(lengthDiff)\n    .split(\"\")\n    .map((i) => parseInt(i));\n  // contact 2 bytes\n  const newBytes = bytes.concat(emptyBytesN);\n  // create n bytes hex address\n  return web3.utils.bytesToHex(newBytes);\n}\n\nfunction addressToBytes32(address) {\n  // convert address string to bytes(20)\n  const addressBytes20 = hexToHexBytes(address);\n  return bytesToBytesN(addressBytes20, 32);\n}\n\nfunction numberToBytes32(num) {\n  // convert number to hex\n  const hex = web3.utils.toHex(num);\n  const bytes12 = hexToHexBytes(hex, 12);\n  const bytes32 = bytesToBytesN(bytes12, 32);\n  return bytes32;\n}\n\nexport function hashePassword(string) {\n  //const abiEndcoded = web3.eth.abi.encodeParameters(string);\n  if (!string) {\n    return \"\";\n  }\n  const web3 = new Web3();\n  const bytes32Password = web3.utils.asciiToHex(string);\n  const abiEndcoded = web3.eth.abi.encodeParameters(\n    [\"bytes\"],\n    [bytes32Password]\n  );\n  return web3.utils.toHex(keccak256(abiEndcoded));\n}\n","export const defaultNewCollection = {\n  name: \"New Collection\",\n  title: \"New(2022)\",\n  collectionID: \"new\",\n  categoryName: \"Annual Series\",\n  categoryType: \"annual\",\n  itemsCount: 200,\n  author: \"a collective\",\n  path: \"/new\",\n  dropId: 10,\n  artists: 54,\n  dropPhases: [],\n  tags: [],\n  aboutCollection: \"\",\n  description:\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n};\n","import { defaultNewCollection } from \"../modules/data\";\n\nexport const publicByte32 =\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nexport function parseAddressesCSV(data) {\n  const newData = data.map((arr, index) => ({\n    address: arr[0],\n    quantity: arr[1],\n    id: index,\n  }));\n  if (isNaN(parseInt(newData[0].quantity))) {\n    newData.shift();\n  }\n  return newData;\n}\n\nexport function getNextName(defaultName, existNames) {\n  if (!existNames.includes(defaultName)) {\n    return defaultName;\n  }\n\n  let maxNum = Math.max(\n    0,\n    ...existNames\n      .map((name) =>\n        parseInt(name.replace(defaultName, \"\").replace(/[\\s-]/gm, \"\"))\n      )\n      .filter((item) => !isNaN(item))\n  );\n  if (!maxNum) {\n    maxNum = 1;\n  } else {\n    maxNum++;\n  }\n  const suffix = ` - ${maxNum}`;\n  return defaultName + suffix;\n}\n\nexport const parseArtists = (artists) => {\n  let result = [];\n  for (let i = 0; i < artists.length; i++) {\n    let item = {};\n    Object.keys(artists[i]).map((key, j) => {\n      item[key.toLowerCase()] = artists[i][key];\n    });\n    item['url'] = item['name'].toLowerCase().replace(/ /gm, '-')\n    item['profile name'] = item['profile image'].replace(/ /gm, '')\n    const imageEx = /\\.(jpe?g|png)$/i.test(item['profile image']) ? '' : '.jpg';\n    const fullImageSrc = `https://light.art/images/artists/${item['profile image']}${imageEx}`;\n    const imageSrc = `../../../images/artists/${item['profile image']}${imageEx}`;\n    item.fullImageSrc = fullImageSrc;\n    item.imageSrc = imageSrc;\n    result.push(item);\n  }\n  result = result.sort((a, b) => a['profile image'].localeCompare(b['profile image']))\n  return result;\n};\n\n\nconst mapFields = {\n  'id': 'id',\n  'artist': 'artist',\n  'Number': 'internalNumber',\n  'name': 'title',\n  'set' : 'set',\n  'file': 'fileName',\n  'description': 'description',\n  'genres': 'tags',\n  'tone': 'tone',\n  'camera': 'camera',\n  'camera manufacturer': 'cameraManufacturer',\n  'location': 'location',\n  'license': 'license',\n  'country': 'country',\n  'image': 'imageIPFS',\n  'composite': 'composite'\n}\n\nconst COLLECTION_IMAGE_BASE_URL = 'https://light-art.s3.us-east-1.amazonaws.com/collections/';\n\nexport function mapCollectionImages(collectionData, imageData, artists) {\n  const images = imageData.map((jsonItem, index) => {\n    const mappedData = mapCollectionImage(jsonItem);\n    mappedData.image = `${COLLECTION_IMAGE_BASE_URL}${collectionData.imageDir}/${mappedData.fileName}.jpg`;\n    mappedData.smallImage = `${COLLECTION_IMAGE_BASE_URL}${collectionData.imageDir}/${mappedData.fileName}-small.jpg`;\n    mappedData.internalNumber = parseInt(mappedData.internalNumber);\n    mappedData.collection = collectionData.name;\n    if (!mappedData.id) {\n      mappedData.id = index;\n    }\n    if (!mappedData.subtitle) {\n      mappedData.subtitle = collectionData.name;\n    }\n    if (!mappedData.artistImg) {\n      mappedData.artistImg = findArtistImageFullPathByName(artists, mappedData.artist);\n    }\n    mappedData.tags = mappedData.tags ? mappedData.tags.split(',') : [];\n    return mappedData;\n  });\n  if (!collectionData.startIdNumber) {\n    return images;\n  }\n\n  const startIndex = images.findIndex(item => item.internalNumber === collectionData.zeroTokenNumber);\n\n  if (startIndex === -1) {\n    return images;\n  }\n\n  images.concat().sort((a, b) => a.internalNumber - b.internalNumber).forEach((item, index) => {\n    let offset = (index - collectionData.zeroTokenNumber);\n    if (offset < 0) {\n      offset += images.length;\n    }\n    item.tokenId = collectionData.startIdNumber + offset;\n  });\n\n  return images\n}\n\nfunction mapCollectionImage(data) {\n  return Object.keys(mapFields).reduce((newObject, sourceKey) => {\n    const targetKey = mapFields[sourceKey];\n    newObject[targetKey] = data[sourceKey] || '';\n    return newObject;\n  }, {})\n}\n\nexport function mapImageToIPFS(image, collection) {\n  const data = {\n    name: image.title,\n    description: image.description,\n    image: image.imageIPFS,\n    external_url: \"https://light.art\",\n    license_document: \"ipfs://bafkreidvs3sgzpuoxaubpvg5gax2luj5j7422l2i5icfqmgtplk5medw3u\",\n    attributes: [],\n  }\n  data.attributes.push({\n    trait_type: \"Artist\",\n    value: image.artist,\n  });\n  data.attributes.push({\n    trait_type: \"Tone\",\n    value: image.tone,\n  });\n  data.attributes.push({\n    trait_type: \"Set\",\n    value: image.set,\n  });\n  data.attributes.push({\n    trait_type: \"Camera Manufacturer\",\n    value: image.cameraManufacturer,\n  });\n  data.attributes.push({\n    trait_type: \"Camera\",\n    value: image.camera,\n  });\n  data.attributes.push({\n    trait_type: \"Country\",\n    value: image.country,\n  });\n  data.attributes.push({\n    trait_type: \"Genres\",\n    value: image?.tags?.join(',') || [],\n  })\n  data.attributes.push({\n    trait_type: \"License\",\n    value: image.license,\n  });\n  data.attributes.push({\n    trait_type: \"Collection\",\n    value: collection.name,\n  });\n  data.attributes.push({\n    trait_type: \"Collection Year\",\n    value: (new Date()).getFullYear(),\n  });\n  return data;\n}\n\nfunction findArtistImageFullPathByName(artists, name) {\n  const artist = artists.find(item => item.name?.toLowerCase() == name?.toLowerCase());\n  if (!artist) {\n    return '';\n  }\n  return artist.imageSrc;\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { saveAs } from \"file-saver\";\nimport { toMarkleTree } from \"../utils/packing\";\nimport Web3 from \"web3\";\nimport { publicByte32 } from \"../utils/data\";\nimport { uid } from \"uid\";\n\nexport const PhaseContext = React.createContext({});\n\nlet counter = 1;\nconsole.log(\"counter init: \", counter);\n\nexport const PhaseProvider = ({ children, collection, onSaveChanges }) => {\n  const [phases, setPhases] = useState([\n    { index: counter, accessList: [], startDate: new Date() },\n  ]);\n  const [phasesData, setPhasesData] = useState({});\n\n  useEffect(() => {\n    const dtopPhases = (collection?.dropPhases || []).map((item) => {\n      return {\n        index: ++counter,\n        startDate: new Date(item.startTimestamp * 1000),\n        price: item.price ? Web3.utils.fromWei(item.price) : 0,\n        priceInWei: item.price ? item.price : 0,\n        accessList: (item.accessList?.concat() || []).map((addressItem) => ({\n          ...addressItem,\n          id: uid(),\n        })),\n        isPublic: !!item.isPublic,\n      };\n    });\n    setPhases(dtopPhases);\n  }, [collection]);\n\n  const onAddPhase = useCallback(() => {\n    console.log(\"-counter: \", counter);\n    counter++;\n    setPhases((pahsesArr) => [\n      ...pahsesArr,\n      { index: counter, accessList: [], startDate: new Date() },\n    ]);\n    console.log(\"+counter: \", counter);\n  }, [setPhases]);\n\n  const onRemovePhase = useCallback(\n    (phase) => {\n      setPhases((phases) => phases.filter((item) => item !== phase));\n    },\n    [setPhases]\n  );\n\n  const getPhase = useCallback(\n    (index) => {\n      return phases.find((item) => item.index === index);\n    },\n    [phases]\n  );\n\n  const updatePhase = useCallback(\n    (index, newPhase) => {\n      const phaseIndex = phases.findIndex((item) => item.index === index);\n      if (newPhase.price) {\n        newPhase.priceInWei = Web3.utils.toWei(newPhase.price);\n      }\n      phases[phaseIndex] = { ...phases[phaseIndex], ...newPhase };\n      console.log(\"Phase update\", phases[phaseIndex]);\n      setPhases([...phases]);\n    },\n    [phases]\n  );\n\n  const addAddressToPhase = useCallback(\n    (index, item) => {\n      const phase = getPhase(index);\n      phase.accessList = phase.accessList || [];\n      phase.accessList.push(item);\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const setAddressesToPhase = useCallback(\n    (index, addresses) => {\n      const phase = getPhase(index);\n      phase.accessList = addresses || [];\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const removeAddressFromPhase = useCallback(\n    (index, itemId) => {\n      const phase = getPhase(index);\n      phase.accessList = phase.accessList || [];\n      phase.accessList = phase.accessList.filter(\n        (listItem) => listItem.id !== itemId\n      );\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const generateMercleTreeForPhase = useCallback(\n    (index) => {\n      const phase = getPhase(index);\n      let warning;\n\n      if (!phase.price) {\n        updatePhase(index, { warning: \"Please enther the price!\" });\n        return false;\n      }\n\n      if (!phase.startDate) {\n        updatePhase(index, { warning: \"Please enther correct start date!\" });\n        return false;\n      }\n\n      if (!phase.isPublic) {\n        warning = phase.accessList.filter(\n          (item) => !item.address || !item.quantity\n        );\n        if (warning.length) {\n          updatePhase(index, { warning: \"Fill in all fields!\" });\n          return false;\n        }\n\n        let checkAddress = \"\";\n        phase.accessList.forEach((item, i) => {\n          item.warn = false;\n          if (!Web3.utils.isAddress(item.address)) {\n            checkAddress += `${i + 1},`;\n            item.warn = true;\n          }\n        });\n\n        if (checkAddress.length) {\n          updatePhase(index, {\n            warning: `The address in row ${checkAddress} is not correct.`,\n          });\n          return false;\n        }\n      }\n\n      const publicAccessList = [publicByte32];\n      let accessListProof = publicByte32;\n      let newAccessList = phase.accessList;\n      let accessListPhaseDrop = publicAccessList;\n      if (!phase.isPublic) {\n        const newArr = [...phase.accessList];\n        const markleTreeData = toMarkleTree(newArr);\n        newAccessList = markleTreeData.data;\n        accessListPhaseDrop = newAccessList.map((item) => ({\n          address: item.address,\n          quantity: item.quantity,\n          proof: item.proof,\n        }));\n        accessListProof = markleTreeData.root;\n      }\n\n      const startTimestamp = parseInt(phase.startDate.getTime() / 1000);\n      updatePhase(index, {\n        warning: \"\",\n        accessList: newAccessList,\n        rootHash: accessListProof,\n        startTimestamp,\n        phaseDrop: {\n          isPublic: phase.isPublic,\n          startTimestamp,\n          price: phase.priceInWei,\n          accessList: accessListPhaseDrop,\n          rootHash: accessListProof,\n        },\n        phaseDropStr: `[${startTimestamp}, ${phase.priceInWei}, \"${accessListProof}\"]`,\n      });\n      return newAccessList;\n    },\n    [phases, updatePhase, getPhase]\n  );\n\n  const prepareDropPhases = useCallback(() => {\n    const invalidPhase = phases.find(\n      (phase) => generateMercleTreeForPhase(phase.index) === false\n    );\n    if (invalidPhase) {\n      alert(\"Invalid phase exist. Please correct it and try again.\");\n      return { error: true };\n    }\n\n    let dropPhases = [];\n    const sortedPhases = phases.sort(\n      (a, b) => a.startDate.getTime() - b.startDate.getTime()\n    );\n    let dropPhasesRemixStr = sortedPhases.reduce((prev, next) => {\n      prev += next.phaseDropStr + \",\";\n      dropPhases.push(next.phaseDrop);\n      return prev;\n    }, \"[\");\n\n    dropPhases = dropPhases.sort((a, b) => a.startTimestamp - b.startTimestamp);\n    dropPhasesRemixStr =\n      dropPhasesRemixStr.substring(0, dropPhasesRemixStr.length - 1) + \"]\";\n\n    setPhasesData({\n      dropPhasesRemixStr,\n      dropPhases,\n    });\n    return {\n      dropPhasesRemixStr,\n      dropPhases,\n    };\n  }, [phases, getPhase, generateMercleTreeForPhase, onSaveChanges]);\n\n  const saveDropPhases = useCallback(() => {\n    const { dropPhases, error } = prepareDropPhases();\n    if (error) {\n      return;\n    }\n    onSaveChanges({\n      ...collection,\n      dropPhases,\n    });\n  }, [prepareDropPhases, onSaveChanges, collection]);\n\n  const generateAndSaveJSON = useCallback(() => {\n    const { dropPhases, error } = prepareDropPhases();\n    if (error) {\n      return;\n    }\n    const bytes = new TextEncoder().encode(JSON.stringify(dropPhases));\n    const blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, \"access-list.json\");\n  }, [prepareDropPhases, saveAs]);\n\n  const savePhasesJSON = useCallback(\n    (index) => {\n      const phase = getPhase(index);\n      if (!phase.accessList || !phase.accessList.length) {\n        return;\n      }\n      const bytes = new TextEncoder().encode(JSON.stringify(phase.accessList));\n      var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n      saveAs(blob, \"access-list.json\");\n    },\n    [phases, getPhase]\n  );\n\n  const updatePhaseAccessListItem = useCallback(\n    (phaseIndex, itemId, item) => {\n      const phase = getPhase(phaseIndex);\n      phase.accessList = phase.accessList.concat();\n      const itemIndex = phase.accessList.findIndex(\n        (listItem) => listItem.id == itemId\n      );\n      phase.accessList[itemIndex] = { ...phase.accessList[itemIndex], ...item };\n      const newAccessList = phase.accessList.map((item) => ({\n        ...item,\n        leafValue: \"\",\n        warn: false,\n        proof: false,\n      }));\n      updatePhase(phaseIndex, { accessList: newAccessList, rootHash: \"\" });\n    },\n    [phases, getPhase]\n  );\n\n  return (\n    <PhaseContext.Provider\n      value={{\n        phases,\n        onAddPhase,\n        savePhasesJSON,\n        updatePhaseAccessListItem,\n        onRemovePhase,\n        addAddressToPhase,\n        generateMercleTreeForPhase,\n        setAddressesToPhase,\n        updatePhase,\n        saveDropPhases,\n        phasesData,\n        generateAndSaveJSON,\n        removeAddressFromPhase,\n      }}\n    >\n      {children}\n    </PhaseContext.Provider>\n  );\n};\n\nexport const usePhaseContext = () => React.useContext(PhaseContext);\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport * as ls from \"local-storage\";\nimport { saveAs } from \"file-saver\";\nimport { uid } from \"uid\";\nimport { defaultNewCollection } from \"./data\";\nimport {getNextName, parseArtists} from \"../utils/data\";\n\nexport const CollectionContext = React.createContext({});\n\nexport const CollectionProvider = ({ children }) => {\n  const [artists, setArtists] = useState([]);\n  const [collections, setCollections] = useState([]);\n  const [artistOptions, setArtistOptions] = useState([]);\n\n  useEffect(() => {\n    const collections = ls.get(\"collections\");\n    const artists = ls.get(\"artists\");\n    if (collections && collections.length) {\n      setCollections(collections);\n    }\n    if (artists && artists.length) {\n      setArtists(artists);\n    }\n  }, []);\n\n  const updateArtistOptions = useEffect(\n    () => {\n      const artistsNames = artists\n        .map((artist) => ({\n          name: artist.name,\n          value: artist.name,\n          artistImg: artist.imageSrc,\n        }))\n        .filter(\n          (artist, index, arr) =>\n            index === arr.findIndex((a) => a.name === artist.name)\n        );\n      setArtistOptions(artistsNames);\n    },\n    [artists]\n  );\n\n  const saveCollectionsData = useCallback(\n    (newData) => {\n      if (!newData) {\n        throw new Error(\"Cannot set collection to null\");\n      }\n      try {\n        setCollections((oldData) => {\n          if (newData === true) {\n            ls.set(\"collections\", oldData);\n            return oldData;\n          }\n          if (Array.isArray(newData)) {\n            ls.set(\"collections\", newData);\n            return newData;\n          }\n          const results = newData(oldData);\n          ls.set(\"collections\", results);\n          return results;\n        });\n      } catch (err) {\n        console.log(err);\n        alert(\"Could not save progress.\");\n      }\n    },\n    [setCollections]\n  );\n\n  const loadCollections = useCallback(\n    async (file) => {\n      const reader = new FileReader();\n      return new Promise((resolve, reject) => {\n        reader.addEventListener(\"load\", (event) => {\n          try {\n            const data = JSON.parse(event.target.result);\n            data.reduce((coll, map) => {\n              if (!coll.id) {\n                coll.id = uid();\n              }\n              if (coll.id in map) {\n                coll.id = uid();\n              }\n              map[coll.id] = true;\n              return map;\n            }, {});\n            saveCollectionsData((collections) => [...collections, ...data]);\n            resolve(data);\n          } catch (e) {\n            reject(new Error(\"Cant parse file data\"));\n          }\n        });\n        reader.addEventListener(\"error\", (event) => {\n          reject(new Error(\"Error during data loading\"));\n        });\n        reader.readAsText(file);\n      });\n    },\n    [saveCollectionsData]\n  );\n\n  const loadArtists = useCallback(\n    async (data) => {\n      const artists = parseArtists(data);\n      setArtists(artists);\n      ls.set(\"artists\", artists);\n    },\n    [saveCollectionsData]\n  );\n\n  const addCollection = useCallback(() => {\n    saveCollectionsData((collections) => {\n      const name = getNextName(\n        defaultNewCollection.name,\n        collections.map((item) => item.name)\n      );\n      return [\n        ...collections,\n        {\n          ...defaultNewCollection,\n          name,\n          id: uid(),\n        },\n      ];\n    });\n  }, [saveCollectionsData]);\n\n  const removeCollection = useCallback(\n    (collectionId) => {\n      saveCollectionsData((collections) =>\n        collections.filter((collection) => collection.id !== collectionId)\n      );\n    },\n    [saveCollectionsData]\n  );\n\n  const getCollectionById = useCallback(\n    (collectionId) => {\n      return collections.find((item) => item.id === collectionId);\n    },\n    [collections]\n  );\n\n  const updateCollection = useCallback(\n    (collection) => {\n      const foundCollectionIndex = collections.findIndex(\n        (item) => item.id === collection.id\n      );\n      if (foundCollectionIndex === -1) {\n        return false;\n      }\n      if (collection.isMain) {\n        collections.forEach((coll, index) => {\n          if (index === foundCollectionIndex) {\n            return;\n          }\n          collections[index] = {...collections[index], isMain: false};\n        })\n      }\n      collections[foundCollectionIndex] = {\n        ...collections[foundCollectionIndex],\n        ...collection,\n      };\n      saveCollectionsData(collections);\n      return true;\n    },\n    [collections, saveCollectionsData]\n  );\n\n  const clearAllCollectionData = useCallback(\n    (index, newPhase) => {\n      saveCollectionsData([]);\n      ls.clear();\n    },\n    [saveCollectionsData]\n  );\n\n  const saveCollectionJSON = useCallback(() => {\n    if (!collections.length) {\n      return;\n    }\n    saveCollectionsData(collections);\n    const bytes = new TextEncoder().encode(JSON.stringify(collections));\n    var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, \"collections.json\");\n  }, [collections, saveCollectionsData]);\n\n  const categoryOptions = useMemo(() => {\n    return collections\n      .map((collection) => ({\n        value: collection.categoryName,\n        type: collection.categoryType,\n      }))\n      .filter(\n        (item, index, collections) =>\n          collections.findIndex((a) => a.categoryName === item.categoryName) ===\n          index\n      );\n  }, [collections]);\n\n  return (\n    <CollectionContext.Provider\n      value={{\n        collections,\n        loadArtists,\n        artists,\n        artistOptions,\n        clearAllCollectionData,\n        addCollection,\n        updateCollection,\n        saveCollectionsData,\n        saveCollectionJSON,\n        removeCollection,\n        loadCollections,\n        categoryOptions,\n      }}\n    >\n      {children}\n    </CollectionContext.Provider>\n  );\n};\n\nexport const useCollectionContext = () => React.useContext(CollectionContext);\n","export default __webpack_public_path__ + \"static/media/no-image.baba1a73.png\";","import NoImage from \"../../assets/images/no-image.png\";\nimport {Badge, Button, Card, Col, Row} from \"react-bootstrap\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport { useCallback } from \"react\";\n\nexport function CollectionThumb({ collection, onRemove, onShow }) {\n  const onRemoveItem = useCallback(\n    (item) => {\n      onRemove(collection.id);\n    },\n    [collection, onRemove]\n  );\n\n  const onShowMore = useCallback(\n    (item) => {\n      onShow(collection);\n    },\n    [collection, onShow]\n  );\n\n  const firstImage =\n    collection.images && collection.images.length > 0\n      ? collection.images[0]\n      : { smallImage: NoImage };\n  return (\n    <Card style={{ width: \"18rem\", margin: \"10px\", padding: 0 }}>\n      <Card.Header >\n        <Row>\n          <Col lg={10}>\n            <Card.Title>{collection.name}</Card.Title>\n            <p>{collection.categoryName}</p>\n          </Col>\n          <Col lg={2}>\n            <CloseButton onClick={onRemoveItem} />\n          </Col>\n        </Row>\n        {collection.isMain && <Badge bg=\"primary\">Primary</Badge>}{' '}\n        {collection.isRandom && <Badge bg=\"secondary\">Random</Badge>}\n      </Card.Header>\n      <Card.Img\n        variant=\"top\"\n        src={firstImage.smallImage}\n        className=\"thumb-image\"\n      />\n      <Card.Body>\n        <Card.Title>\n          {collection.images?.length || 0} / {collection.itemsCount} images\n          loaded\n        </Card.Title>\n        <Card.Text>{collection.description}</Card.Text>\n        <div className=\"d-grid gap-2\">\n          <Button variant=\"primary\" size=\"lg\" onClick={onShowMore}>\n            Show More\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function ConfirmationModal({ onConfirm, show }) {\n  const handleClose = () => {\n    onConfirm(false);\n  };\n  const handleConfirm = () => {\n    onConfirm(true);\n  };\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Action</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want perform this action?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirm}>\n            Yep!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import {AutoComplete, Button, Checkbox, Form, Input, InputNumber, Switch} from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nexport function CollectionGeneralData({\n  collection,\n  onSaveChanges,\n  categoryOptions,\n}) {\n  const [form] = Form.useForm();\n  const [categoryType, setCategoryType] = useState();\n\n  useEffect(() => {\n    setCategoryType(collection?.categoryType || \"\");\n  }, [collection]);\n\n  const onFinish = useCallback(\n    (values: any) => {\n      console.log(\"Received values of form: \", values);\n      if (categoryType) {\n        values.categoryType = categoryType;\n      } else {\n        values.categoryType = values.categoryName\n          .toLowerCase()\n          .replace(/\\s/gm, \"_\");\n      }\n      onSaveChanges &&\n        onSaveChanges({\n          ...collection,\n          ...values,\n        });\n    },\n    [onSaveChanges, categoryType]\n  );\n\n  const onCategorySelect = useCallback(\n    (value, option: any) => {\n      setCategoryType(option.type);\n    },\n    [setCategoryType]\n  );\n\n  const onSearch = useCallback(\n    (option: any) => {\n      setCategoryType(\"\");\n    },\n    [setCategoryType]\n  );\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={collection}\n      style={{ maxWidth: 900 }}\n      scrollToFirstError\n    >\n      <Form.Item label=\"Name\" tooltip=\"Collection Name\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"name\"\n            noStyle\n            rules={[{ required: true, message: \"Name is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"title\"\n            noStyle\n            rules={[{ required: true, message: \"Title is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input title\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Category\">\n        <Form.Item\n          name=\"categoryName\"\n          noStyle\n          rules={[{ required: true, message: \"Category name is required\" }]}\n        >\n          <AutoComplete\n            options={categoryOptions}\n            onSelect={onCategorySelect}\n            onSearch={onSearch}\n            style={{ width: \"100%\" }}\n            placeholder=\"Category Name\"\n          >\n            <Input />\n          </AutoComplete>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item label=\"Drop ID / Path / Collection ID\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"dropId\"\n            noStyle\n            rules={[{ required: true, message: \"Drop id is required\" }]}\n          >\n            <Input style={{ width: \"20%\" }} placeholder=\"Drop id\" />\n          </Form.Item>\n          <Form.Item\n            name=\"path\"\n            noStyle\n            rules={[{ required: true, message: \"Collection url required\" }]}\n          >\n            <Input\n              style={{ width: \"40%\" }}\n              placeholder=\"Collection Path (/alpha) id\"\n            />\n          </Form.Item>\n          <Form.Item name=\"collectionID\" noStyle>\n            <Input\n              style={{ width: \"40%\" }}\n              placeholder=\"Unique Collection Slug\"\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\" \">\n        <Input.Group >\n          <Form.Item\n            label=\"Main\"\n            valuePropName=\"checked\"\n            name=\"isMain\"\n            wrapperCol={{ offset: 8, span: 16 }}\n            noStyle\n          >\n            <Checkbox style={{ width: \"40%\" }}>Main Collection</Checkbox>\n          </Form.Item>\n          <Form.Item\n            label=\"Random Mint\"\n            valuePropName=\"checked\"\n            name=\"isRandom\"\n            noStyle\n          >\n            <Checkbox style={{ width: \"40%\" }}>Random</Checkbox>\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Author / Authors Count\">\n        <Input.Group compact>\n          <Form.Item name=\"author\" noStyle>\n            <Input style={{ width: \"70%\" }} placeholder=\"Authors name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"artists\"\n            noStyle\n            rules={[{ required: true, message: \"Category type is required\" }]}\n          >\n            <InputNumber\n              style={{ width: \"30%\" }}\n              min={1}\n              max={5000}\n              defaultValue={30}\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item name=\"aboutCollection\" label=\"Small Description\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item name=\"description\" label=\"Description\">\n        <Input.TextArea showCount />\n      </Form.Item>\n      <Form.List name=\"tags\">\n        {(fields, { add, remove }, { errors }) => (\n          <>\n            {fields.map((field, index) => (\n              <Form.Item\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                label={index === 0 ? \"Tags\" : \"\"}\n                required={false}\n                key={field.key}\n              >\n                <Form.Item\n                  {...field}\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      required: true,\n                      whitespace: true,\n                      message:\n                        \"Please input passenger's name or delete this field.\",\n                    },\n                  ]}\n                  noStyle\n                >\n                  <Input\n                    placeholder=\"passenger name\"\n                    style={{ width: \"60%\" }}\n                  />\n                </Form.Item>\n                {fields.length > 1 ? (\n                  <MinusCircleOutlined\n                    className=\"dynamic-delete-button\"\n                    onClick={() => remove(field.name)}\n                  />\n                ) : null}\n              </Form.Item>\n            ))}\n          </>\n        )}\n      </Form.List>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save Changes\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import {\n  Alert,\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Row,\n  Table,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useCallback, useState } from \"react\";\nimport { uid } from \"uid\";\nimport Web3 from \"web3\";\nimport DatePicker from \"react-datepicker\";\nimport CSVReader from \"react-csv-reader\";\nimport { parseAddressesCSV } from \"../../utils/data\";\nimport { usePhaseContext } from \"../../modules/PhaseContext\";\n\nconst papaparseOptions = {\n  header: false,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport const AddressTable = ({ phase }) => {\n  window.web3 = Web3;\n\n  const {\n    addAddressToPhase,\n    removeAddressFromPhase,\n    setAddressesToPhase,\n    updatePhaseAccessListItem,\n    generateMercleTreeForPhase,\n    updatePhase,\n  } = usePhaseContext();\n\n  const [row, setRow] = useState(phase.users || []);\n  const [checkAddress, setCheckAddress] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [price, setPrice] = useState(new Date());\n\n  const addNewRow = useCallback(() => {\n    addAddressToPhase(phase.index, {\n      address: \"\",\n      quantity: \"\",\n      hash: \"\",\n      id: uid(),\n    });\n  }, [phase, addAddressToPhase]);\n\n  const removeRow = useCallback(\n    (id) => {\n      removeAddressFromPhase(phase.index, id);\n    },\n    [phase, phase.accessList, removeAddressFromPhase]\n  );\n\n  const addAddress = useCallback(\n    (id, value) => {\n      updatePhaseAccessListItem(phase.index, id, { address: value });\n    },\n    [phase, phase.accessList, updatePhaseAccessListItem]\n  );\n\n  const addQuantity = useCallback(\n    (id, value) => {\n      updatePhaseAccessListItem(phase.index, id, { quantity: value });\n    },\n    [phase, phase.accessList, updatePhaseAccessListItem]\n  );\n\n  const clickHandler = useCallback(() => {\n    generateMercleTreeForPhase(phase.index);\n  }, [row, generateMercleTreeForPhase]);\n\n  const onFileLoaded = useCallback(\n    (data, fileInfo, originalFile) => {\n      const parsedData = parseAddressesCSV(data);\n      setAddressesToPhase(phase.index, parsedData);\n    },\n    [setRow, phase, setAddressesToPhase]\n  );\n\n  return (\n    <Container>\n      <div className={\"pt-5\"}>\n        {!!phase.warning && (\n          <Alert variant={\"warning\"} className={\"text-center pointer\"}>\n            {phase.warning}\n          </Alert>\n        )}\n      </div>\n      <Row>\n        <Col>\n          <p>Drop Phase Start Date / {phase.startDate.toLocaleString()}</p>\n          <DatePicker\n            selected={phase.startDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            onChange={(date) => updatePhase(phase.index, { startDate: date })}\n          />\n        </Col>\n        <Col>\n          <p>Price in eth</p>\n          <FormControl\n            type=\"number\"\n            step={0.1}\n            value={phase.price}\n            onChange={({ target }) =>\n              updatePhase(phase.index, { price: target.value })\n            }\n          />\n          {phase.priceInWei && <p className=\"small\">Wei: {phase.priceInWei}</p>}\n        </Col>\n        <Col>\n          <p>Is Public</p>\n          <Form.Check\n            type=\"switch\"\n            checked={phase.isPublic}\n            onChange={() =>\n              updatePhase(phase.index, { isPublic: !phase.isPublic })\n            }\n          />\n        </Col>\n      </Row>\n      {!phase.isPublic && (\n        <>\n          <CSVReader\n            onFileLoaded={onFileLoaded}\n            parserOptions={papaparseOptions}\n          />\n          <div className=\"address-table\">\n            <Table striped bordered hover size=\"md\">\n              <thead className={\"address-table-header\"}>\n                <tr>\n                  <th>#</th>\n                  <th>Address</th>\n                  <th>Access Quantity</th>\n                  <th>Leaf</th>\n                  <th>Hash</th>\n                </tr>\n              </thead>\n              <tbody>\n                {phase.accessList.map((item, i) => {\n                  let classname = \"\";\n                  if (item.warn) {\n                    classname = \"warning\";\n                  }\n                  return (\n                    <tr key={item.id}>\n                      <td>{i + 1}</td>\n                      <td className={classname}>\n                        <input\n                          className=\"address-input\"\n                          type=\"text\"\n                          value={item.address}\n                          onChange={(e) => addAddress(item.id, e.target.value)}\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"number\"\n                          className=\"quantity-input\"\n                          value={item.quantity}\n                          onChange={(e) => addQuantity(item.id, e.target.value)}\n                        />\n                      </td>\n                      <td className={\"break\"}>{item.leafValue || \"-\"}</td>\n                      <td className={\"break\"}>\n                        {item.proof ? JSON.stringify(item.proof) : \"-\"}\n                      </td>\n                      <td className={\"text-center\"}>\n                        <FontAwesomeIcon\n                          icon={faMinusCircle}\n                          onClick={() => removeRow(item.id)}\n                          className={\"clr pointer\"}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n          <div>\n            <Button className={\"text-center\"} onClick={addNewRow}>\n              Add Address\n              <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n            </Button>\n          </div>\n        </>\n      )}\n      <div>\n        <p>Hash: {phase.rootHash}</p>\n        <p>Drop Data: {phase.phaseDropStr}</p>\n      </div>\n      <hr className=\"clr\" />\n      <div className={\"text-center\"}>\n        <Button onClick={clickHandler} className={\"generate-btn\"}>\n          Generate\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { AddressTable } from \"./AddressTable\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button } from \"react-bootstrap\";\n\nexport function DropPhase({ phase, onRemovePhase }) {\n  const _onRemovePhase = useCallback(() => {\n    onRemovePhase && onRemovePhase(phase);\n  }, [phase, phase.index, onRemovePhase]);\n  let info = phase.accessList && ` Addresses Count: ${phase.accessList.length}`;\n  if (phase.isPublic) {\n    info = \" Public\";\n  }\n\n  return (\n    <Accordion.Item eventKey={phase.index}>\n      <Accordion.Header>\n        Drop Phase {phase.index}: {phase.price && `price: ${phase.price}`}{\" \"}\n        {phase.date && `date: ${phase.date}`} - {info}\n        <div className=\"header-button-group\">\n          <Button\n            className=\"text-center\"\n            variant=\"danger\"\n            onClick={_onRemovePhase}\n          >\n            Remove Phase\n            <FontAwesomeIcon\n              icon={faMinusCircle}\n              className=\"mr-4 clr pointer\"\n            />\n          </Button>\n        </div>\n      </Accordion.Header>\n      <Accordion.Body>\n        <AddressTable phase={phase} />\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button } from \"react-bootstrap\";\nimport { DropPhase } from \"./DropPhase\";\nimport { usePhaseContext } from \"../../modules/PhaseContext\";\n\nexport function DropPhases() {\n  const {\n    phases,\n    phasesData,\n    onAddPhase,\n    onRemovePhase,\n    generateAndSaveJSON,\n    saveDropPhases,\n  } = usePhaseContext();\n\n  const onSaveClicked = useCallback(() => {\n    generateAndSaveJSON();\n  }, [generateAndSaveJSON]);\n\n  const onSaveDropPhasesClicked = useCallback(() => {\n    saveDropPhases();\n  }, [saveDropPhases]);\n\n  return (\n    <Accordion>\n      {phases.map((phase) => (\n        <DropPhase phase={phase} onRemovePhase={onRemovePhase} />\n      ))}\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <p>Remix data: {phasesData.dropPhasesRemixStr}</p>\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <Button className={\"text-center\"} onClick={onAddPhase}>\n          Add Phase\n          <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n        </Button>\n        <Button onClick={onSaveClicked} className={\"save-btn\"}>\n          Save As Json\n        </Button>\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4 \">\n        <Button onClick={onSaveDropPhasesClicked} className={\"save-btn\"}>\n          Save Drop Phases\n        </Button>\n      </div>\n    </Accordion>\n  );\n}\n","import NoImage from \"../../assets/images/no-image.png\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport { useCallback } from \"react\";\n\nexport function ImageThumb({ image, onRemove, onEdit, onDownloadIPFS }) {\n  const onRemoveItem = useCallback(\n    (item) => {\n      onRemove(image.id);\n    },\n    [image, onRemove]\n  );\n\n  const onEditImage = useCallback(\n    (item) => {\n      onEdit(image);\n    },\n    [image, onEdit]\n  );\n\n  const onDownload = useCallback(\n    () => {\n      onDownloadIPFS(image);\n    },\n    [image, onDownloadIPFS]\n  );\n\n  return (\n    <Card style={{ width: \"18rem\", margin: \"15px\", padding: 0 }}>\n      <Card.Header>\n        <Row>\n          <Col lg={10}>\n            <Card.Title className=\"img-title\">{image.title}</Card.Title>\n            <p>{image.artist}</p>\n          </Col>\n          <Col lg={2}>\n            <CloseButton onClick={onRemoveItem} />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Img variant=\"top\" src={image.smallImage} className=\"thumb-image\" />\n      <Card.Body>\n        <p>{image.tags?.join(\", \") || \"\"}</p>\n      </Card.Body>\n      <Card.Footer>\n        <div className=\"d-grid gap-0 m-0 p-0\">\n          <Button variant=\"light\" size=\"lg\" onClick={onEditImage}>\n            Edit\n          </Button><Button variant=\"light\" size=\"lg\" onClick={onDownload}>\n            Download IPFS JSON\n          </Button>\n        </div>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useCollectionContext } from \"./CollectionContext\";\nimport { saveAs } from \"file-saver\";\nimport {mapCollectionImages, mapImageToIPFS} from \"../utils/data\";\n\nexport const ImageContext = React.createContext({});\n\nexport const ImageProvider = ({ collection, children, permanent }) => {\n  const [images, setImages] = useState([]);\n\n  const { updateCollection, artists } = useCollectionContext();\n\n  useEffect(() => {\n    let images = collection.images || [];\n    if (permanent) {\n      images = images.concat();\n    }\n    setImages(images);\n  }, [collection, permanent]);\n\n  const saveChanges = useCallback(() => {\n    collection.images = images;\n    updateCollection(collection);\n  }, [collection, images, updateCollection]);\n\n  const removeAllImages = useCallback(\n    (imageId) => {\n      setImages((images) => []);\n    },\n    [setImages]\n  );\n\n  const removeImage = useCallback(\n    (imageId) => {\n      setImages((images) => images.filter((image) => image.id !== imageId));\n    },\n    [setImages]\n  );\n\n  const loadImagesFromCSV = useCallback(\n    (data) => {\n        const images = mapCollectionImages({\n          name: collection.name,\n          imageDir: collection.collectionID,\n        }, data, artists);\n      setImages(images);\n    },\n    [setImages, collection, artists]\n  );\n\n  const saveImage = useCallback(\n    (image) => {\n      if (!!image.id) {\n        const imageIndex = images.findIndex((item) => item.id === image.id);\n        if (imageIndex === -1) {\n          return false;\n        }\n        images[imageIndex] = {\n          ...images[imageIndex],\n          ...image,\n        };\n        return setImages([...images]);\n      }\n\n      let newId = Math.max(...images.map((image) => image.id));\n      if (newId) {\n        newId++;\n      } else {\n        newId = 1;\n      }\n      image.id = newId;\n      images.push(image);\n      setImages([...images]);\n    },\n    [setImages, images]\n  );\n\n  const saveIPFSData = useCallback((image) => {\n    const data = mapImageToIPFS(image, collection);\n    const bytes = new TextEncoder().encode(JSON.stringify(data));\n    var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, `${image.title}.json`);\n  }, [collection]);\n\n  return (\n    <ImageContext.Provider\n      value={{\n        images,\n        saveIPFSData,\n        loadImagesFromCSV,\n        removeImage,\n        saveChanges,\n        saveImage,\n        removeAllImages,\n      }}\n    >\n      {children}\n    </ImageContext.Provider>\n  );\n};\n\nexport const useImageContext = () => React.useContext(ImageContext);\n","import { AutoComplete, Button, Divider, Form, Input, InputNumber } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nexport function ImageForm({ image, onSaveChanges }) {\n  const { artistOptions } = useCollectionContext();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.resetFields();\n    form.setFieldsValue(image);\n  }, [image, form]);\n\n  const onFinish = useCallback(\n    (values: any) => {\n      onSaveChanges &&\n        onSaveChanges({\n          ...image,\n          ...values,\n        });\n    },\n    [onSaveChanges]\n  );\n\n  const onAuthorSelect = useCallback(\n    (value, option) => {\n      form.setFieldValue(\"artistImg\", option.artistImg);\n    },\n    [form]\n  );\n\n  const onImageChange = useCallback(\n    ({ target: { value } }) => {\n      if (value) {\n        const valueArr = value.split(\".\");\n        const maxIndex =\n          valueArr.length - 2 > 0 ? valueArr.length - 2 : valueArr.length - 1;\n        valueArr[maxIndex] += \"-small\";\n        value = valueArr.join(\".\");\n      }\n      form.setFieldValue(\"smallImage\", value);\n    },\n    [form]\n  );\n\n  const onAddTag = useCallback(() => {\n    const tags = form.getFieldValue(\"tags\") || [];\n    tags.push(\"\");\n    form.setFieldsValue(\"tags\", tags);\n  }, [form]);\n\n  const onSearch = useCallback((option) => {\n\n  }, []);\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"image\"\n      onFinish={onFinish}\n      initialValues={image}\n      style={{ maxWidth: 900, marginTop: 40 }}\n      scrollToFirstError\n    >\n      <Form.Item\n        label=\"ID / Collection / Title\"\n        tooltip=\"Image title \"\n      >\n        <Input.Group compact>\n          <Form.Item name=\"id\" noStyle>\n            <Input\n              style={{ width: \"20%\" }}\n              placeholder=\"Image id\"\n              disabled={true}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"collection\"\n            noStyle\n            rules={[{ required: true, message: \"Collection Name is required\" }]}\n          >\n            <Input\n              style={{ width: \"30%\" }}\n              placeholder=\"Collection Name\"\n              disabled={true}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"title\"\n            noStyle\n            rules={[{ required: true, message: \"Title is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input title\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Subtitle / Internal Id / Token Id\"\n      >\n        <Input.Group compact>\n          <Form.Item name=\"subtitle\" noStyle>\n            <Input style={{ width: \"40%\" }} placeholder=\"Subtitle\" />\n          </Form.Item>\n          <Form.Item\n            name=\"internalNumber\"\n            noStyle\n            rules={[{ required: true, message: \"Internal number\" }]}\n          >\n            <Input style={{ width: \"30%\" }} placeholder=\"Internal id\" />\n          </Form.Item>\n          <Form.Item name=\"tokenId\" noStyle>\n            <Input style={{ width: \"30%\" }} placeholder=\"Token Id\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Artist\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"artist\"\n            noStyle\n            rules={[{ required: true, message: \"Artist name is required\" }]}\n          >\n            <AutoComplete\n              options={artistOptions}\n              onSelect={onAuthorSelect}\n              filterOption={(inputValue, option) =>\n                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n              }\n              style={{ width: \"50%\" }}\n              placeholder=\"Artist Name\"\n            >\n              <Input />\n            </AutoComplete>\n          </Form.Item>\n          <Form.Item\n            name=\"artistImg\"\n            noStyle\n            rules={[{ required: true, message: \"Artist image is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Artist Image\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Camera / Manufacturer / Tone\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"camera\"\n            noStyle\n            rules={[{ required: true, message: \"Camera\" }]}\n          >\n            <Input style={{ width: \"33%\" }} placeholder=\"Camera\" />\n          </Form.Item>\n          <Form.Item\n            name=\"cameraManufacturer\"\n            noStyle\n            rules={[{ required: true, message: \"Camera Manufacture\" }]}\n          >\n            <Input style={{ width: \"33%\" }} placeholder=\"Camera Manufacturer\" />\n          </Form.Item>\n          <Form.Item name=\"tone\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"Tone\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"License / Country\">\n        <Input.Group compact>\n          <Form.Item name=\"license\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"License\" />\n          </Form.Item>\n          <Form.Item name=\"country\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"Country\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Image\">\n        <Input.Group compact>\n          <Form.Item name=\"image\" noStyle>\n            <Input\n              style={{ width: \"100%\" }}\n              placeholder=\"Image\"\n              onChange={onImageChange}\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Small Image\">\n        <Form.Item name=\"smallImage\" noStyle>\n          <Input\n            style={{ width: \"100%\" }}\n            placeholder=\"Small image\"\n            disabled={true}\n          />\n        </Form.Item>\n      </Form.Item>\n      <Form.Item name=\"description\" label=\"Description\">\n        <Input.TextArea showCount />\n      </Form.Item>\n      <Form.List name=\"tags\">\n        {(fields, { add, remove }, { errors }) => (\n          <>\n            {fields.map((field, index) => (\n              <Form.Item\n                label={`Tags ${index}`}\n                required={false}\n                key={field.key}\n              >\n                <Form.Item\n                  {...field}\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      required: true,\n                      whitespace: true,\n                      message:\n                        \"Please input passenger's name or delete this field.\",\n                    },\n                  ]}\n                  noStyle\n                >\n                  <Input\n                    placeholder=\"passenger name\"\n                    style={{ width: \"60%\" }}\n                  />\n                </Form.Item>\n                {fields.length > 1 ? (\n                  <MinusCircleOutlined\n                    className=\"dynamic-delete-button\"\n                    onClick={() => remove(field.name)}\n                  />\n                ) : null}\n              </Form.Item>\n            ))}\n          </>\n        )}\n      </Form.List>\n      <Form.Item name=\" \" label=\" \">\n        <Button type=\"dashed\" onClick={onAddTag} style={{ width: \"60%\" }}>\n          <PlusOutlined /> Add Tag\n        </Button>\n      </Form.Item>\n      <Divider />\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save Form Data\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { ImageThumb } from \"./ImageslistThumb\";\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport { useImageContext } from \"../../modules/ImageContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { ImageForm } from \"./ImageForm\";\nimport Files from \"react-files\";\nimport {toast} from \"react-toast\";\nimport CSVReader from \"react-csv-reader\";\n\nconst parseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport function Images({ collection }) {\n  const { images, removeImage, removeAllImages, saveChanges, saveIPFSData, saveImage, loadImagesFromCSV } =\n    useImageContext();\n  const [editingImage, setEditingImage] = useState({});\n  const isNewImage = !editingImage.id && editingImage.id !== 0;\n\n  const onAddImage = useCallback(() => {\n    setEditingImage({\n      collection: collection.name,\n      subtitle: collection.name,\n    });\n  }, [setEditingImage]);\n\n  useEffect(() => {\n    setEditingImage((oldData) => ({\n      ...oldData,\n      collection: collection.name,\n      subtitle: collection.name,\n    }));\n  }, [collection]);\n\n  const onEditImage = useCallback(\n    (image) => {\n      setEditingImage(image);\n    },\n    [editingImage]\n  );\n\n  const onDownloadIPFS = useCallback(\n    (image) => {\n      saveIPFSData(image);\n    },\n    [saveIPFSData]\n  );\n\n  const onFileLoaded = useCallback(\n    async (file) => {\n      try {\n        console.log(file);\n        await loadImagesFromCSV(file);\n      } catch (err) {\n        console.log(err);\n        toast.error(\"Failed load images\");\n        toast.error(err.message);\n      }\n    },\n    []\n  );\n\n  return (\n    <Row className=\"justify-content-center align-content-center\">\n      <div className=\"d-flex justify-content-between align-items-center ms-5 me-5 ps-4\">\n        <h3>Images</h3>\n        <Button onClick={removeAllImages} className={\"save-btn\"}>\n          Remove All\n        </Button>\n      </div>\n      <div className=\"images-list-cont\">\n        {(images || []).map((image) => (\n          <ImageThumb\n            image={image}\n            onRemove={removeImage}\n            onEdit={onEditImage}\n            onDownloadIPFS={onDownloadIPFS}\n          />\n        ))}\n      </div>\n      <ImageForm image={editingImage} onSaveChanges={saveImage} />\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <Col lg={3}>\n          <Button className={\"text-center\"} onClick={onAddImage}>\n            Add Image\n            <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n          </Button>\n        </Col>\n        <Col lg={3}>\n          Load Images CSV File\n          <CSVReader\n            onFileLoaded={onFileLoaded}\n            parserOptions={parseOptions}\n          >\n          </CSVReader>\n        </Col>\n        <Col lg={3}>\n          <Button onClick={saveChanges} className={\"save-btn\"}>\n            Save Changes\n          </Button>\n        </Col>\n      </div>\n    </Row>\n  );\n}\n","import { Tab, Row, Tabs } from \"react-bootstrap\";\nimport { useCallback } from \"react\";\nimport { toast } from \"react-toast\";\nimport { CollectionGeneralData } from \"./CollectionGeneralData\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\nimport { DropPhases } from \"../phases/DropPhases\";\nimport { PhaseProvider } from \"../../modules/PhaseContext\";\nimport { on } from \"local-storage\";\nimport { Images } from \"../image-list/Images\";\nimport { ImageProvider, useImageContext } from \"../../modules/ImageContext\";\n\nexport function CollectionViewEdit({ collection }) {\n  const { updateCollection, categoryOptions } = useCollectionContext();\n\n  const onSaveChanges = useCallback(\n    async (item) => {\n      const isSavedSuccess = await updateCollection(item);\n      if (isSavedSuccess) {\n        toast.success(\"Collection updated\");\n      }\n    },\n    [updateCollection]\n  );\n\n  return (\n    <Row>\n      <Tabs\n        defaultActiveKey=\"general\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"general\" title=\"General\">\n          <CollectionGeneralData\n            collection={collection}\n            onSaveChanges={onSaveChanges}\n            categoryOptions={categoryOptions}\n          />\n        </Tab>\n        <Tab eventKey=\"dtopPhases\" title=\"Drop Phases\">\n          <PhaseProvider collection={collection} onSaveChanges={onSaveChanges}>\n            <DropPhases />\n          </PhaseProvider>\n        </Tab>\n        <Tab eventKey=\"images\" title=\"Images\">\n          <ImageProvider collection={collection}>\n            <Images collection={collection} />\n          </ImageProvider>\n        </Tab>\n      </Tabs>\n    </Row>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button, Col, Modal, Row } from \"react-bootstrap\";\nimport Files from \"react-files\";\nimport { toast } from \"react-toast\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\nimport { CollectionThumb } from \"./CollectionThumb\";\nimport ConfirmationModal from \"../comnmon/ConfirmationModal\";\nimport { CollectionViewEdit } from \"./CollectionEditView\";\n\nexport function Collections({ onCollectionEdit }) {\n  const {\n    collections,\n    addCollection,\n    loadCollections,\n    removeCollection,\n    saveCollectionsData,\n    saveCollectionJSON,\n    clearAllCollectionData,\n  } = useCollectionContext();\n\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\n\n  const [confirmHandler, setConfirmHandler] = useState({ handler: () => {} });\n\n  const onConfirmation = useCallback(\n    (confirmed) => {\n      setShowConfirmPopup(false);\n      if (!confirmed) {\n        return;\n      }\n      confirmHandler.handler();\n    },\n    [setShowConfirmPopup, confirmHandler]\n  );\n\n  const onAddCollection = useCallback(() => {\n    addCollection();\n  }, [addCollection]);\n\n  const onLoadCollection = useCallback(async ([file]) => {\n    try {\n      await loadCollections(file);\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Failed load file\");\n      toast.error(err.message);\n    }\n  }, []);\n\n  const onCollectionShow = useCallback(\n    (collection) => {\n      onCollectionEdit(collection);\n    },\n    [onCollectionEdit]\n  );\n\n  const onSaveClicked = useCallback(() => {\n    saveCollectionJSON();\n  }, [saveCollectionJSON]);\n\n  const onRemoveCollection = useCallback((collectionId) => {\n    setShowConfirmPopup(true);\n    setConfirmHandler({ handler: () => removeCollection(collectionId) });\n  }, []);\n\n  const onClearAllData = useCallback(() => {\n    setShowConfirmPopup(true);\n    setConfirmHandler({ handler: () => clearAllCollectionData() });\n  }, [clearAllCollectionData]);\n\n  return (\n    <Row>\n      <h3>Collections</h3>\n      {!collections.length && (\n        <Row className=\"no-collections-container\">\n          You don't have any collections yet. Add it or load it from json file.\n        </Row>\n      )}\n      {collections.map((collection) => (\n        <CollectionThumb\n          collection={collection}\n          onShow={onCollectionShow}\n          onRemove={onRemoveCollection}\n        />\n      ))}\n      <Row className=\"mt-4\">\n        <Col>\n          <Button className={\"text-center\"} onClick={onAddCollection}>\n            Add Collection\n            <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n          </Button>\n        </Col>\n        <Col>\n          <Files\n            className=\"files-dropzone\"\n            onChange={onLoadCollection}\n            accepts={[\"json/text\", \".json\"]}\n            maxFileSize={10000000}\n            minFileSize={0}\n            clickable\n          >\n            <Button className={\"text-center\"}>\n              Load Collections File\n              <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n            </Button>\n          </Files>\n        </Col>\n        <Col>\n          <Button onClick={onSaveClicked} className={\"save-btn\"}>\n            Save As Json\n          </Button>\n        </Col>\n        <Col>\n          <Button onClick={onClearAllData} className={\"save-btn\"}>\n            Clear All Data\n          </Button>\n        </Col>\n      </Row>\n      <ConfirmationModal onConfirm={onConfirmation} show={showConfirmPopup} />\n    </Row>\n  );\n}\n","import { Button, Card, Col, Row } from \"react-bootstrap\";\n\nexport function ArtistThumb({ artist }) {\n  return (\n    <Card style={{ width: \"18rem\", margin: \"15px\", padding: 0 }}>\n      <Card.Header>\n        <Row>\n          <Col lg={10}>\n            <Card.Title className=\"img-title\">{artist.name}</Card.Title>\n            <p>{artist.nickname} {artist.website && <a href={artist.website} target=\"_blank\">{artist.website}</a>}</p>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Img variant=\"top\" src={artist.fullImageSrc} className=\"thumb-image\" />\n      <Card.Body>\n        <Card.Text>\n          <p>{artist.bio}</p>\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Button variant=\"link\" href={`https://light.art/artists/${artist.url}`}>\n          View On Website\n        </Button>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {useCollectionContext} from \"../../modules/CollectionContext\";\nimport {ArtistThumb} from \"./ArtistsThumb\";\nimport {toast} from \"react-toast\";\nimport CSVReader from \"react-csv-reader\";\n\nconst parseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport function Artists({ collection }) {\n  const { artists, loadArtists } =\n    useCollectionContext();\n\n  const onLoadArtists = useCallback(async (fileData) => {\n    try {\n      await loadArtists(fileData);\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Failed load artists\");\n      toast.error(err.message);\n    }\n  }, []);\n\n  return (\n    <Row className=\"justify-content-center align-content-center\">\n      <div className=\"d-flex justify-content-between align-items-center ms-5 me-5 ps-4\">\n        <h3>Artists</h3>\n      </div>\n      <div className=\"images-list-cont\">\n        {(artists || []).map((artist) => (\n          <ArtistThumb\n            artist={artist}\n          />\n        ))}\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4 \">\n        <Col lg={3}>\n          Load Artists CSV File\n          <CSVReader\n            onFileLoaded={onLoadArtists}\n            parserOptions={parseOptions}\n          >\n          </CSVReader>\n        </Col>\n      </div>\n    </Row>\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport { Accordion, Button, Col, Modal, Row, Tab, Tabs } from \"react-bootstrap\";\nimport { CollectionViewEdit } from \"./collections-list/CollectionEditView\";\nimport { ImageProvider } from \"../modules/ImageContext\";\nimport { Images } from \"./image-list/Images\";\nimport { Collections } from \"./collections-list/Collections\";\nimport {Artists} from \"./artists/Artists\";\n\nexport function Main() {\n  const [editingCollection, setEditingCollection] = useState(null);\n  const [activeTabKey, setActiveTabKey] = useState('collections');\n\n  const onCollectionEdit = useCallback(\n    (collection) => {\n      setEditingCollection(collection);\n      setActiveTabKey('item');\n    },\n    [setEditingCollection, setActiveTabKey]\n  );\n\n  const onChangeTab = useCallback((value) => {\n    setActiveTabKey(value);\n  }, [setActiveTabKey]);\n\n  return (\n    <Row>\n      <Tabs\n        activeKey={activeTabKey}\n        className=\"mb-3\"\n        onSelect={onChangeTab}\n      >\n        <Tab eventKey=\"collections\" title=\"Collections\">\n          <Collections onCollectionEdit={onCollectionEdit} />\n        </Tab>\n        <Tab eventKey=\"artists\" title=\"Artists\">\n          <Artists/>\n        </Tab>\n        {editingCollection && <Tab eventKey=\"item\" title=\"Collection Item\" >\n          <CollectionViewEdit collection={editingCollection} />\n        </Tab>}\n      </Tabs>\n    </Row>\n  );\n}\n","import \"antd/dist/antd.css\";\nimport { Container } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { PhaseProvider } from \"./modules/PhaseContext\";\nimport { CollectionProvider } from \"./modules/CollectionContext\";\nimport { Collections } from \"./components/collections-list/Collections\";\nimport { ToastContainer } from \"react-toast\";\nimport { Main } from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Container className={\"big-container\"}>\n        <CollectionProvider>\n          <PhaseProvider>\n            <Main />\n          </PhaseProvider>\n        </CollectionProvider>\n      </Container>\n      <ToastContainer delay={6000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}