{"version":3,"sources":["utils/packing.js","modules/data.js","modules/CollectionContext.js","utils/data.js","modules/ImageContext.js","modules/PhaseContext.js","assets/images/no-image.png","components/collections-list/CollectionThumb.js","components/comnmon/ConfirmationModal.js","components/collections-list/CollectionGeneralData.js","components/phases/AddressTable.js","components/phases/DropPhase.js","components/phases/DropPhases.js","components/image-list/ImageslistThumb.js","components/image-list/ImageForm.js","components/image-list/Images.js","components/collections-list/CollectionEditView.js","components/collections-list/Collections.js","components/artists/ArtistsThumb.js","components/artists/Artists.js","components/Main.js","App.js","index.js"],"names":["packAddressAndQuantity","address","quantity","num","addressAsNumberString","web3","utils","hexToNumberString","addressBytes20","hexToHexBytes","bytesToBytesN","addressToBytes32","addressBN","BN","quantityAsNumberString","toHex","shrnQuantity","shrn","result","or","console","log","toString","padLeft","hex","bytesLength","bytes","hexToBytes","length","concat","unshift","bytesToHex","n","Array","isArray","lengthDiff","Error","emptyBytesN","repeat","split","map","i","parseInt","newBytes","defaultNewCollection","name","title","collectionID","categoryName","categoryType","itemsCount","author","path","dropId","artists","dropPhases","tags","aboutCollection","description","CollectionContext","React","createContext","CollectionProvider","children","useState","setArtists","collections","setCollections","artistOptions","setArtistOptions","useEffect","ls","artistsNames","artist","value","artistImg","imageSrc","filter","index","arr","findIndex","a","saveCollectionsData","useCallback","newData","oldData","results","err","alert","loadCollections","file","reader","FileReader","Promise","resolve","reject","addEventListener","event","data","JSON","parse","target","reduce","coll","id","uid","e","readAsText","loadArtists","parseArtists","addCollection","defaultName","existNames","includes","maxNum","Math","max","replace","item","isNaN","suffix","getNextName","removeCollection","collectionId","collection","updateCollection","find","foundCollectionIndex","isMain","forEach","clearAllCollectionData","newPhase","saveCollectionJSON","TextEncoder","encode","stringify","blob","Blob","type","saveAs","categoryOptions","useMemo","mapedCollections","Provider","useCollectionContext","useContext","ImageContext","MAX_DROP_SIZE","ImageProvider","permanent","images","setImages","saveChanges","removeAllImages","imageId","removeImage","image","updateImagesTokensIds","tokenId","internalNumber","loadImagesFromCSV","collectionData","imageData","jsonItem","mappedData","Object","keys","mapFields","newObject","sourceKey","mapCollectionImage","COLLECTION_IMAGE_BASE_URL","imageDir","fileName","smallImage","subtitle","toLowerCase","findArtistImageFullPathByName","zeroTokenNumber","startIdNumber","sort","b","mapCollectionImages","saveImage","imageIndex","newId","push","saveIPFSData","imageIPFS","external_url","license_document","attributes","trait_type","tone","set","cameraManufacturer","camera","country","join","license","Date","getFullYear","mapImageToIPFS","useImageContext","publicByte32","key","j","imageEx","test","fullImageSrc","localeCompare","PhaseContext","counter","PhaseProvider","onSaveChanges","accessList","startDate","phases","setPhases","phasesData","setPhasesData","dtopPhases","startTimestamp","price","Web3","fromWei","priceInWei","addressItem","isPublic","onAddPhase","pahsesArr","onRemovePhase","phase","getPhase","updatePhase","phaseIndex","toWei","addAddressToPhase","setAddressesToPhase","addresses","removeAddressFromPhase","itemId","listItem","generateMercleTreeForPhase","warning","checkAddress","warn","isAddress","publicAccessList","accessListProof","newAccessList","accessListPhaseDrop","markleTreeData","leafs","leafValue","tree","MerkleTree","keccak256","sortPairs","root","getRoot","proof","getHexProof","proofPositional","getPositionalHexProof","toMarkleTree","getTime","rootHash","phaseDrop","phaseDropStr","prepareDropPhases","error","dropPhasesRemixStr","prev","next","substring","saveDropPhases","generateAndSaveJSON","savePhasesJSON","updatePhaseAccessListItem","itemIndex","usePhaseContext","CollectionThumb","onRemove","onShow","onRemoveItem","onShowMore","firstImage","NoImage","Card","style","width","margin","padding","Header","Row","Col","lg","Title","CloseButton","onClick","Badge","bg","isRandom","Img","variant","src","className","Body","Text","Button","size","ConfirmationModal","onConfirm","show","handleClose","Modal","onHide","backdrop","keyboard","closeButton","Footer","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","formItemLayoutWithOutLabel","CollectionGeneralData","Form","useForm","form","setCategoryType","onFinish","values","onCategorySelect","option","onSearch","initialValues","maxWidth","scrollToFirstError","Item","label","tooltip","Group","compact","noStyle","rules","required","message","placeholder","options","onSelect","valuePropName","min","defaultValue","TextArea","showCount","List","fields","add","remove","errors","field","validateTrigger","whitespace","MinusCircleOutlined","htmlType","papaparseOptions","header","dynamicTyping","skipEmptyLines","AddressTable","window","users","row","setRow","addNewRow","hash","removeRow","addAddress","addQuantity","clickHandler","onFileLoaded","fileInfo","originalFile","parsedData","shift","parseAddressesCSV","Container","Alert","toLocaleString","selected","showTimeSelect","timeFormat","onChange","date","FormControl","step","Check","checked","parserOptions","Table","striped","bordered","hover","classname","icon","faMinusCircle","faPlusCircle","DropPhase","_onRemovePhase","info","Accordion","eventKey","DropPhases","onSaveClicked","onSaveDropPhasesClicked","ImageThumb","onEdit","onDownloadIPFS","onEditImage","onDownload","ImageForm","resetFields","setFieldsValue","onAuthorSelect","setFieldValue","onImageChange","valueArr","onAddTag","getFieldValue","marginTop","disabled","filterOption","inputValue","toUpperCase","indexOf","PlusOutlined","parseOptions","Images","editingImage","setEditingImage","showUpdateTokensButtons","onAddImage","toast","CollectionViewEdit","success","Tabs","defaultActiveKey","Tab","Collections","onCollectionEdit","showConfirmPopup","setShowConfirmPopup","handler","confirmHandler","setConfirmHandler","onConfirmation","confirmed","onAddCollection","onLoadCollection","onCollectionShow","onRemoveCollection","onClearAllData","accepts","maxFileSize","minFileSize","clickable","ArtistThumb","nickname","website","href","bio","url","Artists","onLoadArtists","fileData","Main","editingCollection","setEditingCollection","activeTabKey","setActiveTabKey","onChangeTab","activeKey","App","delay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43ab4f6b.chunk.js","sourcesContent":["import keccak256 from \"keccak256\";\r\nimport MerkleTree from \"merkletreejs\";\r\nimport Web3 from \"web3\";\r\nimport web3 from \"web3\";\r\n\r\nexport function toMarkleTree(data) {\r\n  const leafs = data.map((data) => {\r\n    const { quantity, address } = data;\r\n    return {\r\n      ...data,\r\n      leafValue: packAddressAndQuantity(address, quantity),\r\n    };\r\n  });\r\n  const tree = new MerkleTree(\r\n    leafs.map((item) => item.leafValue),\r\n    keccak256,\r\n    { sortPairs: true }\r\n  );\r\n  const root = \"0x\" + tree.getRoot().toString(\"hex\");\r\n  const results = {\r\n    root,\r\n    data: leafs.map((data, index) => ({\r\n      ...data,\r\n      proof: tree.getHexProof(data.leafValue),\r\n      proofPositional: tree.getPositionalHexProof(data.leafValue, index),\r\n    })),\r\n  };\r\n  console.log(\"results\", tree.toString()); // true\r\n  console.log(\"results\", results); // true\r\n  return results;\r\n}\r\n\r\nexport function packAddressAndQuantity(address, quantity) {\r\n  const addressAsNumberString = web3.utils.hexToNumberString(\r\n    addressToBytes32(address)\r\n  );\r\n  const addressBN = new web3.utils.BN(addressAsNumberString);\r\n  const quantityAsNumberString = web3.utils.hexToNumberString(\r\n    numberToBytes32(quantity)\r\n  );\r\n  const quantityBN = new web3.utils.BN(quantityAsNumberString);\r\n  const shrnQuantity = quantityBN.shrn(160);\r\n  const result = addressBN.or(shrnQuantity);\r\n  console.log(\r\n    \"Add: 0x\" + addressBN.toString(16),\r\n    \" |||| Qunt: 0x\" + shrnQuantity.toString(16),\r\n    \" ||||| result: 0x\" + result.toString(16)\r\n  );\r\n  return \"0x\" + web3.utils.padLeft(result, 64);\r\n}\r\n\r\nfunction hexToHexBytes(hex, bytesLength) {\r\n  const bytes = web3.utils.hexToBytes(hex);\r\n  if (!bytesLength || bytesLength === bytes.length) {\r\n    return bytes.concat([]);\r\n  }\r\n\r\n  if (bytesLength < bytes.length) {\r\n    throw \"Data will be lost\";\r\n  }\r\n  while (bytesLength != bytes.length) {\r\n    bytes.unshift(0);\r\n  }\r\n  return web3.utils.bytesToHex(bytes);\r\n}\r\n\r\nfunction bytesToBytesN(bytes, n) {\r\n  if (!Array.isArray(bytes)) {\r\n    bytes = web3.utils.hexToBytes(bytes);\r\n  }\r\n  const lengthDiff = n - bytes.length;\r\n  if (lengthDiff < 0) {\r\n    throw new Error(\"Data loss\");\r\n  }\r\n  if (lengthDiff === 0) {\r\n    return bytes.concat([]);\r\n  }\r\n  // lengthDiff bytes 0\r\n  const emptyBytesN = \"0\"\r\n    .repeat(lengthDiff)\r\n    .split(\"\")\r\n    .map((i) => parseInt(i));\r\n  // contact 2 bytes\r\n  const newBytes = bytes.concat(emptyBytesN);\r\n  // create n bytes hex address\r\n  return web3.utils.bytesToHex(newBytes);\r\n}\r\n\r\nfunction addressToBytes32(address) {\r\n  // convert address string to bytes(20)\r\n  const addressBytes20 = hexToHexBytes(address);\r\n  return bytesToBytesN(addressBytes20, 32);\r\n}\r\n\r\nfunction numberToBytes32(num) {\r\n  // convert number to hex\r\n  const hex = web3.utils.toHex(num);\r\n  const bytes12 = hexToHexBytes(hex, 12);\r\n  const bytes32 = bytesToBytesN(bytes12, 32);\r\n  return bytes32;\r\n}\r\n\r\nexport function hashePassword(string) {\r\n  //const abiEndcoded = web3.eth.abi.encodeParameters(string);\r\n  if (!string) {\r\n    return \"\";\r\n  }\r\n  const web3 = new Web3();\r\n  const bytes32Password = web3.utils.asciiToHex(string);\r\n  const abiEndcoded = web3.eth.abi.encodeParameters(\r\n    [\"bytes\"],\r\n    [bytes32Password]\r\n  );\r\n  return web3.utils.toHex(keccak256(abiEndcoded));\r\n}\r\n","export const defaultNewCollection = {\n  name: \"New Collection\",\n  title: \"New(2022)\",\n  collectionID: \"new\",\n  categoryName: \"Annual Series\",\n  categoryType: \"annual\",\n  itemsCount: 200,\n  author: \"a collective\",\n  path: \"/new\",\n  dropId: 10,\n  artists: 54,\n  dropPhases: [],\n  tags: [],\n  aboutCollection: \"\",\n  description:\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n};\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport * as ls from \"local-storage\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { uid } from \"uid\";\r\nimport { defaultNewCollection } from \"./data\";\r\nimport {getNextName, parseArtists} from \"../utils/data\";\r\n\r\nexport const CollectionContext = React.createContext({});\r\n\r\nexport const CollectionProvider = ({ children }) => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [collections, setCollections] = useState([]);\r\n  const [artistOptions, setArtistOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const collections = ls.get(\"collections\");\r\n    const artists = ls.get(\"artists\");\r\n    if (collections && collections.length) {\r\n      setCollections(collections);\r\n    }\r\n    if (artists && artists.length) {\r\n      setArtists(artists);\r\n    }\r\n  }, []);\r\n\r\n  const updateArtistOptions = useEffect(\r\n    () => {\r\n      const artistsNames = artists\r\n        .map((artist) => ({\r\n          name: artist.name,\r\n          value: artist.name,\r\n          artistImg: artist.imageSrc,\r\n        }))\r\n        .filter(\r\n          (artist, index, arr) =>\r\n            index === arr.findIndex((a) => a.name === artist.name)\r\n        );\r\n      setArtistOptions(artistsNames);\r\n    },\r\n    [artists]\r\n  );\r\n\r\n  const saveCollectionsData = useCallback(\r\n    (newData) => {\r\n      if (!newData) {\r\n        throw new Error(\"Cannot set collection to null\");\r\n      }\r\n      try {\r\n        setCollections((oldData) => {\r\n          if (newData === true) {\r\n            ls.set(\"collections\", oldData);\r\n            return oldData;\r\n          }\r\n          if (Array.isArray(newData)) {\r\n            ls.set(\"collections\", newData);\r\n            return newData;\r\n          }\r\n          const results = newData(oldData);\r\n          ls.set(\"collections\", results);\r\n          return results;\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        alert(\"Could not save progress.\");\r\n      }\r\n    },\r\n    [setCollections]\r\n  );\r\n\r\n  const loadCollections = useCallback(\r\n    async (file) => {\r\n      const reader = new FileReader();\r\n      return new Promise((resolve, reject) => {\r\n        reader.addEventListener(\"load\", (event) => {\r\n          try {\r\n            const data = JSON.parse(event.target.result);\r\n            data.reduce((coll, map) => {\r\n              if (!coll.id) {\r\n                coll.id = uid();\r\n              }\r\n              if (coll.id in map) {\r\n                coll.id = uid();\r\n              }\r\n              map[coll.id] = true;\r\n              return map;\r\n            }, {});\r\n            saveCollectionsData((collections) => [...collections, ...data]);\r\n            resolve(data);\r\n          } catch (e) {\r\n            reject(new Error(\"Cant parse file data\"));\r\n          }\r\n        });\r\n        reader.addEventListener(\"error\", (event) => {\r\n          reject(new Error(\"Error during data loading\"));\r\n        });\r\n        reader.readAsText(file);\r\n      });\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const loadArtists = useCallback(\r\n    async (data) => {\r\n      const artists = parseArtists(data);\r\n      setArtists(artists);\r\n      ls.set(\"artists\", artists);\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const addCollection = useCallback(() => {\r\n    saveCollectionsData((collections) => {\r\n      const name = getNextName(\r\n        defaultNewCollection.name,\r\n        collections.map((item) => item.name)\r\n      );\r\n      return [\r\n        ...collections,\r\n        {\r\n          ...defaultNewCollection,\r\n          name,\r\n          id: uid(),\r\n        },\r\n      ];\r\n    });\r\n  }, [saveCollectionsData]);\r\n\r\n  const removeCollection = useCallback(\r\n    (collectionId) => {\r\n      saveCollectionsData((collections) =>\r\n        collections.filter((collection) => collection.id !== collectionId)\r\n      );\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const getCollectionById = useCallback(\r\n    (collectionId) => {\r\n      return collections.find((item) => item.id === collectionId);\r\n    },\r\n    [collections]\r\n  );\r\n\r\n  const updateCollection = useCallback(\r\n    (collection) => {\r\n      const foundCollectionIndex = collections.findIndex(\r\n        (item) => item.id === collection.id\r\n      );\r\n      if (foundCollectionIndex === -1) {\r\n        return false;\r\n      }\r\n      if (collection.isMain) {\r\n        collections.forEach((coll, index) => {\r\n          if (index === foundCollectionIndex) {\r\n            return;\r\n          }\r\n          collections[index] = {...collections[index], isMain: false};\r\n        })\r\n      }\r\n      collections[foundCollectionIndex] = {\r\n        ...collections[foundCollectionIndex],\r\n        ...collection,\r\n      };\r\n      saveCollectionsData(collections);\r\n      return true;\r\n    },\r\n    [collections, saveCollectionsData]\r\n  );\r\n\r\n  const clearAllCollectionData = useCallback(\r\n    (index, newPhase) => {\r\n      saveCollectionsData([]);\r\n      ls.clear();\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const saveCollectionJSON = useCallback(() => {\r\n    if (!collections.length) {\r\n      return;\r\n    }\r\n    saveCollectionsData(collections);\r\n    const bytes = new TextEncoder().encode(JSON.stringify(collections, 2, 2));\r\n    var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\r\n    saveAs(blob, \"collections.json\");\r\n  }, [collections, saveCollectionsData]);\r\n\r\n  const categoryOptions = useMemo(() => {\r\n    return collections\r\n      .map((collection) => ({\r\n        value: collection.categoryName,\r\n        type: collection.categoryType,\r\n      }))\r\n      .filter(\r\n        (item, index, mapedCollections) =>\r\n          mapedCollections.findIndex((a) => a.value === item.value) === index\r\n      );\r\n  }, [collections]);\r\n\r\n  return (\r\n    <CollectionContext.Provider\r\n      value={{\r\n        collections,\r\n        loadArtists,\r\n        artists,\r\n        artistOptions,\r\n        clearAllCollectionData,\r\n        addCollection,\r\n        updateCollection,\r\n        saveCollectionsData,\r\n        saveCollectionJSON,\r\n        removeCollection,\r\n        loadCollections,\r\n        categoryOptions,\r\n      }}\r\n    >\r\n      {children}\r\n    </CollectionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCollectionContext = () => React.useContext(CollectionContext);\r\n","import { defaultNewCollection } from \"../modules/data\";\r\nimport {MAX_DROP_SIZE} from \"../modules/ImageContext\";\r\n\r\nexport const publicByte32 =\r\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\r\n\r\nexport function parseAddressesCSV(data) {\r\n  const newData = data.map((arr, index) => ({\r\n    address: arr[0],\r\n    quantity: arr[1],\r\n    id: index,\r\n  }));\r\n  if (isNaN(parseInt(newData[0].quantity))) {\r\n    newData.shift();\r\n  }\r\n  return newData;\r\n}\r\n\r\nexport function getNextName(defaultName, existNames) {\r\n  if (!existNames.includes(defaultName)) {\r\n    return defaultName;\r\n  }\r\n\r\n  let maxNum = Math.max(\r\n    0,\r\n    ...existNames\r\n      .map((name) =>\r\n        parseInt(name.replace(defaultName, \"\").replace(/[\\s-]/gm, \"\"))\r\n      )\r\n      .filter((item) => !isNaN(item))\r\n  );\r\n  if (!maxNum) {\r\n    maxNum = 1;\r\n  } else {\r\n    maxNum++;\r\n  }\r\n  const suffix = ` - ${maxNum}`;\r\n  return defaultName + suffix;\r\n}\r\n\r\nexport const parseArtists = (artists) => {\r\n  let result = [];\r\n  for (let i = 0; i < artists.length; i++) {\r\n    let item = {};\r\n    Object.keys(artists[i]).map((key, j) => {\r\n      item[key.toLowerCase()] = artists[i][key];\r\n    });\r\n    item['url'] = item['name'].toLowerCase().replace(/ /gm, '-')\r\n    item['profile name'] = item['profile image'].replace(/ /gm, '')\r\n    const imageEx = /\\.(jpe?g|png)$/i.test(item['profile image']) ? '' : '.jpg';\r\n    const fullImageSrc = `https://light.art/images/artists/${item['profile image']}${imageEx}`;\r\n    const imageSrc = `../../../images/artists/${item['profile image']}${imageEx}`;\r\n    item.fullImageSrc = fullImageSrc;\r\n    item.imageSrc = imageSrc;\r\n    result.push(item);\r\n  }\r\n  result = result.sort((a, b) => a['profile image'].localeCompare(b['profile image']))\r\n  return result;\r\n};\r\n\r\n\r\nconst mapFields = {\r\n  'id': 'id',\r\n  'artist': 'artist',\r\n  'Number': 'internalNumber',\r\n  'name': 'title',\r\n  'set' : 'set',\r\n  'file': 'fileName',\r\n  'description': 'description',\r\n  'genres': 'tags',\r\n  'tone': 'tone',\r\n  'camera': 'camera',\r\n  'camera manufacturer': 'cameraManufacturer',\r\n  'location': 'location',\r\n  'license': 'license',\r\n  'country': 'country',\r\n  'image': 'imageIPFS',\r\n  'composite': 'composite'\r\n}\r\n\r\nconst COLLECTION_IMAGE_BASE_URL = 'https://light-art.s3.us-east-1.amazonaws.com/collections/';\r\n\r\nexport function mapCollectionImages(collectionData, imageData, artists) {\r\n  const images = imageData.map((jsonItem, index) => {\r\n    const mappedData = mapCollectionImage(jsonItem);\r\n    mappedData.image = `${COLLECTION_IMAGE_BASE_URL}${collectionData.imageDir}/${mappedData.fileName}.jpg`;\r\n    mappedData.smallImage = `${COLLECTION_IMAGE_BASE_URL}${collectionData.imageDir}/${mappedData.fileName}-small.jpg`;\r\n    mappedData.internalNumber = parseInt(mappedData.internalNumber);\r\n    mappedData.collection = collectionData.name;\r\n    if (!mappedData.id) {\r\n      mappedData.id = index;\r\n    }\r\n    if (!mappedData.subtitle) {\r\n      mappedData.subtitle = collectionData.name;\r\n    }\r\n    if (!mappedData.artistImg) {\r\n      mappedData.artistImg = findArtistImageFullPathByName(artists, mappedData.artist);\r\n    }\r\n    mappedData.tags = mappedData.tags ? mappedData.tags.split(',') : [];\r\n    return mappedData;\r\n  });\r\n  let zeroTokenNumber = collectionData.startIdNumber;\r\n  if (!zeroTokenNumber && collectionData.dropId) {\r\n    zeroTokenNumber = (collectionData.dropId * MAX_DROP_SIZE);\r\n  }\r\n  if (!zeroTokenNumber) {\r\n    return images;\r\n  }\r\n\r\n  images.concat().sort((a, b) => a.internalNumber - b.internalNumber).forEach((item, index) => {\r\n    if (!item.tokenId) {\r\n      item.tokenId = zeroTokenNumber + index;\r\n    }\r\n\r\n    if (!item.internalNumber) {\r\n      item.internalNumber = index;\r\n    }\r\n  });\r\n\r\n  return images\r\n}\r\n\r\nfunction mapCollectionImage(data) {\r\n  return Object.keys(mapFields).reduce((newObject, sourceKey) => {\r\n    const targetKey = mapFields[sourceKey];\r\n    newObject[targetKey] = data[sourceKey] || '';\r\n    return newObject;\r\n  }, {})\r\n}\r\n\r\nexport function mapImageToIPFS(image, collection) {\r\n  const data = {\r\n    name: image.title,\r\n    description: image.description,\r\n    image: image.imageIPFS,\r\n    external_url: \"https://light.art\",\r\n    license_document: \"ipfs://bafkreidvs3sgzpuoxaubpvg5gax2luj5j7422l2i5icfqmgtplk5medw3u\",\r\n    attributes: [],\r\n  }\r\n  data.attributes.push({\r\n    trait_type: \"Artist\",\r\n    value: image.artist,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Tone\",\r\n    value: image.tone,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Set\",\r\n    value: image.set,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Camera Manufacturer\",\r\n    value: image.cameraManufacturer,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Camera\",\r\n    value: image.camera,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Country\",\r\n    value: image.country,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Genres\",\r\n    value: image?.tags?.join(',') || [],\r\n  })\r\n  data.attributes.push({\r\n    trait_type: \"License\",\r\n    value: image.license,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Collection\",\r\n    value: collection.name,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Collection Year\",\r\n    value: (new Date()).getFullYear(),\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction findArtistImageFullPathByName(artists, name) {\r\n  const artist = artists.find(item => item.name?.toLowerCase() == name?.toLowerCase());\r\n  if (!artist) {\r\n    return '';\r\n  }\r\n  return artist.imageSrc;\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useCollectionContext } from \"./CollectionContext\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {mapCollectionImages, mapImageToIPFS} from \"../utils/data\";\r\n\r\nexport const ImageContext = React.createContext({});\r\nexport const MAX_DROP_SIZE = 1000000;\r\n\r\nexport const ImageProvider = ({ collection, children, permanent }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const { updateCollection, artists } = useCollectionContext();\r\n\r\n  useEffect(() => {\r\n    let images = collection.images || [];\r\n    if (permanent) {\r\n      images = images.concat();\r\n    }\r\n    setImages(images);\r\n  }, [collection, permanent]);\r\n\r\n  const saveChanges = useCallback(() => {\r\n    collection.images = images;\r\n    updateCollection(collection);\r\n  }, [collection, images, updateCollection]);\r\n\r\n  const removeAllImages = useCallback(\r\n    (imageId) => {\r\n      setImages((images) => []);\r\n    },\r\n    [setImages]\r\n  );\r\n\r\n  const removeImage = useCallback(\r\n    (imageId) => {\r\n      setImages((images) => images.filter((image) => image.id !== imageId));\r\n    },\r\n    [setImages]\r\n  );\r\n\r\n  const updateImagesTokensIds = useCallback(\r\n    (imageId) => {\r\n      const dropId = parseInt(collection.dropId);\r\n      setImages((images) => images.map((image, index) => ({\r\n        ...image,\r\n        tokenId: MAX_DROP_SIZE * dropId + index,\r\n        internalNumber: index\r\n      })));\r\n    },\r\n    [setImages, collection.dropId]\r\n  );\r\n\r\n  const loadImagesFromCSV = useCallback(\r\n    (data) => {\r\n        const images = mapCollectionImages({\r\n          name: collection.name,\r\n          imageDir: collection.collectionID,\r\n        }, data, artists);\r\n      setImages(images);\r\n    },\r\n    [setImages, collection, artists]\r\n  );\r\n\r\n  const saveImage = useCallback(\r\n    (image) => {\r\n      if (!!image.id) {\r\n        const imageIndex = images.findIndex((item) => item.id === image.id);\r\n        if (imageIndex === -1) {\r\n          return false;\r\n        }\r\n        images[imageIndex] = {\r\n          ...images[imageIndex],\r\n          ...image,\r\n        };\r\n        return setImages([...images]);\r\n      }\r\n\r\n      let newId = Math.max(...images.map((image) => image.id));\r\n      if (newId) {\r\n        newId++;\r\n      } else {\r\n        newId = 1;\r\n      }\r\n      image.id = newId;\r\n      images.push(image);\r\n      setImages([...images]);\r\n    },\r\n    [setImages, images]\r\n  );\r\n\r\n  const saveIPFSData = useCallback((image) => {\r\n    const data = mapImageToIPFS(image, collection);\r\n    const bytes = new TextEncoder().encode(JSON.stringify(data));\r\n    var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\r\n    saveAs(blob, `${image.title}.json`);\r\n  }, [collection]);\r\n\r\n  return (\r\n    <ImageContext.Provider\r\n      value={{\r\n        images,\r\n        saveIPFSData,\r\n        loadImagesFromCSV,\r\n        removeImage,\r\n        saveChanges,\r\n        saveImage,\r\n        removeAllImages,\r\n        updateImagesTokensIds,\r\n      }}\r\n    >\r\n      {children}\r\n    </ImageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useImageContext = () => React.useContext(ImageContext);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { saveAs } from \"file-saver\";\nimport { toMarkleTree } from \"../utils/packing\";\nimport Web3 from \"web3\";\nimport { publicByte32 } from \"../utils/data\";\nimport { uid } from \"uid\";\n\nexport const PhaseContext = React.createContext({});\n\nlet counter = 1;\nconsole.log(\"counter init: \", counter);\n\nexport const PhaseProvider = ({ children, collection, onSaveChanges }) => {\n  const [phases, setPhases] = useState([\n    { index: counter, accessList: [], startDate: new Date() },\n  ]);\n  const [phasesData, setPhasesData] = useState({});\n\n  useEffect(() => {\n    const dtopPhases = (collection?.dropPhases || []).map((item) => {\n      return {\n        index: ++counter,\n        startDate: new Date(item.startTimestamp * 1000),\n        price: item.price ? Web3.utils.fromWei(item.price) : 0,\n        priceInWei: item.price ? item.price : 0,\n        accessList: (item.accessList?.concat() || []).map((addressItem) => ({\n          ...addressItem,\n          id: uid(),\n        })),\n        isPublic: !!item.isPublic,\n      };\n    });\n    setPhases(dtopPhases);\n  }, [collection]);\n\n  const onAddPhase = useCallback(() => {\n    console.log(\"-counter: \", counter);\n    counter++;\n    setPhases((pahsesArr) => [\n      ...pahsesArr,\n      { index: counter, accessList: [], startDate: new Date() },\n    ]);\n    console.log(\"+counter: \", counter);\n  }, [setPhases]);\n\n  const onRemovePhase = useCallback(\n    (phase) => {\n      setPhases((phases) => phases.filter((item) => item !== phase));\n    },\n    [setPhases]\n  );\n\n  const getPhase = useCallback(\n    (index) => {\n      return phases.find((item) => item.index === index);\n    },\n    [phases]\n  );\n\n  const updatePhase = useCallback(\n    (index, newPhase) => {\n      const phaseIndex = phases.findIndex((item) => item.index === index);\n      if (newPhase.price) {\n        newPhase.priceInWei = Web3.utils.toWei(newPhase.price);\n      }\n      phases[phaseIndex] = { ...phases[phaseIndex], ...newPhase };\n      console.log(\"Phase update\", phases[phaseIndex]);\n      setPhases([...phases]);\n    },\n    [phases]\n  );\n\n  const addAddressToPhase = useCallback(\n    (index, item) => {\n      const phase = getPhase(index);\n      phase.accessList = phase.accessList || [];\n      phase.accessList.push(item);\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const setAddressesToPhase = useCallback(\n    (index, addresses) => {\n      const phase = getPhase(index);\n      phase.accessList = addresses || [];\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const removeAddressFromPhase = useCallback(\n    (index, itemId) => {\n      const phase = getPhase(index);\n      phase.accessList = phase.accessList || [];\n      phase.accessList = phase.accessList.filter(\n        (listItem) => listItem.id !== itemId\n      );\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const generateMercleTreeForPhase = useCallback(\n    (index) => {\n      const phase = getPhase(index);\n      let warning;\n\n      if (!phase.price) {\n        updatePhase(index, { warning: \"Please enther the price!\" });\n        return false;\n      }\n\n      if (!phase.startDate) {\n        updatePhase(index, { warning: \"Please enther correct start date!\" });\n        return false;\n      }\n\n      if (!phase.isPublic) {\n        warning = phase.accessList.filter(\n          (item) => !item.address || !item.quantity\n        );\n        if (warning.length) {\n          updatePhase(index, { warning: \"Fill in all fields!\" });\n          return false;\n        }\n\n        let checkAddress = \"\";\n        phase.accessList.forEach((item, i) => {\n          item.warn = false;\n          if (!Web3.utils.isAddress(item.address)) {\n            checkAddress += `${i + 1},`;\n            item.warn = true;\n          }\n        });\n\n        if (checkAddress.length) {\n          updatePhase(index, {\n            warning: `The address in row ${checkAddress} is not correct.`,\n          });\n          return false;\n        }\n      }\n\n      const publicAccessList = [publicByte32];\n      let accessListProof = publicByte32;\n      let newAccessList = phase.accessList;\n      let accessListPhaseDrop = publicAccessList;\n      if (!phase.isPublic) {\n        const newArr = [...phase.accessList];\n        const markleTreeData = toMarkleTree(newArr);\n        newAccessList = markleTreeData.data;\n        accessListPhaseDrop = newAccessList.map((item) => ({\n          address: item.address,\n          quantity: item.quantity,\n          proof: item.proof,\n        }));\n        accessListProof = markleTreeData.root;\n      }\n\n      const startTimestamp = parseInt(phase.startDate.getTime() / 1000);\n      updatePhase(index, {\n        warning: \"\",\n        accessList: newAccessList,\n        rootHash: accessListProof,\n        startTimestamp,\n        phaseDrop: {\n          isPublic: phase.isPublic,\n          startTimestamp,\n          price: phase.priceInWei,\n          accessList: accessListPhaseDrop,\n          rootHash: accessListProof,\n        },\n        phaseDropStr: `[${startTimestamp}, ${phase.priceInWei}, \"${accessListProof}\"]`,\n      });\n      return newAccessList;\n    },\n    [phases, updatePhase, getPhase]\n  );\n\n  const prepareDropPhases = useCallback(() => {\n    const invalidPhase = phases.find(\n      (phase) => generateMercleTreeForPhase(phase.index) === false\n    );\n    if (invalidPhase) {\n      alert(\"Invalid phase exist. Please correct it and try again.\");\n      return { error: true };\n    }\n\n    let dropPhases = [];\n    const sortedPhases = phases.sort(\n      (a, b) => a.startDate.getTime() - b.startDate.getTime()\n    );\n    let dropPhasesRemixStr = sortedPhases.reduce((prev, next) => {\n      prev += next.phaseDropStr + \",\";\n      dropPhases.push(next.phaseDrop);\n      return prev;\n    }, \"[\");\n\n    dropPhases = dropPhases.sort((a, b) => a.startTimestamp - b.startTimestamp);\n    dropPhasesRemixStr =\n      dropPhasesRemixStr.substring(0, dropPhasesRemixStr.length - 1) + \"]\";\n\n    setPhasesData({\n      dropPhasesRemixStr,\n      dropPhases,\n    });\n    return {\n      dropPhasesRemixStr,\n      dropPhases,\n    };\n  }, [phases, getPhase, generateMercleTreeForPhase, onSaveChanges]);\n\n  const saveDropPhases = useCallback(() => {\n    const { dropPhases, error } = prepareDropPhases();\n    if (error) {\n      return;\n    }\n    onSaveChanges({\n      ...collection,\n      dropPhases,\n    });\n  }, [prepareDropPhases, onSaveChanges, collection]);\n\n  const generateAndSaveJSON = useCallback(() => {\n    const { dropPhases, error } = prepareDropPhases();\n    if (error) {\n      return;\n    }\n    const bytes = new TextEncoder().encode(JSON.stringify(dropPhases));\n    const blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, \"access-list.json\");\n  }, [prepareDropPhases, saveAs]);\n\n  const savePhasesJSON = useCallback(\n    (index) => {\n      const phase = getPhase(index);\n      if (!phase.accessList || !phase.accessList.length) {\n        return;\n      }\n      const bytes = new TextEncoder().encode(JSON.stringify(phase.accessList));\n      var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n      saveAs(blob, \"access-list.json\");\n    },\n    [phases, getPhase]\n  );\n\n  const updatePhaseAccessListItem = useCallback(\n    (phaseIndex, itemId, item) => {\n      const phase = getPhase(phaseIndex);\n      phase.accessList = phase.accessList.concat();\n      const itemIndex = phase.accessList.findIndex(\n        (listItem) => listItem.id == itemId\n      );\n      phase.accessList[itemIndex] = { ...phase.accessList[itemIndex], ...item };\n      const newAccessList = phase.accessList.map((item) => ({\n        ...item,\n        leafValue: \"\",\n        warn: false,\n        proof: false,\n      }));\n      updatePhase(phaseIndex, { accessList: newAccessList, rootHash: \"\" });\n    },\n    [phases, getPhase]\n  );\n\n  return (\n    <PhaseContext.Provider\n      value={{\n        phases,\n        onAddPhase,\n        savePhasesJSON,\n        updatePhaseAccessListItem,\n        onRemovePhase,\n        addAddressToPhase,\n        generateMercleTreeForPhase,\n        setAddressesToPhase,\n        updatePhase,\n        saveDropPhases,\n        phasesData,\n        generateAndSaveJSON,\n        removeAddressFromPhase,\n      }}\n    >\n      {children}\n    </PhaseContext.Provider>\n  );\n};\n\nexport const usePhaseContext = () => React.useContext(PhaseContext);\n","export default __webpack_public_path__ + \"static/media/no-image.baba1a73.png\";","import NoImage from \"../../assets/images/no-image.png\";\nimport {Badge, Button, Card, Col, Row} from \"react-bootstrap\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport { useCallback } from \"react\";\n\nexport function CollectionThumb({ collection, onRemove, onShow }) {\n  const onRemoveItem = useCallback(\n    (item) => {\n      onRemove(collection.id);\n    },\n    [collection, onRemove]\n  );\n\n  const onShowMore = useCallback(\n    (item) => {\n      onShow(collection);\n    },\n    [collection, onShow]\n  );\n\n  const firstImage =\n    collection.images && collection.images.length > 0\n      ? collection.images[0]\n      : { smallImage: NoImage };\n  return (\n    <Card style={{ width: \"18rem\", margin: \"10px\", padding: 0 }}>\n      <Card.Header >\n        <Row>\n          <Col lg={10}>\n            <Card.Title>{collection.name}</Card.Title>\n            <p>{collection.categoryName}</p>\n          </Col>\n          <Col lg={2}>\n            <CloseButton onClick={onRemoveItem} />\n          </Col>\n        </Row>\n        {collection.isMain && <Badge bg=\"primary\">Primary</Badge>}{' '}\n        {collection.isRandom && <Badge bg=\"secondary\">Random</Badge>}\n      </Card.Header>\n      <Card.Img\n        variant=\"top\"\n        src={firstImage.smallImage}\n        className=\"thumb-image\"\n      />\n      <Card.Body>\n        <Card.Title>\n          {collection.images?.length || 0} / {collection.itemsCount} images\n          loaded\n        </Card.Title>\n        <Card.Text>{collection.description}</Card.Text>\n        <div className=\"d-grid gap-2\">\n          <Button variant=\"primary\" size=\"lg\" onClick={onShowMore}>\n            Show More\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function ConfirmationModal({ onConfirm, show }) {\n  const handleClose = () => {\n    onConfirm(false);\n  };\n  const handleConfirm = () => {\n    onConfirm(true);\n  };\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Action</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want perform this action?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirm}>\n            Yep!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import {AutoComplete, Button, Checkbox, Form, Input, InputNumber, Switch} from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nexport function CollectionGeneralData({\n  collection,\n  onSaveChanges,\n  categoryOptions,\n}) {\n  const [form] = Form.useForm();\n  const [categoryType, setCategoryType] = useState();\n\n  useEffect(() => {\n    setCategoryType(collection?.categoryType || \"\");\n  }, [collection]);\n\n  const onFinish = useCallback(\n    (values: any) => {\n      console.log(\"Received values of form: \", values);\n      if (categoryType) {\n        values.categoryType = categoryType;\n      } else {\n        values.categoryType = values.categoryName\n          .toLowerCase()\n          .replace(/\\s/gm, \"_\");\n      }\n      onSaveChanges &&\n        onSaveChanges({\n          ...collection,\n          ...values,\n        });\n    },\n    [onSaveChanges, categoryType]\n  );\n\n  const onCategorySelect = useCallback(\n    (value, option: any) => {\n      setCategoryType(option.type);\n    },\n    [setCategoryType]\n  );\n\n  const onSearch = useCallback(\n    (option: any) => {\n      setCategoryType(\"\");\n    },\n    [setCategoryType]\n  );\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={collection}\n      style={{ maxWidth: 900 }}\n      scrollToFirstError\n    >\n      <Form.Item label=\"Name\" tooltip=\"Collection Name\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"name\"\n            noStyle\n            rules={[{ required: true, message: \"Name is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"title\"\n            noStyle\n            rules={[{ required: true, message: \"Title is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input title\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Category\">\n        <Form.Item\n          name=\"categoryName\"\n          noStyle\n          rules={[{ required: true, message: \"Category name is required\" }]}\n        >\n          <AutoComplete\n            options={categoryOptions}\n            onSelect={onCategorySelect}\n            onSearch={onSearch}\n            style={{ width: \"100%\" }}\n            placeholder=\"Category Name\"\n          >\n            <Input />\n          </AutoComplete>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item label=\"Contract / Drop ID\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"contractAddress\"\n            noStyle\n            rules={[{ required: false, message: \"Contract Address\" }]}\n          >\n            <Input style={{ width: \"70%\" }} placeholder=\"Contract\" />\n          </Form.Item>\n          <Form.Item\n            name=\"dropId\"\n            noStyle\n            rules={[{ required: true, message: \"Drop id is required\" }]}\n          >\n            <Input style={{ width: \"30%\" }} placeholder=\"Drop id\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Path / Collection ID\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"path\"\n            noStyle\n            rules={[{ required: true, message: \"Collection url required\" }]}\n          >\n            <Input\n              style={{ width: \"50%\" }}\n              placeholder=\"Collection Path (/alpha) id\"\n            />\n          </Form.Item>\n          <Form.Item name=\"collectionID\" noStyle>\n            <Input\n              style={{ width: \"50%\" }}\n              placeholder=\"Unique Collection Slug\"\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\" \">\n        <Input.Group >\n          <Form.Item\n            label=\"Main\"\n            valuePropName=\"checked\"\n            name=\"isMain\"\n            wrapperCol={{ offset: 8, span: 16 }}\n            noStyle\n          >\n            <Checkbox style={{ width: \"40%\" }}>Main Collection</Checkbox>\n          </Form.Item>\n          <Form.Item\n            label=\"Random Mint\"\n            valuePropName=\"checked\"\n            name=\"isRandom\"\n            noStyle\n          >\n            <Checkbox style={{ width: \"40%\" }}>Random</Checkbox>\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Author / Authors Count\">\n        <Input.Group compact>\n          <Form.Item name=\"author\" noStyle>\n            <Input style={{ width: \"70%\" }} placeholder=\"Authors name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"artists\"\n            noStyle\n            rules={[{ required: true, message: \"Category type is required\" }]}\n          >\n            <InputNumber\n              style={{ width: \"30%\" }}\n              min={1}\n              max={5000}\n              defaultValue={30}\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item name=\"aboutCollection\" label=\"Small Description\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item name=\"description\" label=\"Description\">\n        <Input.TextArea showCount />\n      </Form.Item>\n      <Form.List name=\"tags\">\n        {(fields, { add, remove }, { errors }) => (\n          <>\n            {fields.map((field, index) => (\n              <Form.Item\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                label={index === 0 ? \"Tags\" : \"\"}\n                required={false}\n                key={field.key}\n              >\n                <Form.Item\n                  {...field}\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      required: true,\n                      whitespace: true,\n                      message:\n                        \"Please input passenger's name or delete this field.\",\n                    },\n                  ]}\n                  noStyle\n                >\n                  <Input\n                    placeholder=\"passenger name\"\n                    style={{ width: \"60%\" }}\n                  />\n                </Form.Item>\n                {fields.length > 1 ? (\n                  <MinusCircleOutlined\n                    className=\"dynamic-delete-button\"\n                    onClick={() => remove(field.name)}\n                  />\n                ) : null}\n              </Form.Item>\n            ))}\n          </>\n        )}\n      </Form.List>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save Changes\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import {\n  Alert,\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Row,\n  Table,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useCallback, useState } from \"react\";\nimport { uid } from \"uid\";\nimport Web3 from \"web3\";\nimport DatePicker from \"react-datepicker\";\nimport CSVReader from \"react-csv-reader\";\nimport { parseAddressesCSV } from \"../../utils/data\";\nimport { usePhaseContext } from \"../../modules/PhaseContext\";\n\nconst papaparseOptions = {\n  header: false,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport const AddressTable = ({ phase }) => {\n  window.web3 = Web3;\n\n  const {\n    addAddressToPhase,\n    removeAddressFromPhase,\n    setAddressesToPhase,\n    updatePhaseAccessListItem,\n    generateMercleTreeForPhase,\n    updatePhase,\n  } = usePhaseContext();\n\n  const [row, setRow] = useState(phase.users || []);\n  const [checkAddress, setCheckAddress] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [price, setPrice] = useState(new Date());\n\n  const addNewRow = useCallback(() => {\n    addAddressToPhase(phase.index, {\n      address: \"\",\n      quantity: \"\",\n      hash: \"\",\n      id: uid(),\n    });\n  }, [phase, addAddressToPhase]);\n\n  const removeRow = useCallback(\n    (id) => {\n      removeAddressFromPhase(phase.index, id);\n    },\n    [phase, phase.accessList, removeAddressFromPhase]\n  );\n\n  const addAddress = useCallback(\n    (id, value) => {\n      updatePhaseAccessListItem(phase.index, id, { address: value });\n    },\n    [phase, phase.accessList, updatePhaseAccessListItem]\n  );\n\n  const addQuantity = useCallback(\n    (id, value) => {\n      updatePhaseAccessListItem(phase.index, id, { quantity: value });\n    },\n    [phase, phase.accessList, updatePhaseAccessListItem]\n  );\n\n  const clickHandler = useCallback(() => {\n    generateMercleTreeForPhase(phase.index);\n  }, [row, generateMercleTreeForPhase]);\n\n  const onFileLoaded = useCallback(\n    (data, fileInfo, originalFile) => {\n      const parsedData = parseAddressesCSV(data);\n      setAddressesToPhase(phase.index, parsedData);\n    },\n    [setRow, phase, setAddressesToPhase]\n  );\n\n  return (\n    <Container>\n      <div className={\"pt-5\"}>\n        {!!phase.warning && (\n          <Alert variant={\"warning\"} className={\"text-center pointer\"}>\n            {phase.warning}\n          </Alert>\n        )}\n      </div>\n      <Row>\n        <Col>\n          <p>Drop Phase Start Date / {phase.startDate.toLocaleString()}</p>\n          <DatePicker\n            selected={phase.startDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            onChange={(date) => updatePhase(phase.index, { startDate: date })}\n          />\n        </Col>\n        <Col>\n          <p>Price in eth</p>\n          <FormControl\n            type=\"number\"\n            step={0.1}\n            value={phase.price}\n            onChange={({ target }) =>\n              updatePhase(phase.index, { price: target.value })\n            }\n          />\n          {phase.priceInWei && <p className=\"small\">Wei: {phase.priceInWei}</p>}\n        </Col>\n        <Col>\n          <p>Is Public</p>\n          <Form.Check\n            type=\"switch\"\n            checked={phase.isPublic}\n            onChange={() =>\n              updatePhase(phase.index, { isPublic: !phase.isPublic })\n            }\n          />\n        </Col>\n      </Row>\n      {!phase.isPublic && (\n        <>\n          <CSVReader\n            onFileLoaded={onFileLoaded}\n            parserOptions={papaparseOptions}\n          />\n          <div className=\"address-table\">\n            <Table striped bordered hover size=\"md\">\n              <thead className={\"address-table-header\"}>\n                <tr>\n                  <th>#</th>\n                  <th>Address</th>\n                  <th>Access Quantity</th>\n                  <th>Leaf</th>\n                  <th>Hash</th>\n                </tr>\n              </thead>\n              <tbody>\n                {phase.accessList.map((item, i) => {\n                  let classname = \"\";\n                  if (item.warn) {\n                    classname = \"warning\";\n                  }\n                  return (\n                    <tr key={item.id}>\n                      <td>{i + 1}</td>\n                      <td className={classname}>\n                        <input\n                          className=\"address-input\"\n                          type=\"text\"\n                          value={item.address}\n                          onChange={(e) => addAddress(item.id, e.target.value)}\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"number\"\n                          className=\"quantity-input\"\n                          value={item.quantity}\n                          onChange={(e) => addQuantity(item.id, e.target.value)}\n                        />\n                      </td>\n                      <td className={\"break\"}>{item.leafValue || \"-\"}</td>\n                      <td className={\"break\"}>\n                        {item.proof ? JSON.stringify(item.proof) : \"-\"}\n                      </td>\n                      <td className={\"text-center\"}>\n                        <FontAwesomeIcon\n                          icon={faMinusCircle}\n                          onClick={() => removeRow(item.id)}\n                          className={\"clr pointer\"}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n          <div>\n            <Button className={\"text-center\"} onClick={addNewRow}>\n              Add Address\n              <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n            </Button>\n          </div>\n        </>\n      )}\n      <div>\n        <p>Hash: {phase.rootHash}</p>\n        <p>Drop Data: {phase.phaseDropStr}</p>\n      </div>\n      <hr className=\"clr\" />\n      <div className={\"text-center\"}>\n        <Button onClick={clickHandler} className={\"generate-btn\"}>\n          Generate\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { AddressTable } from \"./AddressTable\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button } from \"react-bootstrap\";\n\nexport function DropPhase({ phase, onRemovePhase }) {\n  const _onRemovePhase = useCallback(() => {\n    onRemovePhase && onRemovePhase(phase);\n  }, [phase, phase.index, onRemovePhase]);\n  let info = phase.accessList && ` Addresses Count: ${phase.accessList.length}`;\n  if (phase.isPublic) {\n    info = \" Public\";\n  }\n\n  return (\n    <Accordion.Item eventKey={phase.index}>\n      <Accordion.Header>\n        Drop Phase {phase.index}: {phase.price && `price: ${phase.price}`}{\" \"}\n        {phase.date && `date: ${phase.date}`} - {info}\n        <div className=\"header-button-group\">\n          <Button\n            className=\"text-center\"\n            variant=\"danger\"\n            onClick={_onRemovePhase}\n          >\n            Remove Phase\n            <FontAwesomeIcon\n              icon={faMinusCircle}\n              className=\"mr-4 clr pointer\"\n            />\n          </Button>\n        </div>\n      </Accordion.Header>\n      <Accordion.Body>\n        <AddressTable phase={phase} />\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button } from \"react-bootstrap\";\nimport { DropPhase } from \"./DropPhase\";\nimport { usePhaseContext } from \"../../modules/PhaseContext\";\n\nexport function DropPhases() {\n  const {\n    phases,\n    phasesData,\n    onAddPhase,\n    onRemovePhase,\n    generateAndSaveJSON,\n    saveDropPhases,\n  } = usePhaseContext();\n\n  const onSaveClicked = useCallback(() => {\n    generateAndSaveJSON();\n  }, [generateAndSaveJSON]);\n\n  const onSaveDropPhasesClicked = useCallback(() => {\n    saveDropPhases();\n  }, [saveDropPhases]);\n\n  return (\n    <Accordion>\n      {phases.map((phase) => (\n        <DropPhase phase={phase} onRemovePhase={onRemovePhase} />\n      ))}\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <p>Remix data: {phasesData.dropPhasesRemixStr}</p>\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <Button className={\"text-center\"} onClick={onAddPhase}>\n          Add Phase\n          <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n        </Button>\n        <Button onClick={onSaveClicked} className={\"save-btn\"}>\n          Save As Json\n        </Button>\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4 \">\n        <Button onClick={onSaveDropPhasesClicked} className={\"save-btn\"}>\n          Save Drop Phases\n        </Button>\n      </div>\n    </Accordion>\n  );\n}\n","import NoImage from \"../../assets/images/no-image.png\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport { useCallback } from \"react\";\n\nexport function ImageThumb({ image, onRemove, onEdit, onDownloadIPFS }) {\n  const onRemoveItem = useCallback(\n    (item) => {\n      onRemove(image.id);\n    },\n    [image, onRemove]\n  );\n\n  const onEditImage = useCallback(\n    (item) => {\n      onEdit(image);\n    },\n    [image, onEdit]\n  );\n\n  const onDownload = useCallback(\n    () => {\n      onDownloadIPFS(image);\n    },\n    [image, onDownloadIPFS]\n  );\n\n  return (\n    <Card style={{ width: \"18rem\", margin: \"15px\", padding: 0 }}>\n      <Card.Header>\n        <Row>\n          <Col lg={10}>\n            <Card.Title className=\"img-title\">{image.title}</Card.Title>\n            <p>{image.artist}</p>\n          </Col>\n          <Col lg={2}>\n            <CloseButton onClick={onRemoveItem} />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Img variant=\"top\" src={image.smallImage} className=\"thumb-image\" />\n      <Card.Body>\n        <p>{image.tags?.join(\", \") || \"\"}</p>\n      </Card.Body>\n      <Card.Footer>\n        <div className=\"d-grid gap-0 m-0 p-0\">\n          <Button variant=\"light\" size=\"lg\" onClick={onEditImage}>\n            Edit\n          </Button><Button variant=\"light\" size=\"lg\" onClick={onDownload}>\n            Download IPFS JSON\n          </Button>\n        </div>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import { AutoComplete, Button, Divider, Form, Input, InputNumber } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nexport function ImageForm({ image, onSaveChanges }) {\n  const { artistOptions } = useCollectionContext();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.resetFields();\n    form.setFieldsValue(image);\n  }, [image, form]);\n\n  const onFinish = useCallback(\n    (values: any) => {\n      onSaveChanges &&\n        onSaveChanges({\n          ...image,\n          ...values,\n        });\n    },\n    [onSaveChanges]\n  );\n\n  const onAuthorSelect = useCallback(\n    (value, option) => {\n      form.setFieldValue(\"artistImg\", option.artistImg);\n    },\n    [form]\n  );\n\n  const onImageChange = useCallback(\n    ({ target: { value } }) => {\n      if (value) {\n        const valueArr = value.split(\".\");\n        const maxIndex =\n          valueArr.length - 2 > 0 ? valueArr.length - 2 : valueArr.length - 1;\n        valueArr[maxIndex] += \"-small\";\n        value = valueArr.join(\".\");\n      }\n      form.setFieldValue(\"smallImage\", value);\n    },\n    [form]\n  );\n\n  const onAddTag = useCallback(() => {\n    const tags = form.getFieldValue(\"tags\") || [];\n    tags.push(\"\");\n    form.setFieldsValue(\"tags\", tags);\n  }, [form]);\n\n  const onSearch = useCallback((option) => {\n\n  }, []);\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"image\"\n      onFinish={onFinish}\n      initialValues={image}\n      style={{ maxWidth: 900, marginTop: 40 }}\n      scrollToFirstError\n    >\n      <Form.Item\n        label=\"ID / Collection / Title\"\n        tooltip=\"Image title \"\n      >\n        <Input.Group compact>\n          <Form.Item name=\"id\" noStyle>\n            <Input\n              style={{ width: \"20%\" }}\n              placeholder=\"Image id\"\n              disabled={true}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"collection\"\n            noStyle\n            rules={[{ required: true, message: \"Collection Name is required\" }]}\n          >\n            <Input\n              style={{ width: \"30%\" }}\n              placeholder=\"Collection Name\"\n              disabled={true}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"title\"\n            noStyle\n            rules={[{ required: true, message: \"Title is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input title\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Subtitle / Internal Id / Token Id\"\n      >\n        <Input.Group compact>\n          <Form.Item name=\"subtitle\" noStyle>\n            <Input style={{ width: \"40%\" }} placeholder=\"Subtitle\" />\n          </Form.Item>\n          <Form.Item\n            name=\"internalNumber\"\n            noStyle\n            rules={[{ required: true, message: \"Internal number\" }]}\n          >\n            <Input style={{ width: \"30%\" }} placeholder=\"Internal id\" />\n          </Form.Item>\n          <Form.Item name=\"tokenId\" noStyle>\n            <Input style={{ width: \"30%\" }} placeholder=\"Token Id\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Artist\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"artist\"\n            noStyle\n            rules={[{ required: true, message: \"Artist name is required\" }]}\n          >\n            <AutoComplete\n              options={artistOptions}\n              onSelect={onAuthorSelect}\n              filterOption={(inputValue, option) =>\n                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n              }\n              style={{ width: \"50%\" }}\n              placeholder=\"Artist Name\"\n            >\n              <Input />\n            </AutoComplete>\n          </Form.Item>\n          <Form.Item\n            name=\"artistImg\"\n            noStyle\n            rules={[{ required: true, message: \"Artist image is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Artist Image\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Camera / Manufacturer / Tone\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"camera\"\n            noStyle\n            rules={[{ required: true, message: \"Camera\" }]}\n          >\n            <Input style={{ width: \"33%\" }} placeholder=\"Camera\" />\n          </Form.Item>\n          <Form.Item\n            name=\"cameraManufacturer\"\n            noStyle\n            rules={[{ required: true, message: \"Camera Manufacture\" }]}\n          >\n            <Input style={{ width: \"33%\" }} placeholder=\"Camera Manufacturer\" />\n          </Form.Item>\n          <Form.Item name=\"tone\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"Tone\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"License / Country\">\n        <Input.Group compact>\n          <Form.Item name=\"license\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"License\" />\n          </Form.Item>\n          <Form.Item name=\"country\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"Country\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Image\">\n        <Input.Group compact>\n          <Form.Item name=\"image\" noStyle>\n            <Input\n              style={{ width: \"100%\" }}\n              placeholder=\"Image\"\n              onChange={onImageChange}\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Small Image\">\n        <Form.Item name=\"smallImage\" noStyle>\n          <Input\n            style={{ width: \"100%\" }}\n            placeholder=\"Small image\"\n            disabled={true}\n          />\n        </Form.Item>\n      </Form.Item>\n      <Form.Item name=\"description\" label=\"Description\">\n        <Input.TextArea showCount />\n      </Form.Item>\n      <Form.List name=\"tags\">\n        {(fields, { add, remove }, { errors }) => (\n          <>\n            {fields.map((field, index) => (\n              <Form.Item\n                label={`Tags ${index}`}\n                required={false}\n                key={field.key}\n              >\n                <Form.Item\n                  {...field}\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      required: true,\n                      whitespace: true,\n                      message:\n                        \"Please input passenger's name or delete this field.\",\n                    },\n                  ]}\n                  noStyle\n                >\n                  <Input\n                    placeholder=\"passenger name\"\n                    style={{ width: \"60%\" }}\n                  />\n                </Form.Item>\n                {fields.length > 1 ? (\n                  <MinusCircleOutlined\n                    className=\"dynamic-delete-button\"\n                    onClick={() => remove(field.name)}\n                  />\n                ) : null}\n              </Form.Item>\n            ))}\n          </>\n        )}\n      </Form.List>\n      <Form.Item name=\" \" label=\" \">\n        <Button type=\"dashed\" onClick={onAddTag} style={{ width: \"60%\" }}>\n          <PlusOutlined /> Add Tag\n        </Button>\n      </Form.Item>\n      <Divider />\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save Form Data\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ImageThumb } from \"./ImageslistThumb\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport { useImageContext } from \"../../modules/ImageContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ImageForm } from \"./ImageForm\";\r\nimport Files from \"react-files\";\r\nimport {toast} from \"react-toast\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\nconst parseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n};\r\n\r\nexport function Images({ collection }) {\r\n  const { images, removeImage, removeAllImages, updateImagesTokensIds, saveChanges, saveIPFSData, saveImage, loadImagesFromCSV } =\r\n    useImageContext();\r\n  const [editingImage, setEditingImage] = useState({});\r\n  const isNewImage = !editingImage.id && editingImage.id !== 0;\r\n  const dropId = parseInt(collection.dropId);\r\n  const showUpdateTokensButtons = !isNaN(dropId) && dropId > 0 && !collection.isRandom;\r\n\r\n  const onAddImage = useCallback(() => {\r\n    setEditingImage({\r\n      collection: collection.name,\r\n      subtitle: collection.name,\r\n    });\r\n  }, [setEditingImage]);\r\n\r\n  useEffect(() => {\r\n    setEditingImage((oldData) => ({\r\n      ...oldData,\r\n      collection: collection.name,\r\n      subtitle: collection.name,\r\n    }));\r\n  }, [collection]);\r\n\r\n  const onEditImage = useCallback(\r\n    (image) => {\r\n      setEditingImage(image);\r\n    },\r\n    [editingImage]\r\n  );\r\n\r\n  const onDownloadIPFS = useCallback(\r\n    (image) => {\r\n      saveIPFSData(image);\r\n    },\r\n    [saveIPFSData]\r\n  );\r\n\r\n  const onFileLoaded = useCallback(\r\n    async (file) => {\r\n      try {\r\n        console.log(file);\r\n        await loadImagesFromCSV(file);\r\n      } catch (err) {\r\n        console.log(err);\r\n        toast.error(\"Failed load images\");\r\n        toast.error(err.message);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Row className=\"justify-content-center align-content-center\">\r\n      <div className=\"d-flex justify-content-between align-items-center ms-5 me-5 ps-4\">\r\n        <h3>Images</h3>\r\n        {showUpdateTokensButtons && <Button onClick={updateImagesTokensIds} className={\"save-btn\"}>\r\n          Update Tokens Ids\r\n        </Button>}\r\n        <Button onClick={removeAllImages} className={\"save-btn\"}>\r\n          Remove All\r\n        </Button>\r\n      </div>\r\n      <div className=\"images-list-cont\">\r\n        {(images || []).map((image) => (\r\n          <ImageThumb\r\n            image={image}\r\n            onRemove={removeImage}\r\n            onEdit={onEditImage}\r\n            onDownloadIPFS={onDownloadIPFS}\r\n          />\r\n        ))}\r\n      </div>\r\n      <ImageForm image={editingImage} onSaveChanges={saveImage} />\r\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n        <Col lg={3}>\r\n          <Button className={\"text-center\"} onClick={onAddImage}>\r\n            Add Image\r\n            <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\r\n          </Button>\r\n        </Col>\r\n        <Col lg={3}>\r\n          Load Images CSV File\r\n          <CSVReader\r\n            onFileLoaded={onFileLoaded}\r\n            parserOptions={parseOptions}\r\n          >\r\n          </CSVReader>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <Button onClick={saveChanges} className={\"save-btn\"}>\r\n            Save Changes\r\n          </Button>\r\n        </Col>\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n","import { Tab, Row, Tabs } from \"react-bootstrap\";\nimport { useCallback } from \"react\";\nimport { toast } from \"react-toast\";\nimport { CollectionGeneralData } from \"./CollectionGeneralData\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\nimport { DropPhases } from \"../phases/DropPhases\";\nimport { PhaseProvider } from \"../../modules/PhaseContext\";\nimport { on } from \"local-storage\";\nimport { Images } from \"../image-list/Images\";\nimport { ImageProvider, useImageContext } from \"../../modules/ImageContext\";\n\nexport function CollectionViewEdit({ collection }) {\n  const { updateCollection, categoryOptions } = useCollectionContext();\n\n  const onSaveChanges = useCallback(\n    async (item) => {\n      const isSavedSuccess = await updateCollection(item);\n      if (isSavedSuccess) {\n        toast.success(\"Collection updated\");\n      }\n    },\n    [updateCollection]\n  );\n\n  return (\n    <Row>\n      <Tabs\n        defaultActiveKey=\"general\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"general\" title=\"General\">\n          <CollectionGeneralData\n            collection={collection}\n            onSaveChanges={onSaveChanges}\n            categoryOptions={categoryOptions}\n          />\n        </Tab>\n        <Tab eventKey=\"dtopPhases\" title=\"Drop Phases\">\n          <PhaseProvider collection={collection} onSaveChanges={onSaveChanges}>\n            <DropPhases />\n          </PhaseProvider>\n        </Tab>\n        <Tab eventKey=\"images\" title=\"Images\">\n          <ImageProvider collection={collection}>\n            <Images collection={collection} />\n          </ImageProvider>\n        </Tab>\n      </Tabs>\n    </Row>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button, Col, Modal, Row } from \"react-bootstrap\";\nimport Files from \"react-files\";\nimport { toast } from \"react-toast\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\nimport { CollectionThumb } from \"./CollectionThumb\";\nimport ConfirmationModal from \"../comnmon/ConfirmationModal\";\nimport { CollectionViewEdit } from \"./CollectionEditView\";\n\nexport function Collections({ onCollectionEdit }) {\n  const {\n    collections,\n    addCollection,\n    loadCollections,\n    removeCollection,\n    saveCollectionsData,\n    saveCollectionJSON,\n    clearAllCollectionData,\n  } = useCollectionContext();\n\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\n\n  const [confirmHandler, setConfirmHandler] = useState({ handler: () => {} });\n\n  const onConfirmation = useCallback(\n    (confirmed) => {\n      setShowConfirmPopup(false);\n      if (!confirmed) {\n        return;\n      }\n      confirmHandler.handler();\n    },\n    [setShowConfirmPopup, confirmHandler]\n  );\n\n  const onAddCollection = useCallback(() => {\n    addCollection();\n  }, [addCollection]);\n\n  const onLoadCollection = useCallback(async ([file]) => {\n    try {\n      await loadCollections(file);\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Failed load file\");\n      toast.error(err.message);\n    }\n  }, []);\n\n  const onCollectionShow = useCallback(\n    (collection) => {\n      onCollectionEdit(collection);\n    },\n    [onCollectionEdit]\n  );\n\n  const onSaveClicked = useCallback(() => {\n    saveCollectionJSON();\n  }, [saveCollectionJSON]);\n\n  const onRemoveCollection = useCallback((collectionId) => {\n    setShowConfirmPopup(true);\n    setConfirmHandler({ handler: () => removeCollection(collectionId) });\n  }, []);\n\n  const onClearAllData = useCallback(() => {\n    setShowConfirmPopup(true);\n    setConfirmHandler({ handler: () => clearAllCollectionData() });\n  }, [clearAllCollectionData]);\n\n  return (\n    <Row>\n      <h3>Collections</h3>\n      {!collections.length && (\n        <Row className=\"no-collections-container\">\n          You don't have any collections yet. Add it or load it from json file.\n        </Row>\n      )}\n      {collections.map((collection) => (\n        <CollectionThumb\n          collection={collection}\n          onShow={onCollectionShow}\n          onRemove={onRemoveCollection}\n        />\n      ))}\n      <Row className=\"mt-4\">\n        <Col>\n          <Button className={\"text-center\"} onClick={onAddCollection}>\n            Add Collection\n            <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n          </Button>\n        </Col>\n        <Col>\n          <Files\n            className=\"files-dropzone\"\n            onChange={onLoadCollection}\n            accepts={[\"json/text\", \".json\"]}\n            maxFileSize={10000000}\n            minFileSize={0}\n            clickable\n          >\n            <Button className={\"text-center\"}>\n              Load Collections File\n              <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n            </Button>\n          </Files>\n        </Col>\n        <Col>\n          <Button onClick={onSaveClicked} className={\"save-btn\"}>\n            Save As Json\n          </Button>\n        </Col>\n        <Col>\n          <Button onClick={onClearAllData} className={\"save-btn\"}>\n            Clear All Data\n          </Button>\n        </Col>\n      </Row>\n      <ConfirmationModal onConfirm={onConfirmation} show={showConfirmPopup} />\n    </Row>\n  );\n}\n","import { Button, Card, Col, Row } from \"react-bootstrap\";\n\nexport function ArtistThumb({ artist }) {\n  return (\n    <Card style={{ width: \"18rem\", margin: \"15px\", padding: 0 }}>\n      <Card.Header>\n        <Row>\n          <Col lg={10}>\n            <Card.Title className=\"img-title\">{artist.name}</Card.Title>\n            <p>{artist.nickname} {artist.website && <a href={artist.website} target=\"_blank\">{artist.website}</a>}</p>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Img variant=\"top\" src={artist.fullImageSrc} className=\"thumb-image\" />\n      <Card.Body>\n        <Card.Text>\n          <p>{artist.bio}</p>\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Button variant=\"link\" href={`https://light.art/artists/${artist.url}`}>\n          View On Website\n        </Button>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {useCollectionContext} from \"../../modules/CollectionContext\";\nimport {ArtistThumb} from \"./ArtistsThumb\";\nimport {toast} from \"react-toast\";\nimport CSVReader from \"react-csv-reader\";\n\nconst parseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport function Artists({ collection }) {\n  const { artists, loadArtists } =\n    useCollectionContext();\n\n  const onLoadArtists = useCallback(async (fileData) => {\n    try {\n      await loadArtists(fileData);\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Failed load artists\");\n      toast.error(err.message);\n    }\n  }, []);\n\n  return (\n    <Row className=\"justify-content-center align-content-center\">\n      <div className=\"d-flex justify-content-between align-items-center ms-5 me-5 ps-4\">\n        <h3>Artists</h3>\n      </div>\n      <div className=\"images-list-cont\">\n        {(artists || []).map((artist) => (\n          <ArtistThumb\n            artist={artist}\n          />\n        ))}\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4 \">\n        <Col lg={3}>\n          Load Artists CSV File\n          <CSVReader\n            onFileLoaded={onLoadArtists}\n            parserOptions={parseOptions}\n          >\n          </CSVReader>\n        </Col>\n      </div>\n    </Row>\n  );\n}\n","import { useCallback, useState } from \"react\";\r\nimport { Accordion, Button, Col, Modal, Row, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CollectionViewEdit } from \"./collections-list/CollectionEditView\";\r\nimport { ImageProvider } from \"../modules/ImageContext\";\r\nimport { Images } from \"./image-list/Images\";\r\nimport { Collections } from \"./collections-list/Collections\";\r\nimport {Artists} from \"./artists/Artists\";\r\n\r\nexport function Main() {\r\n  const [editingCollection, setEditingCollection] = useState(null);\r\n  const [activeTabKey, setActiveTabKey] = useState('collections');\r\n\r\n  const onCollectionEdit = useCallback(\r\n    (collection) => {\r\n      setEditingCollection(collection);\r\n      setActiveTabKey('item');\r\n    },\r\n    [setEditingCollection, setActiveTabKey]\r\n  );\r\n\r\n  const onChangeTab = useCallback((value) => {\r\n    setActiveTabKey(value);\r\n  }, [setActiveTabKey]);\r\n\r\n  return (\r\n    <Row>\r\n      <Tabs\r\n        activeKey={activeTabKey}\r\n        className=\"mb-3\"\r\n        onSelect={onChangeTab}\r\n      >\r\n        <Tab eventKey=\"collections\" title=\"Collections\">\r\n          <Collections onCollectionEdit={onCollectionEdit} />\r\n        </Tab>\r\n        <Tab eventKey=\"artists\" title=\"Artists\">\r\n          <Artists/>\r\n        </Tab>\r\n        {editingCollection && <Tab eventKey=\"item\" title=\"Collection Item\" >\r\n          <CollectionViewEdit collection={editingCollection} />\r\n        </Tab>}\r\n      </Tabs>\r\n    </Row>\r\n  );\r\n}\r\n","import \"antd/dist/antd.css\";\nimport { Container } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { PhaseProvider } from \"./modules/PhaseContext\";\nimport { CollectionProvider } from \"./modules/CollectionContext\";\nimport { Collections } from \"./components/collections-list/Collections\";\nimport { ToastContainer } from \"react-toast\";\nimport { Main } from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Container className={\"big-container\"}>\n        <CollectionProvider>\n          <PhaseProvider>\n            <Main />\n          </PhaseProvider>\n        </CollectionProvider>\n      </Container>\n      <ToastContainer delay={6000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}