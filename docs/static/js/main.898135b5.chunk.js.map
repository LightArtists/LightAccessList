{"version":3,"sources":["utils/packing.js","modules/data.js","modules/CollectionContext.js","utils/data.js","modules/ImageContext.js","modules/PhaseContext.js","assets/images/no-image.png","components/collections-list/CollectionThumb.js","components/comnmon/ConfirmationModal.js","components/collections-list/CollectionGeneralData.js","components/phases/AddressTable.js","components/phases/DropPhase.js","components/phases/DropPhases.js","components/image-list/ImageslistThumb.js","components/image-list/ImageForm.js","components/image-list/Images.js","components/collections-list/CollectionEditView.js","components/collections-list/Collections.js","components/artists/ArtistsThumb.js","components/artists/Artists.js","components/Main.js","App.js","index.js"],"names":["packAddressAndQuantity","address","quantity","num","addressAsNumberString","web3","utils","hexToNumberString","bytesToBytesN","hexToHexBytes","addressToBytes32","addressBN","BN","quantityAsNumberString","toHex","shrnQuantity","shrn","result","or","console","log","toString","padLeft","hex","bytesLength","bytes","hexToBytes","length","concat","unshift","bytesToHex","n","Array","isArray","lengthDiff","Error","emptyBytesN","repeat","split","map","i","parseInt","newBytes","defaultNewCollection","name","title","collectionID","categoryName","categoryType","itemsCount","author","path","dropId","artists","dropPhases","tags","aboutCollection","description","CollectionContext","React","createContext","CollectionProvider","children","useState","setArtists","collections","setCollections","artistOptions","setArtistOptions","useEffect","ls","artistsNames","artist","value","artistImg","imageSrc","filter","index","arr","findIndex","a","saveCollectionsData","useCallback","newData","oldData","results","err","alert","loadCollections","file","reader","FileReader","Promise","resolve","reject","addEventListener","event","data","JSON","parse","target","reduce","coll","id","uid","e","readAsText","loadArtists","parseArtists","addCollection","defaultName","existNames","includes","maxNum","Math","max","replace","item","isNaN","suffix","getNextName","removeCollection","collectionId","collection","updateCollection","find","foundCollectionIndex","isMain","forEach","clearAllCollectionData","newPhase","saveCollectionJSON","TextEncoder","encode","stringify","blob","Blob","type","saveAs","categoryOptions","useMemo","Provider","useCollectionContext","useContext","ImageContext","MAX_DROP_SIZE","ImageProvider","permanent","images","setImages","saveChanges","removeAllImages","imageId","removeImage","image","updateImagesTokensIds","tokenId","internalNumber","loadImagesFromCSV","collectionData","imageData","jsonItem","mappedData","Object","keys","mapFields","newObject","sourceKey","mapCollectionImage","COLLECTION_IMAGE_BASE_URL","imageDir","fileName","smallImage","subtitle","toLowerCase","findArtistImageFullPathByName","zeroTokenNumber","startIdNumber","sort","b","mapCollectionImages","saveImage","imageIndex","newId","push","saveIPFSData","imageIPFS","external_url","license_document","attributes","trait_type","tone","set","cameraManufacturer","camera","country","join","license","Date","getFullYear","mapImageToIPFS","publicByte32","key","j","imageEx","test","fullImageSrc","localeCompare","PhaseContext","counter","PhaseProvider","onSaveChanges","accessList","startDate","phases","setPhases","phasesData","setPhasesData","dtopPhases","startTimestamp","price","Web3","fromWei","priceInWei","addressItem","isPublic","onAddPhase","pahsesArr","onRemovePhase","phase","getPhase","updatePhase","phaseIndex","toWei","addAddressToPhase","setAddressesToPhase","addresses","removeAddressFromPhase","itemId","listItem","generateMercleTreeForPhase","warning","checkAddress","warn","isAddress","publicAccessList","accessListProof","newAccessList","accessListPhaseDrop","markleTreeData","leafs","leafValue","tree","MerkleTree","keccak256","sortPairs","root","getRoot","proof","getHexProof","proofPositional","getPositionalHexProof","toMarkleTree","getTime","rootHash","phaseDrop","phaseDropStr","prepareDropPhases","error","dropPhasesRemixStr","prev","next","substring","saveDropPhases","generateAndSaveJSON","savePhasesJSON","updatePhaseAccessListItem","itemIndex","usePhaseContext","CollectionThumb","onRemove","onShow","onRemoveItem","onShowMore","firstImage","NoImage","Card","style","width","margin","padding","Header","Row","Col","lg","Title","CloseButton","onClick","Badge","bg","isRandom","Img","variant","src","className","Body","Text","Button","size","ConfirmationModal","onConfirm","show","handleClose","Modal","onHide","backdrop","keyboard","closeButton","Footer","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","formItemLayoutWithOutLabel","CollectionGeneralData","Form","useForm","form","setCategoryType","onFinish","values","onCategorySelect","option","onSearch","initialValues","maxWidth","scrollToFirstError","Item","label","tooltip","Group","compact","noStyle","rules","required","message","placeholder","options","onSelect","valuePropName","min","defaultValue","TextArea","showCount","List","fields","add","remove","errors","field","validateTrigger","whitespace","MinusCircleOutlined","htmlType","papaparseOptions","header","dynamicTyping","skipEmptyLines","AddressTable","window","users","row","setRow","addNewRow","hash","removeRow","addAddress","addQuantity","clickHandler","onFileLoaded","fileInfo","originalFile","parsedData","shift","parseAddressesCSV","Container","Alert","toLocaleString","selected","showTimeSelect","timeFormat","onChange","date","FormControl","step","Check","checked","parserOptions","Table","striped","bordered","hover","classname","icon","faMinusCircle","faPlusCircle","DropPhase","_onRemovePhase","info","Accordion","eventKey","DropPhases","onSaveClicked","onSaveDropPhasesClicked","ImageThumb","onEdit","onDownloadIPFS","onEditImage","onDownload","ImageForm","resetFields","setFieldsValue","onAuthorSelect","setFieldValue","onImageChange","valueArr","onAddTag","getFieldValue","marginTop","disabled","filterOption","inputValue","toUpperCase","indexOf","PlusOutlined","parseOptions","Images","editingImage","setEditingImage","showUpdateTokensButtons","onAddImage","toast","CollectionViewEdit","success","Tabs","defaultActiveKey","Tab","Collections","onCollectionEdit","showConfirmPopup","setShowConfirmPopup","handler","confirmHandler","setConfirmHandler","onConfirmation","confirmed","onAddCollection","onLoadCollection","onCollectionShow","onRemoveCollection","onClearAllData","accepts","maxFileSize","minFileSize","clickable","ArtistThumb","nickname","website","href","bio","url","Artists","onLoadArtists","fileData","Main","editingCollection","setEditingCollection","activeTabKey","setActiveTabKey","onChangeTab","activeKey","App","delay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.898135b5.chunk.js","sourcesContent":["import keccak256 from \"keccak256\";\nimport MerkleTree from \"merkletreejs\";\nimport Web3 from \"web3\";\nimport web3 from \"web3\";\n\nexport function toMarkleTree(data) {\n  const leafs = data.map((data) => {\n    const { quantity, address } = data;\n    return {\n      ...data,\n      leafValue: packAddressAndQuantity(address, quantity),\n    };\n  });\n  const tree = new MerkleTree(\n    leafs.map((item) => item.leafValue),\n    keccak256,\n    { sortPairs: true }\n  );\n  const root = \"0x\" + tree.getRoot().toString(\"hex\");\n  const results = {\n    root,\n    data: leafs.map((data, index) => ({\n      ...data,\n      proof: tree.getHexProof(data.leafValue),\n      proofPositional: tree.getPositionalHexProof(data.leafValue, index),\n    })),\n  };\n  console.log(\"results\", tree.toString()); // true\n  console.log(\"results\", results); // true\n  return results;\n}\n\nexport function packAddressAndQuantity(address, quantity) {\n  const addressAsNumberString = web3.utils.hexToNumberString(\n    addressToBytes32(address)\n  );\n  const addressBN = new web3.utils.BN(addressAsNumberString);\n  const quantityAsNumberString = web3.utils.hexToNumberString(\n    numberToBytes32(quantity)\n  );\n  const quantityBN = new web3.utils.BN(quantityAsNumberString);\n  const shrnQuantity = quantityBN.shrn(160);\n  const result = addressBN.or(shrnQuantity);\n  console.log(\n    \"Add: 0x\" + addressBN.toString(16),\n    \" |||| Qunt: 0x\" + shrnQuantity.toString(16),\n    \" ||||| result: 0x\" + result.toString(16)\n  );\n  return \"0x\" + web3.utils.padLeft(result, 64);\n}\n\nfunction hexToHexBytes(hex, bytesLength) {\n  const bytes = web3.utils.hexToBytes(hex);\n  if (!bytesLength || bytesLength === bytes.length) {\n    return bytes.concat([]);\n  }\n\n  if (bytesLength < bytes.length) {\n    throw \"Data will be lost\";\n  }\n  while (bytesLength != bytes.length) {\n    bytes.unshift(0);\n  }\n  return web3.utils.bytesToHex(bytes);\n}\n\nfunction bytesToBytesN(bytes, n) {\n  if (!Array.isArray(bytes)) {\n    bytes = web3.utils.hexToBytes(bytes);\n  }\n  const lengthDiff = n - bytes.length;\n  if (lengthDiff < 0) {\n    throw new Error(\"Data loss\");\n  }\n  if (lengthDiff === 0) {\n    return bytes.concat([]);\n  }\n  // lengthDiff bytes 0\n  const emptyBytesN = \"0\"\n    .repeat(lengthDiff)\n    .split(\"\")\n    .map((i) => parseInt(i));\n  // contact 2 bytes\n  const newBytes = bytes.concat(emptyBytesN);\n  // create n bytes hex address\n  return web3.utils.bytesToHex(newBytes);\n}\n\nfunction addressToBytes32(address) {\n  // convert address string to bytes(20)\n  const addressBytes20 = hexToHexBytes(address);\n  return bytesToBytesN(addressBytes20, 32);\n}\n\nfunction numberToBytes32(num) {\n  // convert number to hex\n  const hex = web3.utils.toHex(num);\n  const bytes12 = hexToHexBytes(hex, 12);\n  const bytes32 = bytesToBytesN(bytes12, 32);\n  return bytes32;\n}\n\nexport function hashePassword(string) {\n  //const abiEndcoded = web3.eth.abi.encodeParameters(string);\n  if (!string) {\n    return \"\";\n  }\n  const web3 = new Web3();\n  const bytes32Password = web3.utils.asciiToHex(string);\n  const abiEndcoded = web3.eth.abi.encodeParameters(\n    [\"bytes\"],\n    [bytes32Password]\n  );\n  return web3.utils.toHex(keccak256(abiEndcoded));\n}\n","export const defaultNewCollection = {\n  name: \"New Collection\",\n  title: \"New(2022)\",\n  collectionID: \"new\",\n  categoryName: \"Annual Series\",\n  categoryType: \"annual\",\n  itemsCount: 200,\n  author: \"a collective\",\n  path: \"/new\",\n  dropId: 10,\n  artists: 54,\n  dropPhases: [],\n  tags: [],\n  aboutCollection: \"\",\n  description:\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n};\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport * as ls from \"local-storage\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { uid } from \"uid\";\r\nimport { defaultNewCollection } from \"./data\";\r\nimport {getNextName, parseArtists} from \"../utils/data\";\r\n\r\nexport const CollectionContext = React.createContext({});\r\n\r\nexport const CollectionProvider = ({ children }) => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [collections, setCollections] = useState([]);\r\n  const [artistOptions, setArtistOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const collections = ls.get(\"collections\");\r\n    const artists = ls.get(\"artists\");\r\n    if (collections && collections.length) {\r\n      setCollections(collections);\r\n    }\r\n    if (artists && artists.length) {\r\n      setArtists(artists);\r\n    }\r\n  }, []);\r\n\r\n  const updateArtistOptions = useEffect(\r\n    () => {\r\n      const artistsNames = artists\r\n        .map((artist) => ({\r\n          name: artist.name,\r\n          value: artist.name,\r\n          artistImg: artist.imageSrc,\r\n        }))\r\n        .filter(\r\n          (artist, index, arr) =>\r\n            index === arr.findIndex((a) => a.name === artist.name)\r\n        );\r\n      setArtistOptions(artistsNames);\r\n    },\r\n    [artists]\r\n  );\r\n\r\n  const saveCollectionsData = useCallback(\r\n    (newData) => {\r\n      if (!newData) {\r\n        throw new Error(\"Cannot set collection to null\");\r\n      }\r\n      try {\r\n        setCollections((oldData) => {\r\n          if (newData === true) {\r\n            ls.set(\"collections\", oldData);\r\n            return oldData;\r\n          }\r\n          if (Array.isArray(newData)) {\r\n            ls.set(\"collections\", newData);\r\n            return newData;\r\n          }\r\n          const results = newData(oldData);\r\n          ls.set(\"collections\", results);\r\n          return results;\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n        alert(\"Could not save progress.\");\r\n      }\r\n    },\r\n    [setCollections]\r\n  );\r\n\r\n  const loadCollections = useCallback(\r\n    async (file) => {\r\n      const reader = new FileReader();\r\n      return new Promise((resolve, reject) => {\r\n        reader.addEventListener(\"load\", (event) => {\r\n          try {\r\n            const data = JSON.parse(event.target.result);\r\n            data.reduce((coll, map) => {\r\n              if (!coll.id) {\r\n                coll.id = uid();\r\n              }\r\n              if (coll.id in map) {\r\n                coll.id = uid();\r\n              }\r\n              map[coll.id] = true;\r\n              return map;\r\n            }, {});\r\n            saveCollectionsData((collections) => [...collections, ...data]);\r\n            resolve(data);\r\n          } catch (e) {\r\n            reject(new Error(\"Cant parse file data\"));\r\n          }\r\n        });\r\n        reader.addEventListener(\"error\", (event) => {\r\n          reject(new Error(\"Error during data loading\"));\r\n        });\r\n        reader.readAsText(file);\r\n      });\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const loadArtists = useCallback(\r\n    async (data) => {\r\n      const artists = parseArtists(data);\r\n      setArtists(artists);\r\n      ls.set(\"artists\", artists);\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const addCollection = useCallback(() => {\r\n    saveCollectionsData((collections) => {\r\n      const name = getNextName(\r\n        defaultNewCollection.name,\r\n        collections.map((item) => item.name)\r\n      );\r\n      return [\r\n        ...collections,\r\n        {\r\n          ...defaultNewCollection,\r\n          name,\r\n          id: uid(),\r\n        },\r\n      ];\r\n    });\r\n  }, [saveCollectionsData]);\r\n\r\n  const removeCollection = useCallback(\r\n    (collectionId) => {\r\n      saveCollectionsData((collections) =>\r\n        collections.filter((collection) => collection.id !== collectionId)\r\n      );\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const getCollectionById = useCallback(\r\n    (collectionId) => {\r\n      return collections.find((item) => item.id === collectionId);\r\n    },\r\n    [collections]\r\n  );\r\n\r\n  const updateCollection = useCallback(\r\n    (collection) => {\r\n      const foundCollectionIndex = collections.findIndex(\r\n        (item) => item.id === collection.id\r\n      );\r\n      if (foundCollectionIndex === -1) {\r\n        return false;\r\n      }\r\n      if (collection.isMain) {\r\n        collections.forEach((coll, index) => {\r\n          if (index === foundCollectionIndex) {\r\n            return;\r\n          }\r\n          collections[index] = {...collections[index], isMain: false};\r\n        })\r\n      }\r\n      collections[foundCollectionIndex] = {\r\n        ...collections[foundCollectionIndex],\r\n        ...collection,\r\n      };\r\n      saveCollectionsData(collections);\r\n      return true;\r\n    },\r\n    [collections, saveCollectionsData]\r\n  );\r\n\r\n  const clearAllCollectionData = useCallback(\r\n    (index, newPhase) => {\r\n      saveCollectionsData([]);\r\n      ls.clear();\r\n    },\r\n    [saveCollectionsData]\r\n  );\r\n\r\n  const saveCollectionJSON = useCallback(() => {\r\n    if (!collections.length) {\r\n      return;\r\n    }\r\n    saveCollectionsData(collections);\r\n    const bytes = new TextEncoder().encode(JSON.stringify(collections, 2, 2));\r\n    var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\r\n    saveAs(blob, \"collections.json\");\r\n  }, [collections, saveCollectionsData]);\r\n\r\n  const categoryOptions = useMemo(() => {\r\n    return collections\r\n      .map((collection) => ({\r\n        value: collection.categoryName,\r\n        type: collection.categoryType,\r\n      }))\r\n      .filter(\r\n        (item, index, collections) =>\r\n          collections.findIndex((a) => a.categoryName === item.categoryName) ===\r\n          index\r\n      );\r\n  }, [collections]);\r\n\r\n  return (\r\n    <CollectionContext.Provider\r\n      value={{\r\n        collections,\r\n        loadArtists,\r\n        artists,\r\n        artistOptions,\r\n        clearAllCollectionData,\r\n        addCollection,\r\n        updateCollection,\r\n        saveCollectionsData,\r\n        saveCollectionJSON,\r\n        removeCollection,\r\n        loadCollections,\r\n        categoryOptions,\r\n      }}\r\n    >\r\n      {children}\r\n    </CollectionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCollectionContext = () => React.useContext(CollectionContext);\r\n","import { defaultNewCollection } from \"../modules/data\";\r\nimport {MAX_DROP_SIZE} from \"../modules/ImageContext\";\r\n\r\nexport const publicByte32 =\r\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\r\n\r\nexport function parseAddressesCSV(data) {\r\n  const newData = data.map((arr, index) => ({\r\n    address: arr[0],\r\n    quantity: arr[1],\r\n    id: index,\r\n  }));\r\n  if (isNaN(parseInt(newData[0].quantity))) {\r\n    newData.shift();\r\n  }\r\n  return newData;\r\n}\r\n\r\nexport function getNextName(defaultName, existNames) {\r\n  if (!existNames.includes(defaultName)) {\r\n    return defaultName;\r\n  }\r\n\r\n  let maxNum = Math.max(\r\n    0,\r\n    ...existNames\r\n      .map((name) =>\r\n        parseInt(name.replace(defaultName, \"\").replace(/[\\s-]/gm, \"\"))\r\n      )\r\n      .filter((item) => !isNaN(item))\r\n  );\r\n  if (!maxNum) {\r\n    maxNum = 1;\r\n  } else {\r\n    maxNum++;\r\n  }\r\n  const suffix = ` - ${maxNum}`;\r\n  return defaultName + suffix;\r\n}\r\n\r\nexport const parseArtists = (artists) => {\r\n  let result = [];\r\n  for (let i = 0; i < artists.length; i++) {\r\n    let item = {};\r\n    Object.keys(artists[i]).map((key, j) => {\r\n      item[key.toLowerCase()] = artists[i][key];\r\n    });\r\n    item['url'] = item['name'].toLowerCase().replace(/ /gm, '-')\r\n    item['profile name'] = item['profile image'].replace(/ /gm, '')\r\n    const imageEx = /\\.(jpe?g|png)$/i.test(item['profile image']) ? '' : '.jpg';\r\n    const fullImageSrc = `https://light.art/images/artists/${item['profile image']}${imageEx}`;\r\n    const imageSrc = `../../../images/artists/${item['profile image']}${imageEx}`;\r\n    item.fullImageSrc = fullImageSrc;\r\n    item.imageSrc = imageSrc;\r\n    result.push(item);\r\n  }\r\n  result = result.sort((a, b) => a['profile image'].localeCompare(b['profile image']))\r\n  return result;\r\n};\r\n\r\n\r\nconst mapFields = {\r\n  'id': 'id',\r\n  'artist': 'artist',\r\n  'Number': 'internalNumber',\r\n  'name': 'title',\r\n  'set' : 'set',\r\n  'file': 'fileName',\r\n  'description': 'description',\r\n  'genres': 'tags',\r\n  'tone': 'tone',\r\n  'camera': 'camera',\r\n  'camera manufacturer': 'cameraManufacturer',\r\n  'location': 'location',\r\n  'license': 'license',\r\n  'country': 'country',\r\n  'image': 'imageIPFS',\r\n  'composite': 'composite'\r\n}\r\n\r\nconst COLLECTION_IMAGE_BASE_URL = 'https://light-art.s3.us-east-1.amazonaws.com/collections/';\r\n\r\nexport function mapCollectionImages(collectionData, imageData, artists) {\r\n  const images = imageData.map((jsonItem, index) => {\r\n    const mappedData = mapCollectionImage(jsonItem);\r\n    mappedData.image = `${COLLECTION_IMAGE_BASE_URL}${collectionData.imageDir}/${mappedData.fileName}.jpg`;\r\n    mappedData.smallImage = `${COLLECTION_IMAGE_BASE_URL}${collectionData.imageDir}/${mappedData.fileName}-small.jpg`;\r\n    mappedData.internalNumber = parseInt(mappedData.internalNumber);\r\n    mappedData.collection = collectionData.name;\r\n    if (!mappedData.id) {\r\n      mappedData.id = index;\r\n    }\r\n    if (!mappedData.subtitle) {\r\n      mappedData.subtitle = collectionData.name;\r\n    }\r\n    if (!mappedData.artistImg) {\r\n      mappedData.artistImg = findArtistImageFullPathByName(artists, mappedData.artist);\r\n    }\r\n    mappedData.tags = mappedData.tags ? mappedData.tags.split(',') : [];\r\n    return mappedData;\r\n  });\r\n  let zeroTokenNumber = collectionData.startIdNumber;\r\n  if (!zeroTokenNumber && collectionData.dropId) {\r\n    zeroTokenNumber = (collectionData.dropId * MAX_DROP_SIZE);\r\n  }\r\n  if (!zeroTokenNumber) {\r\n    return images;\r\n  }\r\n\r\n  images.concat().sort((a, b) => a.internalNumber - b.internalNumber).forEach((item, index) => {\r\n    if (!item.tokenId) {\r\n      item.tokenId = zeroTokenNumber + index;\r\n    }\r\n\r\n    if (!item.internalNumber) {\r\n      item.internalNumber = index;\r\n    }\r\n  });\r\n\r\n  return images\r\n}\r\n\r\nfunction mapCollectionImage(data) {\r\n  return Object.keys(mapFields).reduce((newObject, sourceKey) => {\r\n    const targetKey = mapFields[sourceKey];\r\n    newObject[targetKey] = data[sourceKey] || '';\r\n    return newObject;\r\n  }, {})\r\n}\r\n\r\nexport function mapImageToIPFS(image, collection) {\r\n  const data = {\r\n    name: image.title,\r\n    description: image.description,\r\n    image: image.imageIPFS,\r\n    external_url: \"https://light.art\",\r\n    license_document: \"ipfs://bafkreidvs3sgzpuoxaubpvg5gax2luj5j7422l2i5icfqmgtplk5medw3u\",\r\n    attributes: [],\r\n  }\r\n  data.attributes.push({\r\n    trait_type: \"Artist\",\r\n    value: image.artist,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Tone\",\r\n    value: image.tone,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Set\",\r\n    value: image.set,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Camera Manufacturer\",\r\n    value: image.cameraManufacturer,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Camera\",\r\n    value: image.camera,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Country\",\r\n    value: image.country,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Genres\",\r\n    value: image?.tags?.join(',') || [],\r\n  })\r\n  data.attributes.push({\r\n    trait_type: \"License\",\r\n    value: image.license,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Collection\",\r\n    value: collection.name,\r\n  });\r\n  data.attributes.push({\r\n    trait_type: \"Collection Year\",\r\n    value: (new Date()).getFullYear(),\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction findArtistImageFullPathByName(artists, name) {\r\n  const artist = artists.find(item => item.name?.toLowerCase() == name?.toLowerCase());\r\n  if (!artist) {\r\n    return '';\r\n  }\r\n  return artist.imageSrc;\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useCollectionContext } from \"./CollectionContext\";\r\nimport { saveAs } from \"file-saver\";\r\nimport {mapCollectionImages, mapImageToIPFS} from \"../utils/data\";\r\n\r\nexport const ImageContext = React.createContext({});\r\nexport const MAX_DROP_SIZE = 1000000;\r\n\r\nexport const ImageProvider = ({ collection, children, permanent }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const { updateCollection, artists } = useCollectionContext();\r\n\r\n  useEffect(() => {\r\n    let images = collection.images || [];\r\n    if (permanent) {\r\n      images = images.concat();\r\n    }\r\n    setImages(images);\r\n  }, [collection, permanent]);\r\n\r\n  const saveChanges = useCallback(() => {\r\n    collection.images = images;\r\n    updateCollection(collection);\r\n  }, [collection, images, updateCollection]);\r\n\r\n  const removeAllImages = useCallback(\r\n    (imageId) => {\r\n      setImages((images) => []);\r\n    },\r\n    [setImages]\r\n  );\r\n\r\n  const removeImage = useCallback(\r\n    (imageId) => {\r\n      setImages((images) => images.filter((image) => image.id !== imageId));\r\n    },\r\n    [setImages]\r\n  );\r\n\r\n  const updateImagesTokensIds = useCallback(\r\n    (imageId) => {\r\n      const dropId = parseInt(collection.dropId);\r\n      setImages((images) => images.map((image, index) => ({\r\n        ...image,\r\n        tokenId: MAX_DROP_SIZE * dropId + index,\r\n        internalNumber: index\r\n      })));\r\n    },\r\n    [setImages, collection.dropId]\r\n  );\r\n\r\n  const loadImagesFromCSV = useCallback(\r\n    (data) => {\r\n        const images = mapCollectionImages({\r\n          name: collection.name,\r\n          imageDir: collection.collectionID,\r\n        }, data, artists);\r\n      setImages(images);\r\n    },\r\n    [setImages, collection, artists]\r\n  );\r\n\r\n  const saveImage = useCallback(\r\n    (image) => {\r\n      if (!!image.id) {\r\n        const imageIndex = images.findIndex((item) => item.id === image.id);\r\n        if (imageIndex === -1) {\r\n          return false;\r\n        }\r\n        images[imageIndex] = {\r\n          ...images[imageIndex],\r\n          ...image,\r\n        };\r\n        return setImages([...images]);\r\n      }\r\n\r\n      let newId = Math.max(...images.map((image) => image.id));\r\n      if (newId) {\r\n        newId++;\r\n      } else {\r\n        newId = 1;\r\n      }\r\n      image.id = newId;\r\n      images.push(image);\r\n      setImages([...images]);\r\n    },\r\n    [setImages, images]\r\n  );\r\n\r\n  const saveIPFSData = useCallback((image) => {\r\n    const data = mapImageToIPFS(image, collection);\r\n    const bytes = new TextEncoder().encode(JSON.stringify(data));\r\n    var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\r\n    saveAs(blob, `${image.title}.json`);\r\n  }, [collection]);\r\n\r\n  return (\r\n    <ImageContext.Provider\r\n      value={{\r\n        images,\r\n        saveIPFSData,\r\n        loadImagesFromCSV,\r\n        removeImage,\r\n        saveChanges,\r\n        saveImage,\r\n        removeAllImages,\r\n        updateImagesTokensIds,\r\n      }}\r\n    >\r\n      {children}\r\n    </ImageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useImageContext = () => React.useContext(ImageContext);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { saveAs } from \"file-saver\";\nimport { toMarkleTree } from \"../utils/packing\";\nimport Web3 from \"web3\";\nimport { publicByte32 } from \"../utils/data\";\nimport { uid } from \"uid\";\n\nexport const PhaseContext = React.createContext({});\n\nlet counter = 1;\nconsole.log(\"counter init: \", counter);\n\nexport const PhaseProvider = ({ children, collection, onSaveChanges }) => {\n  const [phases, setPhases] = useState([\n    { index: counter, accessList: [], startDate: new Date() },\n  ]);\n  const [phasesData, setPhasesData] = useState({});\n\n  useEffect(() => {\n    const dtopPhases = (collection?.dropPhases || []).map((item) => {\n      return {\n        index: ++counter,\n        startDate: new Date(item.startTimestamp * 1000),\n        price: item.price ? Web3.utils.fromWei(item.price) : 0,\n        priceInWei: item.price ? item.price : 0,\n        accessList: (item.accessList?.concat() || []).map((addressItem) => ({\n          ...addressItem,\n          id: uid(),\n        })),\n        isPublic: !!item.isPublic,\n      };\n    });\n    setPhases(dtopPhases);\n  }, [collection]);\n\n  const onAddPhase = useCallback(() => {\n    console.log(\"-counter: \", counter);\n    counter++;\n    setPhases((pahsesArr) => [\n      ...pahsesArr,\n      { index: counter, accessList: [], startDate: new Date() },\n    ]);\n    console.log(\"+counter: \", counter);\n  }, [setPhases]);\n\n  const onRemovePhase = useCallback(\n    (phase) => {\n      setPhases((phases) => phases.filter((item) => item !== phase));\n    },\n    [setPhases]\n  );\n\n  const getPhase = useCallback(\n    (index) => {\n      return phases.find((item) => item.index === index);\n    },\n    [phases]\n  );\n\n  const updatePhase = useCallback(\n    (index, newPhase) => {\n      const phaseIndex = phases.findIndex((item) => item.index === index);\n      if (newPhase.price) {\n        newPhase.priceInWei = Web3.utils.toWei(newPhase.price);\n      }\n      phases[phaseIndex] = { ...phases[phaseIndex], ...newPhase };\n      console.log(\"Phase update\", phases[phaseIndex]);\n      setPhases([...phases]);\n    },\n    [phases]\n  );\n\n  const addAddressToPhase = useCallback(\n    (index, item) => {\n      const phase = getPhase(index);\n      phase.accessList = phase.accessList || [];\n      phase.accessList.push(item);\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const setAddressesToPhase = useCallback(\n    (index, addresses) => {\n      const phase = getPhase(index);\n      phase.accessList = addresses || [];\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const removeAddressFromPhase = useCallback(\n    (index, itemId) => {\n      const phase = getPhase(index);\n      phase.accessList = phase.accessList || [];\n      phase.accessList = phase.accessList.filter(\n        (listItem) => listItem.id !== itemId\n      );\n      updatePhase(index, { accessList: phase.accessList });\n    },\n    [phases, getPhase, updatePhase]\n  );\n\n  const generateMercleTreeForPhase = useCallback(\n    (index) => {\n      const phase = getPhase(index);\n      let warning;\n\n      if (!phase.price) {\n        updatePhase(index, { warning: \"Please enther the price!\" });\n        return false;\n      }\n\n      if (!phase.startDate) {\n        updatePhase(index, { warning: \"Please enther correct start date!\" });\n        return false;\n      }\n\n      if (!phase.isPublic) {\n        warning = phase.accessList.filter(\n          (item) => !item.address || !item.quantity\n        );\n        if (warning.length) {\n          updatePhase(index, { warning: \"Fill in all fields!\" });\n          return false;\n        }\n\n        let checkAddress = \"\";\n        phase.accessList.forEach((item, i) => {\n          item.warn = false;\n          if (!Web3.utils.isAddress(item.address)) {\n            checkAddress += `${i + 1},`;\n            item.warn = true;\n          }\n        });\n\n        if (checkAddress.length) {\n          updatePhase(index, {\n            warning: `The address in row ${checkAddress} is not correct.`,\n          });\n          return false;\n        }\n      }\n\n      const publicAccessList = [publicByte32];\n      let accessListProof = publicByte32;\n      let newAccessList = phase.accessList;\n      let accessListPhaseDrop = publicAccessList;\n      if (!phase.isPublic) {\n        const newArr = [...phase.accessList];\n        const markleTreeData = toMarkleTree(newArr);\n        newAccessList = markleTreeData.data;\n        accessListPhaseDrop = newAccessList.map((item) => ({\n          address: item.address,\n          quantity: item.quantity,\n          proof: item.proof,\n        }));\n        accessListProof = markleTreeData.root;\n      }\n\n      const startTimestamp = parseInt(phase.startDate.getTime() / 1000);\n      updatePhase(index, {\n        warning: \"\",\n        accessList: newAccessList,\n        rootHash: accessListProof,\n        startTimestamp,\n        phaseDrop: {\n          isPublic: phase.isPublic,\n          startTimestamp,\n          price: phase.priceInWei,\n          accessList: accessListPhaseDrop,\n          rootHash: accessListProof,\n        },\n        phaseDropStr: `[${startTimestamp}, ${phase.priceInWei}, \"${accessListProof}\"]`,\n      });\n      return newAccessList;\n    },\n    [phases, updatePhase, getPhase]\n  );\n\n  const prepareDropPhases = useCallback(() => {\n    const invalidPhase = phases.find(\n      (phase) => generateMercleTreeForPhase(phase.index) === false\n    );\n    if (invalidPhase) {\n      alert(\"Invalid phase exist. Please correct it and try again.\");\n      return { error: true };\n    }\n\n    let dropPhases = [];\n    const sortedPhases = phases.sort(\n      (a, b) => a.startDate.getTime() - b.startDate.getTime()\n    );\n    let dropPhasesRemixStr = sortedPhases.reduce((prev, next) => {\n      prev += next.phaseDropStr + \",\";\n      dropPhases.push(next.phaseDrop);\n      return prev;\n    }, \"[\");\n\n    dropPhases = dropPhases.sort((a, b) => a.startTimestamp - b.startTimestamp);\n    dropPhasesRemixStr =\n      dropPhasesRemixStr.substring(0, dropPhasesRemixStr.length - 1) + \"]\";\n\n    setPhasesData({\n      dropPhasesRemixStr,\n      dropPhases,\n    });\n    return {\n      dropPhasesRemixStr,\n      dropPhases,\n    };\n  }, [phases, getPhase, generateMercleTreeForPhase, onSaveChanges]);\n\n  const saveDropPhases = useCallback(() => {\n    const { dropPhases, error } = prepareDropPhases();\n    if (error) {\n      return;\n    }\n    onSaveChanges({\n      ...collection,\n      dropPhases,\n    });\n  }, [prepareDropPhases, onSaveChanges, collection]);\n\n  const generateAndSaveJSON = useCallback(() => {\n    const { dropPhases, error } = prepareDropPhases();\n    if (error) {\n      return;\n    }\n    const bytes = new TextEncoder().encode(JSON.stringify(dropPhases));\n    const blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n    saveAs(blob, \"access-list.json\");\n  }, [prepareDropPhases, saveAs]);\n\n  const savePhasesJSON = useCallback(\n    (index) => {\n      const phase = getPhase(index);\n      if (!phase.accessList || !phase.accessList.length) {\n        return;\n      }\n      const bytes = new TextEncoder().encode(JSON.stringify(phase.accessList));\n      var blob = new Blob([bytes], { type: \"application/json;charset=utf-8\" });\n      saveAs(blob, \"access-list.json\");\n    },\n    [phases, getPhase]\n  );\n\n  const updatePhaseAccessListItem = useCallback(\n    (phaseIndex, itemId, item) => {\n      const phase = getPhase(phaseIndex);\n      phase.accessList = phase.accessList.concat();\n      const itemIndex = phase.accessList.findIndex(\n        (listItem) => listItem.id == itemId\n      );\n      phase.accessList[itemIndex] = { ...phase.accessList[itemIndex], ...item };\n      const newAccessList = phase.accessList.map((item) => ({\n        ...item,\n        leafValue: \"\",\n        warn: false,\n        proof: false,\n      }));\n      updatePhase(phaseIndex, { accessList: newAccessList, rootHash: \"\" });\n    },\n    [phases, getPhase]\n  );\n\n  return (\n    <PhaseContext.Provider\n      value={{\n        phases,\n        onAddPhase,\n        savePhasesJSON,\n        updatePhaseAccessListItem,\n        onRemovePhase,\n        addAddressToPhase,\n        generateMercleTreeForPhase,\n        setAddressesToPhase,\n        updatePhase,\n        saveDropPhases,\n        phasesData,\n        generateAndSaveJSON,\n        removeAddressFromPhase,\n      }}\n    >\n      {children}\n    </PhaseContext.Provider>\n  );\n};\n\nexport const usePhaseContext = () => React.useContext(PhaseContext);\n","export default __webpack_public_path__ + \"static/media/no-image.baba1a73.png\";","import NoImage from \"../../assets/images/no-image.png\";\nimport {Badge, Button, Card, Col, Row} from \"react-bootstrap\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport { useCallback } from \"react\";\n\nexport function CollectionThumb({ collection, onRemove, onShow }) {\n  const onRemoveItem = useCallback(\n    (item) => {\n      onRemove(collection.id);\n    },\n    [collection, onRemove]\n  );\n\n  const onShowMore = useCallback(\n    (item) => {\n      onShow(collection);\n    },\n    [collection, onShow]\n  );\n\n  const firstImage =\n    collection.images && collection.images.length > 0\n      ? collection.images[0]\n      : { smallImage: NoImage };\n  return (\n    <Card style={{ width: \"18rem\", margin: \"10px\", padding: 0 }}>\n      <Card.Header >\n        <Row>\n          <Col lg={10}>\n            <Card.Title>{collection.name}</Card.Title>\n            <p>{collection.categoryName}</p>\n          </Col>\n          <Col lg={2}>\n            <CloseButton onClick={onRemoveItem} />\n          </Col>\n        </Row>\n        {collection.isMain && <Badge bg=\"primary\">Primary</Badge>}{' '}\n        {collection.isRandom && <Badge bg=\"secondary\">Random</Badge>}\n      </Card.Header>\n      <Card.Img\n        variant=\"top\"\n        src={firstImage.smallImage}\n        className=\"thumb-image\"\n      />\n      <Card.Body>\n        <Card.Title>\n          {collection.images?.length || 0} / {collection.itemsCount} images\n          loaded\n        </Card.Title>\n        <Card.Text>{collection.description}</Card.Text>\n        <div className=\"d-grid gap-2\">\n          <Button variant=\"primary\" size=\"lg\" onClick={onShowMore}>\n            Show More\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function ConfirmationModal({ onConfirm, show }) {\n  const handleClose = () => {\n    onConfirm(false);\n  };\n  const handleConfirm = () => {\n    onConfirm(true);\n  };\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Action</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want perform this action?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirm}>\n            Yep!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import {AutoComplete, Button, Checkbox, Form, Input, InputNumber, Switch} from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { MinusCircleOutlined } from \"@ant-design/icons\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nexport function CollectionGeneralData({\n  collection,\n  onSaveChanges,\n  categoryOptions,\n}) {\n  const [form] = Form.useForm();\n  const [categoryType, setCategoryType] = useState();\n\n  useEffect(() => {\n    setCategoryType(collection?.categoryType || \"\");\n  }, [collection]);\n\n  const onFinish = useCallback(\n    (values: any) => {\n      console.log(\"Received values of form: \", values);\n      if (categoryType) {\n        values.categoryType = categoryType;\n      } else {\n        values.categoryType = values.categoryName\n          .toLowerCase()\n          .replace(/\\s/gm, \"_\");\n      }\n      onSaveChanges &&\n        onSaveChanges({\n          ...collection,\n          ...values,\n        });\n    },\n    [onSaveChanges, categoryType]\n  );\n\n  const onCategorySelect = useCallback(\n    (value, option: any) => {\n      setCategoryType(option.type);\n    },\n    [setCategoryType]\n  );\n\n  const onSearch = useCallback(\n    (option: any) => {\n      setCategoryType(\"\");\n    },\n    [setCategoryType]\n  );\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={collection}\n      style={{ maxWidth: 900 }}\n      scrollToFirstError\n    >\n      <Form.Item label=\"Name\" tooltip=\"Collection Name\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"name\"\n            noStyle\n            rules={[{ required: true, message: \"Name is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"title\"\n            noStyle\n            rules={[{ required: true, message: \"Title is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input title\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Category\">\n        <Form.Item\n          name=\"categoryName\"\n          noStyle\n          rules={[{ required: true, message: \"Category name is required\" }]}\n        >\n          <AutoComplete\n            options={categoryOptions}\n            onSelect={onCategorySelect}\n            onSearch={onSearch}\n            style={{ width: \"100%\" }}\n            placeholder=\"Category Name\"\n          >\n            <Input />\n          </AutoComplete>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item label=\"Contract / Drop ID\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"contractAddress\"\n            noStyle\n            rules={[{ required: false, message: \"Contract Address\" }]}\n          >\n            <Input style={{ width: \"70%\" }} placeholder=\"Contract\" />\n          </Form.Item>\n          <Form.Item\n            name=\"dropId\"\n            noStyle\n            rules={[{ required: true, message: \"Drop id is required\" }]}\n          >\n            <Input style={{ width: \"30%\" }} placeholder=\"Drop id\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Path / Collection ID\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"path\"\n            noStyle\n            rules={[{ required: true, message: \"Collection url required\" }]}\n          >\n            <Input\n              style={{ width: \"50%\" }}\n              placeholder=\"Collection Path (/alpha) id\"\n            />\n          </Form.Item>\n          <Form.Item name=\"collectionID\" noStyle>\n            <Input\n              style={{ width: \"50%\" }}\n              placeholder=\"Unique Collection Slug\"\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\" \">\n        <Input.Group >\n          <Form.Item\n            label=\"Main\"\n            valuePropName=\"checked\"\n            name=\"isMain\"\n            wrapperCol={{ offset: 8, span: 16 }}\n            noStyle\n          >\n            <Checkbox style={{ width: \"40%\" }}>Main Collection</Checkbox>\n          </Form.Item>\n          <Form.Item\n            label=\"Random Mint\"\n            valuePropName=\"checked\"\n            name=\"isRandom\"\n            noStyle\n          >\n            <Checkbox style={{ width: \"40%\" }}>Random</Checkbox>\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Author / Authors Count\">\n        <Input.Group compact>\n          <Form.Item name=\"author\" noStyle>\n            <Input style={{ width: \"70%\" }} placeholder=\"Authors name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"artists\"\n            noStyle\n            rules={[{ required: true, message: \"Category type is required\" }]}\n          >\n            <InputNumber\n              style={{ width: \"30%\" }}\n              min={1}\n              max={5000}\n              defaultValue={30}\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item name=\"aboutCollection\" label=\"Small Description\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item name=\"description\" label=\"Description\">\n        <Input.TextArea showCount />\n      </Form.Item>\n      <Form.List name=\"tags\">\n        {(fields, { add, remove }, { errors }) => (\n          <>\n            {fields.map((field, index) => (\n              <Form.Item\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                label={index === 0 ? \"Tags\" : \"\"}\n                required={false}\n                key={field.key}\n              >\n                <Form.Item\n                  {...field}\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      required: true,\n                      whitespace: true,\n                      message:\n                        \"Please input passenger's name or delete this field.\",\n                    },\n                  ]}\n                  noStyle\n                >\n                  <Input\n                    placeholder=\"passenger name\"\n                    style={{ width: \"60%\" }}\n                  />\n                </Form.Item>\n                {fields.length > 1 ? (\n                  <MinusCircleOutlined\n                    className=\"dynamic-delete-button\"\n                    onClick={() => remove(field.name)}\n                  />\n                ) : null}\n              </Form.Item>\n            ))}\n          </>\n        )}\n      </Form.List>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save Changes\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import {\n  Alert,\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Row,\n  Table,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useCallback, useState } from \"react\";\nimport { uid } from \"uid\";\nimport Web3 from \"web3\";\nimport DatePicker from \"react-datepicker\";\nimport CSVReader from \"react-csv-reader\";\nimport { parseAddressesCSV } from \"../../utils/data\";\nimport { usePhaseContext } from \"../../modules/PhaseContext\";\n\nconst papaparseOptions = {\n  header: false,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport const AddressTable = ({ phase }) => {\n  window.web3 = Web3;\n\n  const {\n    addAddressToPhase,\n    removeAddressFromPhase,\n    setAddressesToPhase,\n    updatePhaseAccessListItem,\n    generateMercleTreeForPhase,\n    updatePhase,\n  } = usePhaseContext();\n\n  const [row, setRow] = useState(phase.users || []);\n  const [checkAddress, setCheckAddress] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [price, setPrice] = useState(new Date());\n\n  const addNewRow = useCallback(() => {\n    addAddressToPhase(phase.index, {\n      address: \"\",\n      quantity: \"\",\n      hash: \"\",\n      id: uid(),\n    });\n  }, [phase, addAddressToPhase]);\n\n  const removeRow = useCallback(\n    (id) => {\n      removeAddressFromPhase(phase.index, id);\n    },\n    [phase, phase.accessList, removeAddressFromPhase]\n  );\n\n  const addAddress = useCallback(\n    (id, value) => {\n      updatePhaseAccessListItem(phase.index, id, { address: value });\n    },\n    [phase, phase.accessList, updatePhaseAccessListItem]\n  );\n\n  const addQuantity = useCallback(\n    (id, value) => {\n      updatePhaseAccessListItem(phase.index, id, { quantity: value });\n    },\n    [phase, phase.accessList, updatePhaseAccessListItem]\n  );\n\n  const clickHandler = useCallback(() => {\n    generateMercleTreeForPhase(phase.index);\n  }, [row, generateMercleTreeForPhase]);\n\n  const onFileLoaded = useCallback(\n    (data, fileInfo, originalFile) => {\n      const parsedData = parseAddressesCSV(data);\n      setAddressesToPhase(phase.index, parsedData);\n    },\n    [setRow, phase, setAddressesToPhase]\n  );\n\n  return (\n    <Container>\n      <div className={\"pt-5\"}>\n        {!!phase.warning && (\n          <Alert variant={\"warning\"} className={\"text-center pointer\"}>\n            {phase.warning}\n          </Alert>\n        )}\n      </div>\n      <Row>\n        <Col>\n          <p>Drop Phase Start Date / {phase.startDate.toLocaleString()}</p>\n          <DatePicker\n            selected={phase.startDate}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            onChange={(date) => updatePhase(phase.index, { startDate: date })}\n          />\n        </Col>\n        <Col>\n          <p>Price in eth</p>\n          <FormControl\n            type=\"number\"\n            step={0.1}\n            value={phase.price}\n            onChange={({ target }) =>\n              updatePhase(phase.index, { price: target.value })\n            }\n          />\n          {phase.priceInWei && <p className=\"small\">Wei: {phase.priceInWei}</p>}\n        </Col>\n        <Col>\n          <p>Is Public</p>\n          <Form.Check\n            type=\"switch\"\n            checked={phase.isPublic}\n            onChange={() =>\n              updatePhase(phase.index, { isPublic: !phase.isPublic })\n            }\n          />\n        </Col>\n      </Row>\n      {!phase.isPublic && (\n        <>\n          <CSVReader\n            onFileLoaded={onFileLoaded}\n            parserOptions={papaparseOptions}\n          />\n          <div className=\"address-table\">\n            <Table striped bordered hover size=\"md\">\n              <thead className={\"address-table-header\"}>\n                <tr>\n                  <th>#</th>\n                  <th>Address</th>\n                  <th>Access Quantity</th>\n                  <th>Leaf</th>\n                  <th>Hash</th>\n                </tr>\n              </thead>\n              <tbody>\n                {phase.accessList.map((item, i) => {\n                  let classname = \"\";\n                  if (item.warn) {\n                    classname = \"warning\";\n                  }\n                  return (\n                    <tr key={item.id}>\n                      <td>{i + 1}</td>\n                      <td className={classname}>\n                        <input\n                          className=\"address-input\"\n                          type=\"text\"\n                          value={item.address}\n                          onChange={(e) => addAddress(item.id, e.target.value)}\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"number\"\n                          className=\"quantity-input\"\n                          value={item.quantity}\n                          onChange={(e) => addQuantity(item.id, e.target.value)}\n                        />\n                      </td>\n                      <td className={\"break\"}>{item.leafValue || \"-\"}</td>\n                      <td className={\"break\"}>\n                        {item.proof ? JSON.stringify(item.proof) : \"-\"}\n                      </td>\n                      <td className={\"text-center\"}>\n                        <FontAwesomeIcon\n                          icon={faMinusCircle}\n                          onClick={() => removeRow(item.id)}\n                          className={\"clr pointer\"}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n          <div>\n            <Button className={\"text-center\"} onClick={addNewRow}>\n              Add Address\n              <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n            </Button>\n          </div>\n        </>\n      )}\n      <div>\n        <p>Hash: {phase.rootHash}</p>\n        <p>Drop Data: {phase.phaseDropStr}</p>\n      </div>\n      <hr className=\"clr\" />\n      <div className={\"text-center\"}>\n        <Button onClick={clickHandler} className={\"generate-btn\"}>\n          Generate\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { AddressTable } from \"./AddressTable\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button } from \"react-bootstrap\";\n\nexport function DropPhase({ phase, onRemovePhase }) {\n  const _onRemovePhase = useCallback(() => {\n    onRemovePhase && onRemovePhase(phase);\n  }, [phase, phase.index, onRemovePhase]);\n  let info = phase.accessList && ` Addresses Count: ${phase.accessList.length}`;\n  if (phase.isPublic) {\n    info = \" Public\";\n  }\n\n  return (\n    <Accordion.Item eventKey={phase.index}>\n      <Accordion.Header>\n        Drop Phase {phase.index}: {phase.price && `price: ${phase.price}`}{\" \"}\n        {phase.date && `date: ${phase.date}`} - {info}\n        <div className=\"header-button-group\">\n          <Button\n            className=\"text-center\"\n            variant=\"danger\"\n            onClick={_onRemovePhase}\n          >\n            Remove Phase\n            <FontAwesomeIcon\n              icon={faMinusCircle}\n              className=\"mr-4 clr pointer\"\n            />\n          </Button>\n        </div>\n      </Accordion.Header>\n      <Accordion.Body>\n        <AddressTable phase={phase} />\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button } from \"react-bootstrap\";\nimport { DropPhase } from \"./DropPhase\";\nimport { usePhaseContext } from \"../../modules/PhaseContext\";\n\nexport function DropPhases() {\n  const {\n    phases,\n    phasesData,\n    onAddPhase,\n    onRemovePhase,\n    generateAndSaveJSON,\n    saveDropPhases,\n  } = usePhaseContext();\n\n  const onSaveClicked = useCallback(() => {\n    generateAndSaveJSON();\n  }, [generateAndSaveJSON]);\n\n  const onSaveDropPhasesClicked = useCallback(() => {\n    saveDropPhases();\n  }, [saveDropPhases]);\n\n  return (\n    <Accordion>\n      {phases.map((phase) => (\n        <DropPhase phase={phase} onRemovePhase={onRemovePhase} />\n      ))}\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <p>Remix data: {phasesData.dropPhasesRemixStr}</p>\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\n        <Button className={\"text-center\"} onClick={onAddPhase}>\n          Add Phase\n          <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n        </Button>\n        <Button onClick={onSaveClicked} className={\"save-btn\"}>\n          Save As Json\n        </Button>\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4 \">\n        <Button onClick={onSaveDropPhasesClicked} className={\"save-btn\"}>\n          Save Drop Phases\n        </Button>\n      </div>\n    </Accordion>\n  );\n}\n","import NoImage from \"../../assets/images/no-image.png\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport { useCallback } from \"react\";\n\nexport function ImageThumb({ image, onRemove, onEdit, onDownloadIPFS }) {\n  const onRemoveItem = useCallback(\n    (item) => {\n      onRemove(image.id);\n    },\n    [image, onRemove]\n  );\n\n  const onEditImage = useCallback(\n    (item) => {\n      onEdit(image);\n    },\n    [image, onEdit]\n  );\n\n  const onDownload = useCallback(\n    () => {\n      onDownloadIPFS(image);\n    },\n    [image, onDownloadIPFS]\n  );\n\n  return (\n    <Card style={{ width: \"18rem\", margin: \"15px\", padding: 0 }}>\n      <Card.Header>\n        <Row>\n          <Col lg={10}>\n            <Card.Title className=\"img-title\">{image.title}</Card.Title>\n            <p>{image.artist}</p>\n          </Col>\n          <Col lg={2}>\n            <CloseButton onClick={onRemoveItem} />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Img variant=\"top\" src={image.smallImage} className=\"thumb-image\" />\n      <Card.Body>\n        <p>{image.tags?.join(\", \") || \"\"}</p>\n      </Card.Body>\n      <Card.Footer>\n        <div className=\"d-grid gap-0 m-0 p-0\">\n          <Button variant=\"light\" size=\"lg\" onClick={onEditImage}>\n            Edit\n          </Button><Button variant=\"light\" size=\"lg\" onClick={onDownload}>\n            Download IPFS JSON\n          </Button>\n        </div>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import { AutoComplete, Button, Divider, Form, Input, InputNumber } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nexport function ImageForm({ image, onSaveChanges }) {\n  const { artistOptions } = useCollectionContext();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.resetFields();\n    form.setFieldsValue(image);\n  }, [image, form]);\n\n  const onFinish = useCallback(\n    (values: any) => {\n      onSaveChanges &&\n        onSaveChanges({\n          ...image,\n          ...values,\n        });\n    },\n    [onSaveChanges]\n  );\n\n  const onAuthorSelect = useCallback(\n    (value, option) => {\n      form.setFieldValue(\"artistImg\", option.artistImg);\n    },\n    [form]\n  );\n\n  const onImageChange = useCallback(\n    ({ target: { value } }) => {\n      if (value) {\n        const valueArr = value.split(\".\");\n        const maxIndex =\n          valueArr.length - 2 > 0 ? valueArr.length - 2 : valueArr.length - 1;\n        valueArr[maxIndex] += \"-small\";\n        value = valueArr.join(\".\");\n      }\n      form.setFieldValue(\"smallImage\", value);\n    },\n    [form]\n  );\n\n  const onAddTag = useCallback(() => {\n    const tags = form.getFieldValue(\"tags\") || [];\n    tags.push(\"\");\n    form.setFieldsValue(\"tags\", tags);\n  }, [form]);\n\n  const onSearch = useCallback((option) => {\n\n  }, []);\n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"image\"\n      onFinish={onFinish}\n      initialValues={image}\n      style={{ maxWidth: 900, marginTop: 40 }}\n      scrollToFirstError\n    >\n      <Form.Item\n        label=\"ID / Collection / Title\"\n        tooltip=\"Image title \"\n      >\n        <Input.Group compact>\n          <Form.Item name=\"id\" noStyle>\n            <Input\n              style={{ width: \"20%\" }}\n              placeholder=\"Image id\"\n              disabled={true}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"collection\"\n            noStyle\n            rules={[{ required: true, message: \"Collection Name is required\" }]}\n          >\n            <Input\n              style={{ width: \"30%\" }}\n              placeholder=\"Collection Name\"\n              disabled={true}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"title\"\n            noStyle\n            rules={[{ required: true, message: \"Title is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Input title\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Subtitle / Internal Id / Token Id\"\n      >\n        <Input.Group compact>\n          <Form.Item name=\"subtitle\" noStyle>\n            <Input style={{ width: \"40%\" }} placeholder=\"Subtitle\" />\n          </Form.Item>\n          <Form.Item\n            name=\"internalNumber\"\n            noStyle\n            rules={[{ required: true, message: \"Internal number\" }]}\n          >\n            <Input style={{ width: \"30%\" }} placeholder=\"Internal id\" />\n          </Form.Item>\n          <Form.Item name=\"tokenId\" noStyle>\n            <Input style={{ width: \"30%\" }} placeholder=\"Token Id\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Artist\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"artist\"\n            noStyle\n            rules={[{ required: true, message: \"Artist name is required\" }]}\n          >\n            <AutoComplete\n              options={artistOptions}\n              onSelect={onAuthorSelect}\n              filterOption={(inputValue, option) =>\n                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n              }\n              style={{ width: \"50%\" }}\n              placeholder=\"Artist Name\"\n            >\n              <Input />\n            </AutoComplete>\n          </Form.Item>\n          <Form.Item\n            name=\"artistImg\"\n            noStyle\n            rules={[{ required: true, message: \"Artist image is required\" }]}\n          >\n            <Input style={{ width: \"50%\" }} placeholder=\"Artist Image\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"Camera / Manufacturer / Tone\">\n        <Input.Group compact>\n          <Form.Item\n            name=\"camera\"\n            noStyle\n            rules={[{ required: true, message: \"Camera\" }]}\n          >\n            <Input style={{ width: \"33%\" }} placeholder=\"Camera\" />\n          </Form.Item>\n          <Form.Item\n            name=\"cameraManufacturer\"\n            noStyle\n            rules={[{ required: true, message: \"Camera Manufacture\" }]}\n          >\n            <Input style={{ width: \"33%\" }} placeholder=\"Camera Manufacturer\" />\n          </Form.Item>\n          <Form.Item name=\"tone\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"Tone\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n\n      <Form.Item label=\"License / Country\">\n        <Input.Group compact>\n          <Form.Item name=\"license\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"License\" />\n          </Form.Item>\n          <Form.Item name=\"country\" noStyle>\n            <Input style={{ width: \"33%\" }} placeholder=\"Country\" />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Image\">\n        <Input.Group compact>\n          <Form.Item name=\"image\" noStyle>\n            <Input\n              style={{ width: \"100%\" }}\n              placeholder=\"Image\"\n              onChange={onImageChange}\n            />\n          </Form.Item>\n        </Input.Group>\n      </Form.Item>\n      <Form.Item label=\"Small Image\">\n        <Form.Item name=\"smallImage\" noStyle>\n          <Input\n            style={{ width: \"100%\" }}\n            placeholder=\"Small image\"\n            disabled={true}\n          />\n        </Form.Item>\n      </Form.Item>\n      <Form.Item name=\"description\" label=\"Description\">\n        <Input.TextArea showCount />\n      </Form.Item>\n      <Form.List name=\"tags\">\n        {(fields, { add, remove }, { errors }) => (\n          <>\n            {fields.map((field, index) => (\n              <Form.Item\n                label={`Tags ${index}`}\n                required={false}\n                key={field.key}\n              >\n                <Form.Item\n                  {...field}\n                  validateTrigger={[\"onChange\", \"onBlur\"]}\n                  rules={[\n                    {\n                      required: true,\n                      whitespace: true,\n                      message:\n                        \"Please input passenger's name or delete this field.\",\n                    },\n                  ]}\n                  noStyle\n                >\n                  <Input\n                    placeholder=\"passenger name\"\n                    style={{ width: \"60%\" }}\n                  />\n                </Form.Item>\n                {fields.length > 1 ? (\n                  <MinusCircleOutlined\n                    className=\"dynamic-delete-button\"\n                    onClick={() => remove(field.name)}\n                  />\n                ) : null}\n              </Form.Item>\n            ))}\n          </>\n        )}\n      </Form.List>\n      <Form.Item name=\" \" label=\" \">\n        <Button type=\"dashed\" onClick={onAddTag} style={{ width: \"60%\" }}>\n          <PlusOutlined /> Add Tag\n        </Button>\n      </Form.Item>\n      <Divider />\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save Form Data\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ImageThumb } from \"./ImageslistThumb\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport { useImageContext } from \"../../modules/ImageContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ImageForm } from \"./ImageForm\";\r\nimport Files from \"react-files\";\r\nimport {toast} from \"react-toast\";\r\nimport CSVReader from \"react-csv-reader\";\r\n\r\nconst parseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n};\r\n\r\nexport function Images({ collection }) {\r\n  const { images, removeImage, removeAllImages, updateImagesTokensIds, saveChanges, saveIPFSData, saveImage, loadImagesFromCSV } =\r\n    useImageContext();\r\n  const [editingImage, setEditingImage] = useState({});\r\n  const isNewImage = !editingImage.id && editingImage.id !== 0;\r\n  const dropId = parseInt(collection.dropId);\r\n  const showUpdateTokensButtons = !isNaN(dropId) && dropId > 0 && !collection.isRandom;\r\n\r\n  const onAddImage = useCallback(() => {\r\n    setEditingImage({\r\n      collection: collection.name,\r\n      subtitle: collection.name,\r\n    });\r\n  }, [setEditingImage]);\r\n\r\n  useEffect(() => {\r\n    setEditingImage((oldData) => ({\r\n      ...oldData,\r\n      collection: collection.name,\r\n      subtitle: collection.name,\r\n    }));\r\n  }, [collection]);\r\n\r\n  const onEditImage = useCallback(\r\n    (image) => {\r\n      setEditingImage(image);\r\n    },\r\n    [editingImage]\r\n  );\r\n\r\n  const onDownloadIPFS = useCallback(\r\n    (image) => {\r\n      saveIPFSData(image);\r\n    },\r\n    [saveIPFSData]\r\n  );\r\n\r\n  const onFileLoaded = useCallback(\r\n    async (file) => {\r\n      try {\r\n        console.log(file);\r\n        await loadImagesFromCSV(file);\r\n      } catch (err) {\r\n        console.log(err);\r\n        toast.error(\"Failed load images\");\r\n        toast.error(err.message);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Row className=\"justify-content-center align-content-center\">\r\n      <div className=\"d-flex justify-content-between align-items-center ms-5 me-5 ps-4\">\r\n        <h3>Images</h3>\r\n        {showUpdateTokensButtons && <Button onClick={updateImagesTokensIds} className={\"save-btn\"}>\r\n          Update Tokens Ids\r\n        </Button>}\r\n        <Button onClick={removeAllImages} className={\"save-btn\"}>\r\n          Remove All\r\n        </Button>\r\n      </div>\r\n      <div className=\"images-list-cont\">\r\n        {(images || []).map((image) => (\r\n          <ImageThumb\r\n            image={image}\r\n            onRemove={removeImage}\r\n            onEdit={onEditImage}\r\n            onDownloadIPFS={onDownloadIPFS}\r\n          />\r\n        ))}\r\n      </div>\r\n      <ImageForm image={editingImage} onSaveChanges={saveImage} />\r\n      <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n        <Col lg={3}>\r\n          <Button className={\"text-center\"} onClick={onAddImage}>\r\n            Add Image\r\n            <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\r\n          </Button>\r\n        </Col>\r\n        <Col lg={3}>\r\n          Load Images CSV File\r\n          <CSVReader\r\n            onFileLoaded={onFileLoaded}\r\n            parserOptions={parseOptions}\r\n          >\r\n          </CSVReader>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <Button onClick={saveChanges} className={\"save-btn\"}>\r\n            Save Changes\r\n          </Button>\r\n        </Col>\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n","import { Tab, Row, Tabs } from \"react-bootstrap\";\nimport { useCallback } from \"react\";\nimport { toast } from \"react-toast\";\nimport { CollectionGeneralData } from \"./CollectionGeneralData\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\nimport { DropPhases } from \"../phases/DropPhases\";\nimport { PhaseProvider } from \"../../modules/PhaseContext\";\nimport { on } from \"local-storage\";\nimport { Images } from \"../image-list/Images\";\nimport { ImageProvider, useImageContext } from \"../../modules/ImageContext\";\n\nexport function CollectionViewEdit({ collection }) {\n  const { updateCollection, categoryOptions } = useCollectionContext();\n\n  const onSaveChanges = useCallback(\n    async (item) => {\n      const isSavedSuccess = await updateCollection(item);\n      if (isSavedSuccess) {\n        toast.success(\"Collection updated\");\n      }\n    },\n    [updateCollection]\n  );\n\n  return (\n    <Row>\n      <Tabs\n        defaultActiveKey=\"general\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"general\" title=\"General\">\n          <CollectionGeneralData\n            collection={collection}\n            onSaveChanges={onSaveChanges}\n            categoryOptions={categoryOptions}\n          />\n        </Tab>\n        <Tab eventKey=\"dtopPhases\" title=\"Drop Phases\">\n          <PhaseProvider collection={collection} onSaveChanges={onSaveChanges}>\n            <DropPhases />\n          </PhaseProvider>\n        </Tab>\n        <Tab eventKey=\"images\" title=\"Images\">\n          <ImageProvider collection={collection}>\n            <Images collection={collection} />\n          </ImageProvider>\n        </Tab>\n      </Tabs>\n    </Row>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useCallback, useState } from \"react\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Accordion, Button, Col, Modal, Row } from \"react-bootstrap\";\nimport Files from \"react-files\";\nimport { toast } from \"react-toast\";\nimport { useCollectionContext } from \"../../modules/CollectionContext\";\nimport { CollectionThumb } from \"./CollectionThumb\";\nimport ConfirmationModal from \"../comnmon/ConfirmationModal\";\nimport { CollectionViewEdit } from \"./CollectionEditView\";\n\nexport function Collections({ onCollectionEdit }) {\n  const {\n    collections,\n    addCollection,\n    loadCollections,\n    removeCollection,\n    saveCollectionsData,\n    saveCollectionJSON,\n    clearAllCollectionData,\n  } = useCollectionContext();\n\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\n\n  const [confirmHandler, setConfirmHandler] = useState({ handler: () => {} });\n\n  const onConfirmation = useCallback(\n    (confirmed) => {\n      setShowConfirmPopup(false);\n      if (!confirmed) {\n        return;\n      }\n      confirmHandler.handler();\n    },\n    [setShowConfirmPopup, confirmHandler]\n  );\n\n  const onAddCollection = useCallback(() => {\n    addCollection();\n  }, [addCollection]);\n\n  const onLoadCollection = useCallback(async ([file]) => {\n    try {\n      await loadCollections(file);\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Failed load file\");\n      toast.error(err.message);\n    }\n  }, []);\n\n  const onCollectionShow = useCallback(\n    (collection) => {\n      onCollectionEdit(collection);\n    },\n    [onCollectionEdit]\n  );\n\n  const onSaveClicked = useCallback(() => {\n    saveCollectionJSON();\n  }, [saveCollectionJSON]);\n\n  const onRemoveCollection = useCallback((collectionId) => {\n    setShowConfirmPopup(true);\n    setConfirmHandler({ handler: () => removeCollection(collectionId) });\n  }, []);\n\n  const onClearAllData = useCallback(() => {\n    setShowConfirmPopup(true);\n    setConfirmHandler({ handler: () => clearAllCollectionData() });\n  }, [clearAllCollectionData]);\n\n  return (\n    <Row>\n      <h3>Collections</h3>\n      {!collections.length && (\n        <Row className=\"no-collections-container\">\n          You don't have any collections yet. Add it or load it from json file.\n        </Row>\n      )}\n      {collections.map((collection) => (\n        <CollectionThumb\n          collection={collection}\n          onShow={onCollectionShow}\n          onRemove={onRemoveCollection}\n        />\n      ))}\n      <Row className=\"mt-4\">\n        <Col>\n          <Button className={\"text-center\"} onClick={onAddCollection}>\n            Add Collection\n            <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n          </Button>\n        </Col>\n        <Col>\n          <Files\n            className=\"files-dropzone\"\n            onChange={onLoadCollection}\n            accepts={[\"json/text\", \".json\"]}\n            maxFileSize={10000000}\n            minFileSize={0}\n            clickable\n          >\n            <Button className={\"text-center\"}>\n              Load Collections File\n              <FontAwesomeIcon icon={faPlusCircle} className={\"clr pointer\"} />\n            </Button>\n          </Files>\n        </Col>\n        <Col>\n          <Button onClick={onSaveClicked} className={\"save-btn\"}>\n            Save As Json\n          </Button>\n        </Col>\n        <Col>\n          <Button onClick={onClearAllData} className={\"save-btn\"}>\n            Clear All Data\n          </Button>\n        </Col>\n      </Row>\n      <ConfirmationModal onConfirm={onConfirmation} show={showConfirmPopup} />\n    </Row>\n  );\n}\n","import { Button, Card, Col, Row } from \"react-bootstrap\";\n\nexport function ArtistThumb({ artist }) {\n  return (\n    <Card style={{ width: \"18rem\", margin: \"15px\", padding: 0 }}>\n      <Card.Header>\n        <Row>\n          <Col lg={10}>\n            <Card.Title className=\"img-title\">{artist.name}</Card.Title>\n            <p>{artist.nickname} {artist.website && <a href={artist.website} target=\"_blank\">{artist.website}</a>}</p>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Img variant=\"top\" src={artist.fullImageSrc} className=\"thumb-image\" />\n      <Card.Body>\n        <Card.Text>\n          <p>{artist.bio}</p>\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <Button variant=\"link\" href={`https://light.art/artists/${artist.url}`}>\n          View On Website\n        </Button>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {useCollectionContext} from \"../../modules/CollectionContext\";\nimport {ArtistThumb} from \"./ArtistsThumb\";\nimport {toast} from \"react-toast\";\nimport CSVReader from \"react-csv-reader\";\n\nconst parseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nexport function Artists({ collection }) {\n  const { artists, loadArtists } =\n    useCollectionContext();\n\n  const onLoadArtists = useCallback(async (fileData) => {\n    try {\n      await loadArtists(fileData);\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Failed load artists\");\n      toast.error(err.message);\n    }\n  }, []);\n\n  return (\n    <Row className=\"justify-content-center align-content-center\">\n      <div className=\"d-flex justify-content-between align-items-center ms-5 me-5 ps-4\">\n        <h3>Artists</h3>\n      </div>\n      <div className=\"images-list-cont\">\n        {(artists || []).map((artist) => (\n          <ArtistThumb\n            artist={artist}\n          />\n        ))}\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center mt-4 \">\n        <Col lg={3}>\n          Load Artists CSV File\n          <CSVReader\n            onFileLoaded={onLoadArtists}\n            parserOptions={parseOptions}\n          >\n          </CSVReader>\n        </Col>\n      </div>\n    </Row>\n  );\n}\n","import { useCallback, useState } from \"react\";\r\nimport { Accordion, Button, Col, Modal, Row, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CollectionViewEdit } from \"./collections-list/CollectionEditView\";\r\nimport { ImageProvider } from \"../modules/ImageContext\";\r\nimport { Images } from \"./image-list/Images\";\r\nimport { Collections } from \"./collections-list/Collections\";\r\nimport {Artists} from \"./artists/Artists\";\r\n\r\nexport function Main() {\r\n  const [editingCollection, setEditingCollection] = useState(null);\r\n  const [activeTabKey, setActiveTabKey] = useState('collections');\r\n\r\n  const onCollectionEdit = useCallback(\r\n    (collection) => {\r\n      setEditingCollection(collection);\r\n      setActiveTabKey('item');\r\n    },\r\n    [setEditingCollection, setActiveTabKey]\r\n  );\r\n\r\n  const onChangeTab = useCallback((value) => {\r\n    setActiveTabKey(value);\r\n  }, [setActiveTabKey]);\r\n\r\n  return (\r\n    <Row>\r\n      <Tabs\r\n        activeKey={activeTabKey}\r\n        className=\"mb-3\"\r\n        onSelect={onChangeTab}\r\n      >\r\n        <Tab eventKey=\"collections\" title=\"Collections\">\r\n          <Collections onCollectionEdit={onCollectionEdit} />\r\n        </Tab>\r\n        <Tab eventKey=\"artists\" title=\"Artists\">\r\n          <Artists/>\r\n        </Tab>\r\n        {editingCollection && <Tab eventKey=\"item\" title=\"Collection Item\" >\r\n          <CollectionViewEdit collection={editingCollection} />\r\n        </Tab>}\r\n      </Tabs>\r\n    </Row>\r\n  );\r\n}\r\n","import \"antd/dist/antd.css\";\nimport { Container } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { PhaseProvider } from \"./modules/PhaseContext\";\nimport { CollectionProvider } from \"./modules/CollectionContext\";\nimport { Collections } from \"./components/collections-list/Collections\";\nimport { ToastContainer } from \"react-toast\";\nimport { Main } from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Container className={\"big-container\"}>\n        <CollectionProvider>\n          <PhaseProvider>\n            <Main />\n          </PhaseProvider>\n        </CollectionProvider>\n      </Container>\n      <ToastContainer delay={6000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}